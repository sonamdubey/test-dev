// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EditCms.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EditCMSWindowsService.Messages {

  /// <summary>Holder for reflection information generated from EditCms.proto</summary>
  public static partial class EditCmsReflection {

    #region Descriptor
    /// <summary>File descriptor for EditCms.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EditCmsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1FZGl0Q21zLnByb3RvEhVFZGl0Q01TV2luZG93c1NlcnZpY2UigAEKD0dy",
            "cGNSb2FkVGVzdFVSSRIOCgZNYWtlSWQYASABKAUSDwoHTW9kZWxJZBgCIAEo",
            "BRIRCglWZXJzaW9uSWQYAyABKAUSEAoIVG9wQ291bnQYBCABKAUSFQoNQXBw",
            "bGljYXRpb25JZBgFIAEoBRIQCghDYXRlZ29yeRgGIAEoCSKqAQoTR3JwY1Jl",
            "bGF0ZWRQaG90b1VSSRIVCg1BcHBsaWNhdGlvbklkGAEgASgNEg8KB01vZGVs",
            "SWQYAiABKAUSFgoOQ2F0ZWdvcnlJZExpc3QYAyABKAkSEgoKUGxhdGZvcm1J",
            "ZBgEIAEoCRISCgpTdGFydEluZGV4GAUgASgNEhAKCEVuZEluZGV4GAYgASgN",
            "EhkKEVNpbWlsYXJNb2RlbHNMaXN0GAcgASgJIlMKEkdycGNNb2RlbERldGFp",
            "bFVSSRIOCgZNYWtlSWQYASABKAUSFQoNQXBwbGljYXRpb25JZBgCIAEoBRIW",
            "Cg5DYXRlZ29yeUlkTGlzdBgDIAEoCSJCChFHcnBjTWFrZURldGFpbFVSSRIV",
            "Cg1BcHBsaWNhdGlvbklkGAEgASgFEhYKDkNhdGVnb3J5SWRMaXN0GAIgASgJ",
            "IjMKB0dycGNJbnQSEQoJaW50T3V0cHV0GAEgASgFEhUKDUFwcGxpY2F0aW9u",
            "SWQYAiABKAUiTgoSR3JwY0NhclN5bm9wc2lzVVJJEg8KB01vZGVsSWQYASAB",
            "KAUSFQoNQXBwbGljYXRpb25JZBgCIAEoBRIQCghQcmlvcml0eRgDIAEoBSJ2",
            "ChJHcnBjQ29udGVudEZlZWRVUkkSDAoEU2x1ZxgBIAEoCRIVCg1TdWJDYXRl",
            "Z29yeUlkGAIgASgFEhUKDUFwcGxpY2F0aW9uSWQYAyABKAUSEgoKU3RhcnRJ",
            "bmRleBgEIAEoBRIQCghFbmRJbmRleBgFIAEoBSIeCghHcnBjQm9vbBISCgpi",
            "b29sT3V0cHV0GAEgASgIIk8KEUdycGNGZWF0dXJlQ2FyVVJJEhIKCnZlcnNp",
            "b25JZHMYASABKAkSEgoKY2F0ZWdvcnlJZBgCIAEoBRISCgpwbGF0Zm9ybUlk",
            "GAMgASgFImEKD0dycGNBcnRpY2xlQmFzZRIPCgdCYXNpY0lkGAEgASgEEg0K",
            "BVRpdGxlGAIgASgJEhIKCkFydGljbGVVcmwYAyABKAkSGgoSQ29tcGxldGVB",
            "cnRpY2xlVXJsGAQgASgJIkoKFkdycGNNYWtlQW5kTW9kZWxEZXRhaWwSDAoE",
            "VGV4dBgBIAEoCRINCgVWYWx1ZRgCIAEoBRITCgtNYXNraW5nTmFtZRgDIAEo",
            "CSKsAgoWR3JwY0NvbnRlbnRGZWVkU3VtbWFyeRIPCgdCYXNpY0lkGAEgASgE",
            "EhIKCkF1dGhvck5hbWUYAiABKAkSEwoLRGVzY3JpcHRpb24YAyABKAkSEwoL",
            "RGlzcGxheURhdGUYBCABKAkSDQoFVmlld3MYBSABKAQSDQoFVGl0bGUYBiAB",
            "KAkSCwoDVXJsGAcgASgJEhQKDE1haW5JbWFnZVNldBgIIAEoDRITCgtJc01h",
            "aW5JbWFnZRgJIAEoCBIaChJJbWFnZVBhdGhUaHVtYm5haWwYCiABKAkSFgoO",
            "SW1hZ2VQYXRoTGFyZ2UYCyABKAkSFwoPT3JpZ2luYWxJbWdQYXRoGAwgASgJ",
            "Eg8KB0hvc3RVcmwYDSABKAkSDwoHQ29udGVudBgOIAEoCSKjBAoSR3JwY0Fy",
            "dGljbGVTdW1tYXJ5EjsKC0FydGljbGVCYXNlGAEgASgLMiYuRWRpdENNU1dp",
            "bmRvd3NTZXJ2aWNlLkdycGNBcnRpY2xlQmFzZRISCgpDYXRlZ29yeUlkGAIg",
            "ASgNEg8KB0hvc3RVcmwYAyABKAkSEwoLTGFyZ2VQaWNVcmwYBCABKAkSEwoL",
            "U21hbGxQaWNVcmwYBSABKAkSFgoOT3JpZ2luYWxJbWdVcmwYBiABKAkSEwoL",
            "RGVzY3JpcHRpb24YByABKAkSEgoKQXV0aG9yTmFtZRgIIAEoCRITCgtEaXNw",
            "bGF5RGF0ZRgJIAEoCRINCgVWaWV3cxgKIAEoDRIQCghJc1N0aWNreRgLIAEo",
            "CBIcChRGYWNlYm9va0NvbW1lbnRDb3VudBgMIAEoDRIQCghNYWtlTmFtZRgN",
            "IAEoCRITCgtNYXNraW5nTmFtZRgOIAEoCRITCgtTdWJDYXRlZ29yeRgPIAEo",
            "CRIRCglNb2RlbE5hbWUYECABKAkSHAoURm9ybWF0dGVkRGlzcGxheURhdGUY",
            "ESABKAkSGQoRQXV0aG9yTWFza2luZ05hbWUYEiABKAkSEgoKSXNGZWF0dXJl",
            "ZBgTIAEoCBIbChNDYXRlZ29yeU1hc2tpbmdOYW1lGBQgASgJEg8KB0NhcHRp",
            "b24YFSABKAkSCwoDVGFnGBYgASgJEhUKDVN1YkNhdGVnb3J5SWQYFyABKA0i",
            "rQEKDkdycGNDTVNDb250ZW50EhMKC1JlY29yZENvdW50GAEgASgNEj8KCEFy",
            "dGljbGVzGAIgASgLMi0uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNBcnRp",
            "Y2xlU3VtbWFyeUxpc3QSRQoRTHN0R3JwY0NhdEFydGljbGUYAyADKAsyKi5F",
            "ZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0NhdEFydGljbGVDb3VudCI+ChNH",
            "cnBjQ2F0QXJ0aWNsZUNvdW50EhMKC1JlY29yZENvdW50GAEgASgNEhIKCkNh",
            "dGVnb3J5SWQYAiABKA0iTwoIR3JwY1BhZ2USDgoGcGFnZUlkGAEgASgEEhAK",
            "CFByaW9yaXR5GAIgASgNEhAKCFBhZ2VOYW1lGAMgASgJEg8KB0NvbnRlbnQY",
            "BCABKAkitAMKFkdycGNBcnRpY2xlUGFnZURldGFpbHMSQQoOQXJ0aWNsZVN1",
            "bW1hcnkYASABKAsyKS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0FydGlj",
            "bGVTdW1tYXJ5EjEKCFBhZ2VMaXN0GAIgAygLMh8uRWRpdENNU1dpbmRvd3NT",
            "ZXJ2aWNlLkdycGNQYWdlEhAKCFRhZ3NMaXN0GAMgAygJEj0KDlZlaGljbFRh",
            "Z3NMaXN0GAQgAygLMiUuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNWZWhp",
            "Y2xlVGFnEjsKC05leHRBcnRpY2xlGAUgASgLMiYuRWRpdENNU1dpbmRvd3NT",
            "ZXJ2aWNlLkdycGNBcnRpY2xlQmFzZRI7CgtQcmV2QXJ0aWNsZRgGIAEoCzIm",
            "LkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQXJ0aWNsZUJhc2USFgoOTWFp",
            "bkltZ0NhcHRpb24YByABKAkSFgoOSXNNYWluSW1hZ2VTZXQYCCABKAgSEwoL",
            "U2hvd0dhbGxlcnkYCSABKAgSFAoMQ2F0ZWdvcnlOYW1lGAogASgJImUKDEdy",
            "cGNDTVNJbWFnZRITCgtSZWNvcmRDb3VudBgBIAEoBRJAChFMc3RHcnBjTW9k",
            "ZWxJbWFnZRgCIAMoCzIlLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjTW9k",
            "ZWxJbWFnZSLpAgoSR3JwY0FydGljbGVEZXRhaWxzEg8KB0NvbnRlbnQYASAB",
            "KAkSEAoIVGFnc0xpc3QYAiADKAkSPQoOVmVoaWNsVGFnc0xpc3QYAyADKAsy",
            "JS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY1ZlaGljbGVUYWcSPgoLTmV4",
            "dEFydGljbGUYBCABKAsyKS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0Fy",
            "dGljbGVTdW1tYXJ5Ej4KC1ByZXZBcnRpY2xlGAUgASgLMikuRWRpdENNU1dp",
            "bmRvd3NTZXJ2aWNlLkdycGNBcnRpY2xlU3VtbWFyeRIWCg5NYWluSW1nQ2Fw",
            "dGlvbhgGIAEoCRIWCg5Jc01haW5JbWFnZVNldBgHIAEoCBJBCg5BcnRpY2xl",
            "U3VtbWFyeRgIIAEoCzIpLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQXJ0",
            "aWNsZVN1bW1hcnki1AEKDkdycGNWZWhpY2xlVGFnEj4KCE1ha2VCYXNlGAEg",
            "ASgLMiwuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNDYXJNYWtlRW50aXR5",
            "QmFzZRJACglNb2RlbEJhc2UYAiABKAsyLS5FZGl0Q01TV2luZG93c1NlcnZp",
            "Y2UuR3JwY0Nhck1vZGVsRW50aXR5QmFzZRJACgtWZXJzaW9uQmFzZRgDIAEo",
            "CzIrLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQ2FyVmVyc2lvbkVudGl0",
            "eSJRChZHcnBjQ2FyTW9kZWxFbnRpdHlCYXNlEg8KB01vZGVsSWQYASABKAUS",
            "EQoJTW9kZWxOYW1lGAIgASgJEhMKC01hc2tpbmdOYW1lGAMgASgJIkUKFEdy",
            "cGNDYXJWZXJzaW9uRW50aXR5EgoKAklkGAEgASgFEgwKBE5hbWUYAiABKAkS",
            "EwoLTWFza2luZ05hbWUYAyABKAkiOQoVR3JwY0Nhck1ha2VFbnRpdHlCYXNl",
            "Eg4KBk1ha2VJZBgBIAEoBRIQCghNYWtlTmFtZRgCIAEoCSKbAwoOR3JwY01v",
            "ZGVsSW1hZ2USDwoHSW1hZ2VJZBgBIAEoDRIPCgdIb3N0VXJsGAIgASgJEhoK",
            "EkltYWdlUGF0aFRodW1ibmFpbBgDIAEoCRIWCg5JbWFnZVBhdGhMYXJnZRgE",
            "IAEoCRIXCg9PcmlnaW5hbEltZ1BhdGgYBSABKAkSGQoRTWFpbkltZ0NhdGVn",
            "b3J5SWQYBiABKAUSFQoNSW1hZ2VDYXRlZ29yeRgHIAEoCRIPCgdDYXB0aW9u",
            "GAggASgJEhEKCUltYWdlTmFtZRgJIAEoCRIUCgxBbHRJbWFnZU5hbWUYCiAB",
            "KAkSEgoKSW1hZ2VUaXRsZRgLIAEoCRIYChBJbWFnZURlc2NyaXB0aW9uGAwg",
            "ASgJEj4KCE1ha2VCYXNlGA0gASgLMiwuRWRpdENNU1dpbmRvd3NTZXJ2aWNl",
            "LkdycGNDYXJNYWtlRW50aXR5QmFzZRJACglNb2RlbEJhc2UYDiABKAsyLS5F",
            "ZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0Nhck1vZGVsRW50aXR5QmFzZSLE",
            "AQoTR3JwY0FydGljbGVCeUNhdFVSSRIWCg5DYXRlZ29yeUlkTGlzdBgBIAEo",
            "CRIVCg1BcHBsaWNhdGlvbklkGAIgASgNEhIKClN0YXJ0SW5kZXgYAyABKA0S",
            "EAoIRW5kSW5kZXgYBCABKA0SDgoGTWFrZUlkGAUgASgFEg8KB01vZGVsSWQY",
            "BiABKAUSDwoHQmFzaWNJZBgHIAEoBRIUCgxCb2R5U3R5bGVJZHMYCCABKAkS",
            "EAoITW9kZWxJZHMYCSABKAkiPwoVR3JwY0FydGljbGVDb250ZW50VVJJEg8K",
            "B0Jhc2ljSWQYASABKAQSFQoNQXBwbGljYXRpb25JZBgCIAEoDSJnChFHcnBj",
            "TW9kZWxQaG90b1VSSRIVCg1BcHBsaWNhdGlvbklkGAEgASgNEg8KB01vZGVs",
            "SWQYAiABKAUSFgoOQ2F0ZWdvcnlJZExpc3QYAyABKAkSEgoKUGxhdGZvcm1J",
            "ZBgEIAEoCSKiAQoUR3JwY0FydGljbGVSZWNlbnRVUkkSFQoNQXBwbGljYXRp",
            "b25JZBgBIAEoDRIUCgxDb250ZW50VHlwZXMYAiABKAkSFAoMVG90YWxSZWNv",
            "cmRzGAMgASgNEg4KBk1ha2VJZBgEIAEoBRIPCgdNb2RlbElkGAUgASgFEhQK",
            "DEJvZHlTdHlsZUlkcxgGIAEoCRIQCghNb2RlbElkcxgHIAEoCSJsCg9HcnBj",
            "Q2FyU3lub3BzaXMSEwoLRGVzY3JpcHRpb24YASABKAkSDwoHTW9kZWxJZBgC",
            "IAEoBRIPCgdDb250ZW50GAMgASgJEhAKCFBhZ2VOYW1lGAQgASgJEhAKCFBy",
            "aW9yaXR5GAUgASgFIm4KGkdycGNNYWtlQW5kTW9kZWxEZXRhaWxMaXN0ElAK",
            "GUxzdEdycGNNYWtlQW5kTW9kZWxEZXRhaWwYASADKAsyLS5FZGl0Q01TV2lu",
            "ZG93c1NlcnZpY2UuR3JwY01ha2VBbmRNb2RlbERldGFpbCJuChpHcnBjQ29u",
            "dGVudEZlZWRTdW1tYXJ5TGlzdBJQChlMc3RHcnBjQ29udGVudEZlZWRTdW1t",
            "YXJ5GAEgAygLMi0uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNDb250ZW50",
            "RmVlZFN1bW1hcnkiYgoWR3JwY0FydGljbGVTdW1tYXJ5TGlzdBJIChVMc3RH",
            "cnBjQXJ0aWNsZVN1bW1hcnkYASADKAsyKS5FZGl0Q01TV2luZG93c1NlcnZp",
            "Y2UuR3JwY0FydGljbGVTdW1tYXJ5IlYKEkdycGNNb2RlbEltYWdlTGlzdBJA",
            "ChFMc3RHcnBjTW9kZWxJbWFnZRgBIAMoCzIlLkVkaXRDTVNXaW5kb3dzU2Vy",
            "dmljZS5HcnBjTW9kZWxJbWFnZSKVAwoJR3JwY1ZpZGVvEhIKClZpZGVvVGl0",
            "bGUYASABKAkSEAoIVmlkZW9VcmwYAiABKAkSDwoHVmlkZW9JZBgDIAEoCRIN",
            "CgVWaWV3cxgEIAEoBRINCgVMaWtlcxgFIAEoBRITCgtEZXNjcmlwdGlvbhgG",
            "IAEoCRIPCgdCYXNpY0lkGAcgASgFEgwKBFRhZ3MYCCABKAkSEAoIRHVyYXRp",
            "b24YCSABKAUSEAoITWFrZU5hbWUYCyABKAkSEQoJTW9kZWxOYW1lGAwgASgJ",
            "EhMKC01hc2tpbmdOYW1lGA0gASgJEhAKCFN1YkNhdElkGA4gASgJEhIKClN1",
            "YkNhdE5hbWUYDyABKAkSFQoNVmlkZW9UaXRsZVVybBgQIAEoCRIPCgdJbWdI",
            "b3N0GBEgASgJEhUKDVRodW1ibmFpbFBhdGgYEiABKAkSEQoJSW1hZ2VQYXRo",
            "GBMgASgJEhMKC0Rpc3BsYXlEYXRlGBQgASgJEhIKCklzRmVhdHVyZWQYFSAB",
            "KAgSEgoKQ2F0ZWdvcnlJZBgWIAEoBSKMAQoTR3JwY1ZpZGVvTGlzdEVudGl0",
            "eRI1CgZWaWRlb3MYASABKAsyJS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3Jw",
            "Y1ZpZGVvc0xpc3QSFAoMVG90YWxSZWNvcmRzGAIgASgFEhMKC1ByZXZQYWdl",
            "VXJsGAMgASgJEhMKC05leHRQYWdlVXJsGAQgASgJIkkKDkdycGNWaWRlb3NM",
            "aXN0EjcKDUxzdEdycGNWaWRlb3MYASADKAsyIC5FZGl0Q01TV2luZG93c1Nl",
            "cnZpY2UuR3JwY1ZpZGVvIqcBChpHcnBjVmlkZW9zQnlTdWJDYXRlZ29yeVVS",
            "SRIVCg1TdWJDYXRlZ29yeUlkGAEgASgNEhUKDUFwcGxpY2F0aW9uSWQYAiAB",
            "KA0SEgoKU3RhcnRJbmRleBgDIAEoDRIQCghFbmRJbmRleBgEIAEoDRIPCgdN",
            "b2RlbElkGAUgASgNEg4KBk1ha2VJZBgGIAEoDRIUCgxCb2R5U3R5bGVJZHMY",
            "ByABKAkiiQEKEUdycGNWaWRlb3NCeUlkVVJJEgoKAklkGAEgASgFEhUKDUFw",
            "cGxpY2F0aW9uSWQYAiABKA0SEgoKU3RhcnRJbmRleBgDIAEoDRIQCghFbmRJ",
            "bmRleBgEIAEoDRIVCg1TaW1pbGFyTW9kZWxzGAUgASgJEhQKDEJvZHlTdHls",
            "ZUlkcxgGIAEoCSLzAQocR3JwY1ZpZGVvc0J5U3ViQ2F0ZWdvcmllc1VSSRIW",
            "Cg5TdWJDYXRlZ29yeUlkcxgBIAEoCRIVCg1BcHBsaWNhdGlvbklkGAIgASgN",
            "EhIKClN0YXJ0SW5kZXgYAyABKA0SEAoIRW5kSW5kZXgYBCABKA0SRwoMU29y",
            "dENhdGVnb3J5GAUgASgOMjEuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNW",
            "aWRlb1NvcnRPcmRlckNhdGVnb3J5Eg4KBk1ha2VJZBgGIAEoBRIPCgdNb2Rl",
            "bElkGAcgASgFEhQKDEJvZHlTdHlsZUlkcxgIIAEoCSKWAQoPRWRpdENNU0Nh",
            "dGVnb3J5EjwKCENhdGVnb3J5GAEgASgOMiouRWRpdENNU1dpbmRvd3NTZXJ2",
            "aWNlLkVkaXRDTVNDYXRlZ29yeUVudW0SDgoGTWFrZUlkGAIgASgFEg8KB01v",
            "ZGVsSWQYAyABKAUSDwoHQmFzaWNJZBgEIAEoBRITCgtCb2R5U3R5bGVJZBgF",
            "IAEoBSKjAQoWR3JwY0FydGljbGVCeVN1YkNhdFVSSRIWCg5DYXRlZ29yeUlk",
            "TGlzdBgBIAEoCRITCgtTdWJDYXRlZ29yeRgCIAEoCRIVCg1BcHBsaWNhdGlv",
            "bklkGAMgASgNEhIKClN0YXJ0SW5kZXgYBCABKA0SEAoIRW5kSW5kZXgYBSAB",
            "KA0SDgoGTWFrZUlkGAYgASgFEg8KB01vZGVsSWQYByABKAUiPAoVUmVsYXRl",
            "ZE1vZGVsVmlkZW9zVVJJEgwKBFRhZ3MYASABKAkSFQoNQXBwbGljYXRpb25J",
            "ZBgCIAEoBSJoChZHcnBjUmVsYXRlZEFydGljbGVzVVJJEhUKDUFwcGxpY2F0",
            "aW9uSWQYASABKA0SFAoMQ29udGVudFR5cGVzGAIgASgJEgsKA1RhZxgDIAEo",
            "CRIUCgxUb3RhbFJlY29yZHMYBCABKA0idQoaR3JwY1BvcHVsYXJNb2RlbFBo",
            "b3Rvc0RhdGESQgoOTW9kZWxQaG90b0xpc3QYASABKAsyKi5FZGl0Q01TV2lu",
            "ZG93c1NlcnZpY2UuR3JwY01vZGVsUGhvdG9zTGlzdBITCgtSZWNvcmRDb3Vu",
            "dBgCIAEoBSJzChlHcnBjUG9wdWxhck1vZGVsVmlkZW9EYXRhEkEKDk1vZGVs",
            "VmlkZW9MaXN0GAEgASgLMikuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNN",
            "b2RlbFZpZGVvTGlzdBITCgtSZWNvcmRDb3VudBgCIAEoBSL2AQoTR3JwY01h",
            "a2VNb2RlbEVudGl0eRIOCgZNYWtlSWQYASABKAUSDwoHTW9kZWxJZBgCIAEo",
            "BRIQCghNYWtlTmFtZRgDIAEoCRIRCglNb2RlbE5hbWUYBCABKAkSGAoQTW9k",
            "ZWxNYXNraW5nTmFtZRgFIAEoCRINCgVJc05ldxgGIAEoDRIUCgxJc0Z1dHVy",
            "aXN0aWMYByABKA0SHgoWSXMzNjBFeHRlcmlvckF2YWlsYWJsZRgIIAEoCBIa",
            "ChJJczM2ME9wZW5BdmFpbGFibGUYCSABKAgSHgoWSXMzNjBJbnRlcmlvckF2",
            "YWlsYWJsZRgKIAEoCCL7AQoOR3JwY01vZGVsVmlkZW8SQwoPTWFrZU1vZGVs",
            "RW50aXR5GAEgASgLMiouRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNNYWtl",
            "TW9kZWxFbnRpdHkSDwoHVmlkZW9JZBgCIAEoCRISCgpWaWRlb0NvdW50GAMg",
            "ASgFEhcKD1N1YkNhdGVnb3J5TmFtZRgEIAEoCRIPCgdCYXNpY0lkGAUgASgF",
            "Eg0KBVRpdGxlGAYgASgJEhAKCFZpZGVvVXJsGAcgASgJEhMKC0Rpc3BsYXlE",
            "YXRlGAggASgJEg0KBVZpZXdzGAkgASgFEhAKCER1cmF0aW9uGAogASgFIq4B",
            "Cg9HcnBjTW9kZWxQaG90b3MSQwoPTWFrZU1vZGVsRW50aXR5GAEgASgLMiou",
            "RWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNNYWtlTW9kZWxFbnRpdHkSDwoH",
            "SG9zdFVSTBgCIAEoCRIXCg9PcmlnaW5hbEltZ1BhdGgYAyABKAkSEgoKSW1h",
            "Z2VDb3VudBgEIAEoCRIYChBHYWxsZXJ5SW1hZ2VQYXRoGAUgASgJIogCChJH",
            "cnBjUG9wdWxhckNhckRhdGESCgoCSWQYASABKAUSEAoITWFrZU5hbWUYAiAB",
            "KAkSEQoJTW9kZWxOYW1lGAMgASgJEhMKC01hc2tpbmdOYW1lGAQgASgJEhAK",
            "CExhcmdlUGljGAUgASgJEhAKCFNtYWxsUGljGAYgASgJEhIKClJldmlld1Jh",
            "dGUYByABKAkSEwoLUmV2aWV3Q291bnQYCCABKAUSEAoITWluUHJpY2UYCSAB",
            "KAUSEAoITWF4UHJpY2UYCiABKAUSDwoHSG9zdFVybBgLIAEoCRIXCg9Pcmln",
            "aW5hbEltZ3BhdGgYDCABKAkSEQoJU29ydG9yZGVyGA0gASgFIqMCChBHcnBj",
            "VmlkZW9zRW50aXR5Eg0KBVRpdGxlGAEgASgJEg0KBVZpZXdzGAIgASgFEg0K",
            "BUxpa2VzGAMgASgFEhMKC0Rlc2NyaXB0aW9uGAQgASgJEg8KB1ZpZGVvSWQY",
            "BSABKAkSEAoIVmlkZW9TcmMYBiABKAkSEwoLUHVibGlzaERhdGUYByABKAkS",
            "EAoISXNTdGlja3kYCCABKAgSEgoKUG9wdWxhcml0eRgJIAEoBRIQCghNYWtl",
            "TmFtZRgKIAEoCRIRCglNb2RlbE5hbWUYCyABKAkSEwoLTWFza2luZ05hbWUY",
            "DCABKAkSEgoKU3ViQ2F0TmFtZRgNIAEoCRIQCghTdWJDYXRJZBgOIAEoBRIP",
            "CgdCYXNpY0lkGA8gASgJIlUKFkdldFNwb25zb3JlZEFydGljbGVVUkkSFAoM",
            "Q2F0ZWdvcnlMaXN0GAEgASgJEg4KBkF1dGhvchgCIAEoCRIVCg1BcHBsaWNh",
            "dGlvbklkGAMgASgFIlMKFEdldFJlbGF0ZWRDb250ZW50VVJJEg8KB0Jhc2lj",
            "SWQYASABKAUSEwoLUmVjb3JkQ291bnQYAiABKAUSFQoNQXBwbGljYXRpb25J",
            "ZBgDIAEoBSI4CgxHcnBjU21hbGxJbnQSEQoJaW50T3V0cHV0GAEgASgFEhUK",
            "DUFwcGxpY2F0aW9uSWQYAiABKAUiagoaR3JwY01ha2VNb2RlbEFwcGxpY2F0",
            "aW9uSUQSDgoGTWFrZUlkGAEgASgFEg8KB01vZGVsSWQYAiABKAUSFQoNQXBw",
            "bGljYXRpb25JZBgDIAEoBRIUCgxHZXRBbGxWaWRlb3MYBCABKAgiWQoSR3Jw",
            "Y0NNU1N1YkNhdGVnb3J5EhUKDVN1YkNhdGVnb3J5SWQYASABKAUSFwoPU3Vi",
            "Q2F0ZWdvcnlOYW1lGAIgASgJEhMKC1JlY29yZENvdW50GAMgASgFIuMCChNH",
            "cnBjQ2FyTW9kZWxEZXRhaWxzEkMKD0Nhck1vZGVsU3VtbWFyeRgBIAEoCzIq",
            "LkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQ2FyTW9kZWxTdW1tYXJ5EhAK",
            "CE1ha2VOYW1lGAIgASgJEhcKD01vZGVsSW1hZ2VTbWFsbBgDIAEoCRIXCg9N",
            "b2RlbEltYWdlTGFyZ2UYBCABKAkSDgoGTWFrZUlkGAUgASgFEgwKBFVzZWQY",
            "BiABKAUSEgoKRnV0dXJpc3RpYxgHIAEoCBIOCgZSb290SWQYCCABKAUSEgoK",
            "VmlkZW9Db3VudBgJIAEoBRIQCghDYXJDb3VudBgKIAEoBRIXCg9PcmlnaW5h",
            "bEltZ1BhdGgYCyABKAkSEwoLQm9keVN0eWxlSWQYDCABKAUSFAoMU3ViU2Vn",
            "bWVudElkGA0gASgFEhcKD01vZGVsUG9wdWxhcml0eRgOIAEoBSKyBAoTR3Jw",
            "Y0Nhck1vZGVsU3VtbWFyeRIRCglNb2RlbE5hbWUYASABKAkSEwoLTWFza2lu",
            "Z05hbWUYAiABKAkSEwoLTW9kZWxSYXRpbmcYAyABKAESEwoLRnVlbEVjb25v",
            "bXkYBCABKAESFQoNVmFsdWVGb3JNb25leRgFIAEoARIPCgdDb21mb3J0GAYg",
            "ASgBEhMKC1BlcmZvcm1hbmNlGAcgASgBEg0KBUxvb2tzGAggASgBEhMKC1Jl",
            "dmlld0NvdW50GAkgASgFEhAKCE1pblByaWNlGAogASgBEhAKCE1heFByaWNl",
            "GAsgASgBEhMKC01pbkF2Z1ByaWNlGAwgASgFEhIKCk1vZGVsSW1hZ2UYDSAB",
            "KAkSEgoKTGFyZ2VJbWFnZRgOIAEoCRITCgtYTGFyZ2VJbWFnZRgPIAEoCRIP",
            "CgdIb3N0VXJsGBAgASgJEhUKDU9yaWdpbmFsSW1hZ2UYESABKAkSDwoHTW9k",
            "ZWxJZBgSIAEoBRILCgNOZXcYEyABKAgSEwoLT2ZmZXJFeGlzdHMYFCABKAgS",
            "DgoGTWFrZUlkGBUgASgFEkMKD0Rpc2NvdW50U3VtbWFyeRgWIAEoCzIqLkVk",
            "aXRDTVNXaW5kb3dzU2VydmljZS5HcnBjRGlzY291bnRTdW1tYXJ5EkIKEENh",
            "clByaWNlT3ZlcnZpZXcYFyABKAsyKC5FZGl0Q01TV2luZG93c1NlcnZpY2Uu",
            "R3JwY1ByaWNlT3ZlcnZpZXciqgEKE0dycGNEaXNjb3VudFN1bW1hcnkSEwoL",
            "TWF4RGlzY291bnQYASABKAUSEwoLTWFza2luZ05hbWUYAiABKAkSEgoKRGVh",
            "bHNDb3VudBgDIAEoBRIOCgZDaXR5SWQYBCABKA0SDwoHTW9kZWxJZBgFIAEo",
            "BRIRCglWZXJzaW9uSWQYBiABKAUSEQoJTW9kZWxOYW1lGAcgASgJEg4KBk9m",
            "ZmVycxgIIAEoCSKpAQoRR3JwY1ByaWNlT3ZlcnZpZXcSDQoFUHJpY2UYASAB",
            "KAUSEgoKUHJpY2VMYWJlbBgCIAEoCRIZChFQcmljZVZlcnNpb25Db3VudBgD",
            "IAEoBRITCgtQcmljZVN0YXR1cxgEIAEoBRISCgpSZWFzb25UZXh0GAUgASgJ",
            "Ei0KBENpdHkYBiABKAsyHy5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0Np",
            "dHkiiAEKCEdycGNDaXR5Eg4KBkNpdHlJZBgBIAEoBRIQCghDaXR5TmFtZRgC",
            "IAEoCRIVCg1Hcm91cE1hc3RlcklkGAMgASgFEhEKCUdyb3VwTmFtZRgEIAEo",
            "CRIwCgVTdGF0ZRgFIAEoCzIhLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBj",
            "U3RhdGVzIjAKCkdycGNTdGF0ZXMSDwoHU3RhdGVJZBgBIAEoBRIRCglTdGF0",
            "ZU5hbWUYAiABKAkibAoTR3JwY1JlbGF0ZWRBcnRpY2xlcxISCgpDYXRlZ29y",
            "eUlkGAEgASgFEhsKE0NhdGVnb3J5TWFza2luZ05hbWUYAiABKAkSDwoHQmFz",
            "aWNJZBgDIAEoBRITCgtQYXJlbnRDYXRJZBgEIAEoBSK/AgoKR3JwY0F1dGhv",
            "chISCgpBdXRob3JOYW1lGAEgASgJEhQKDFByb2ZpbGVJbWFnZRgCIAEoCRIT",
            "CgtEZXNpZ25hdGlvbhgDIAEoCRIYChBTaG9ydERlc2NyaXB0aW9uGAQgASgJ",
            "EhMKC01hc2tpbmdOYW1lGAUgASgJEg8KB0hvc3RVcmwYBiABKAkSEQoJSW1h",
            "Z2VOYW1lGAcgASgJEhcKD0Z1bGxEZXNjcmlwdGlvbhgIIAEoCRIPCgdFbWFp",
            "bElkGAkgASgJEhcKD0ZhY2Vib29rUHJvZmlsZRgKIAEoCRIZChFHb29nbGVQ",
            "bHVzUHJvZmlsZRgLIAEoCRIXCg9MaW5rZWRJblByb2ZpbGUYDCABKAkSFgoO",
            "VHdpdHRlclByb2ZpbGUYDSABKAkSEAoIQXV0aG9ySWQYDiABKA0iSgoOR3Jw",
            "Y0F1dGhvckxpc3QSOAoNTHN0R3JwY0F1dGhvchgBIAMoCzIhLkVkaXRDTVNX",
            "aW5kb3dzU2VydmljZS5HcnBjQXV0aG9yIlYKEkdycGNNb2RlbFZpZGVvTGlz",
            "dBJAChFMc3RHcnBjTW9kZWxWaWRlbxgBIAMoCzIlLkVkaXRDTVNXaW5kb3dz",
            "U2VydmljZS5HcnBjTW9kZWxWaWRlbyJcChRHcnBjVmlkZW9zRW50aXR5TGlz",
            "dBJEChNMc3RHcnBjVmlkZW9zRW50aXR5GAEgAygLMicuRWRpdENNU1dpbmRv",
            "d3NTZXJ2aWNlLkdycGNWaWRlb3NFbnRpdHkiYgoWR3JwY0NNU1N1YkNhdGVn",
            "b3J5TGlzdBJIChVMc3RHcnBjQ01TU3ViQ2F0ZWdvcnkYASADKAsyKS5FZGl0",
            "Q01TV2luZG93c1NlcnZpY2UuR3JwY0NNU1N1YkNhdGVnb3J5ImUKF0dycGNS",
            "ZWxhdGVkQXJ0aWNsZXNMaXN0EkoKFkxzdEdycGNSZWxhdGVkQXJ0aWNsZXMY",
            "ASADKAsyKi5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY1JlbGF0ZWRBcnRp",
            "Y2xlcyJiChZHcnBjUG9wdWxhckNhckRhdGFMaXN0EkgKFUxzdEdycGNQb3B1",
            "bGFyQ2FyRGF0YRgBIAMoCzIpLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBj",
            "UG9wdWxhckNhckRhdGEiWQoTR3JwY01vZGVsUGhvdG9zTGlzdBJCChJMc3RH",
            "cnBjTW9kZWxQaG90b3MYASADKAsyJi5FZGl0Q01TV2luZG93c1NlcnZpY2Uu",
            "R3JwY01vZGVsUGhvdG9zIlYKFkdycGNDb250ZW50QnlBdXRob3JVUkkSEAoI",
            "QXV0aG9ySWQYASABKAUSFQoNQXBwbGljYXRpb25JZBgCIAEoBRITCgtDYXRl",
            "Z29yeWlkcxgDIAEoCSJfChVHcnBjQXV0aG9yQ29udGVudExpc3QSRgoUTHN0",
            "R3JwY0F1dGhvckNvbnRlbnQYASADKAsyKC5FZGl0Q01TV2luZG93c1NlcnZp",
            "Y2UuR3JwY0F1dGhvckNvbnRlbnQiewoRR3JwY0F1dGhvckNvbnRlbnQSDQoF",
            "VGl0bGUYASABKAkSCwoDVXJsGAIgASgJEhMKC01hc2tpbmdOYW1lGAMgASgJ",
            "EhAKCE1ha2VOYW1lGAQgASgJEhIKCkNhdGVnb3J5SWQYBSABKAUSDwoHQmFz",
            "aWNJZBgGIAEoBSphChNFZGl0Q01TQ2F0ZWdvcnlFbnVtEggKBE5ld3MQABIR",
            "Cg1FeHBlcnRSZXZpZXdzEAESDAoIRmVhdHVyZXMQAhIKCgZWaWRlb3MQAxIH",
            "CgNBbGwQBBIKCgZQaG90b3MQBSpUChpHcnBjVmlkZW9Tb3J0T3JkZXJDYXRl",
            "Z29yeRIVChFGZWF0dXJlZEFuZExhdGVzdBAAEg8KC01vc3RQb3B1bGFyEAES",
            "DgoKSnVzdExhdGVzdBACMsMnChJFZGl0Q01TR3JwY1NlcnZpY2USdQoVR2V0",
            "TW9zdFJlY2VudEFydGljbGVzEisuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdy",
            "cGNBcnRpY2xlUmVjZW50VVJJGi0uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdy",
            "cGNBcnRpY2xlU3VtbWFyeUxpc3QiABJvChhHZXRDb250ZW50TGlzdEJ5Q2F0",
            "ZWdvcnkSKi5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0FydGljbGVCeUNh",
            "dFVSSRolLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQ01TQ29udGVudCIA",
            "Em4KEUdldENvbnRlbnREZXRhaWxzEiwuRWRpdENNU1dpbmRvd3NTZXJ2aWNl",
            "LkdycGNBcnRpY2xlQ29udGVudFVSSRopLkVkaXRDTVNXaW5kb3dzU2Vydmlj",
            "ZS5HcnBjQXJ0aWNsZURldGFpbHMiABJwCg9HZXRDb250ZW50UGFnZXMSLC5F",
            "ZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0FydGljbGVDb250ZW50VVJJGi0u",
            "RWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNBcnRpY2xlUGFnZURldGFpbHMi",
            "ABJrChJHZXRNb2RlbFBob3Rvc0xpc3QSKC5FZGl0Q01TV2luZG93c1NlcnZp",
            "Y2UuR3JwY01vZGVsUGhvdG9VUkkaKS5FZGl0Q01TV2luZG93c1NlcnZpY2Uu",
            "R3JwY01vZGVsSW1hZ2VMaXN0IgASbQoQR2V0QXJ0aWNsZVBob3RvcxIsLkVk",
            "aXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQXJ0aWNsZUNvbnRlbnRVUkkaKS5F",
            "ZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY01vZGVsSW1hZ2VMaXN0IgASdAoW",
            "R2V0VmlkZW9zQnlTdWJDYXRlZ29yeRIxLkVkaXRDTVNXaW5kb3dzU2Vydmlj",
            "ZS5HcnBjVmlkZW9zQnlTdWJDYXRlZ29yeVVSSRolLkVkaXRDTVNXaW5kb3dz",
            "U2VydmljZS5HcnBjVmlkZW9zTGlzdCIAEn0KGEdldFZpZGVvc0J5U3ViQ2F0",
            "ZWdvcmllcxIzLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjVmlkZW9zQnlT",
            "dWJDYXRlZ29yaWVzVVJJGiouRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNW",
            "aWRlb0xpc3RFbnRpdHkiABJnChJHZXRWaWRlb3NCeU1vZGVsSWQSKC5FZGl0",
            "Q01TV2luZG93c1NlcnZpY2UuR3JwY1ZpZGVvc0J5SWRVUkkaJS5FZGl0Q01T",
            "V2luZG93c1NlcnZpY2UuR3JwY1ZpZGVvc0xpc3QiABJmChFHZXRWaWRlb3NC",
            "eU1ha2VJZBIoLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjVmlkZW9zQnlJ",
            "ZFVSSRolLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjVmlkZW9zTGlzdCIA",
            "EmUKEEdldFNpbWlsYXJWaWRlb3MSKC5FZGl0Q01TV2luZG93c1NlcnZpY2Uu",
            "R3JwY1ZpZGVvc0J5SWRVUkkaJS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3Jw",
            "Y1ZpZGVvc0xpc3QiABJhChFHZXRWaWRlb0J5QmFzaWNJZBIoLkVkaXRDTVNX",
            "aW5kb3dzU2VydmljZS5HcnBjVmlkZW9zQnlJZFVSSRogLkVkaXRDTVNXaW5k",
            "b3dzU2VydmljZS5HcnBjVmlkZW8iABJRCg1DaGVja0hlYXJ0Qml0Eh4uRWRp",
            "dENNU1dpbmRvd3NTZXJ2aWNlLkdycGNJbnQaHi5FZGl0Q01TV2luZG93c1Nl",
            "cnZpY2UuR3JwY0ludCIAEl8KEkNsZWFyTWVtY2FjaGVkS2V5cxImLkVkaXRD",
            "TVNXaW5kb3dzU2VydmljZS5FZGl0Q01TQ2F0ZWdvcnkaHy5FZGl0Q01TV2lu",
            "ZG93c1NlcnZpY2UuR3JwY0Jvb2wiABJdChBDbGVhckNhcndhbGVLZXlzEiYu",
            "RWRpdENNU1dpbmRvd3NTZXJ2aWNlLkVkaXRDTVNDYXRlZ29yeRofLkVkaXRD",
            "TVNXaW5kb3dzU2VydmljZS5HcnBjQm9vbCIAEnwKFkdldENvbnRlbnRTZWdt",
            "ZW50Q291bnQSMS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY01ha2VNb2Rl",
            "bEFwcGxpY2F0aW9uSUQaLS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0NN",
            "U1N1YkNhdGVnb3J5TGlzdCIAEmsKE0dldENNU1N1YmNhdGVnb3JpZXMSIy5F",
            "ZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY1NtYWxsSW50Gi0uRWRpdENNU1dp",
            "bmRvd3NTZXJ2aWNlLkdycGNDTVNTdWJDYXRlZ29yeUxpc3QiABJyChFHZXRS",
            "ZWxhdGVkQ29udGVudBIrLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HZXRSZWxh",
            "dGVkQ29udGVudFVSSRouLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjUmVs",
            "YXRlZEFydGljbGVzTGlzdCIAEmoKFkdldFJlbGF0ZWRWaWRlb0NvbnRlbnQS",
            "Hi5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0ludBouLkVkaXRDTVNXaW5k",
            "b3dzU2VydmljZS5HcnBjUmVsYXRlZEFydGljbGVzTGlzdCIAEnQKEkdldFJl",
            "bGF0ZWRBcnRpY2xlcxItLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjUmVs",
            "YXRlZEFydGljbGVzVVJJGi0uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNB",
            "cnRpY2xlU3VtbWFyeUxpc3QiABJ0ChVHZXRSZWxhdGVkTW9kZWxWaWRlb3MS",
            "LC5FZGl0Q01TV2luZG93c1NlcnZpY2UuUmVsYXRlZE1vZGVsVmlkZW9zVVJJ",
            "GisuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNWaWRlb3NFbnRpdHlMaXN0",
            "IgASawoXR2V0VG9wQXJ0aWNsZXNCeUJhc2ljSWQSHi5FZGl0Q01TV2luZG93",
            "c1NlcnZpY2UuR3JwY0ludBouLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBj",
            "UmVsYXRlZEFydGljbGVzTGlzdCIAEnEKE0dldFNwb25zb3JlZEFydGljbGUS",
            "LS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR2V0U3BvbnNvcmVkQXJ0aWNsZVVS",
            "SRopLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQXJ0aWNsZVN1bW1hcnki",
            "ABJYChRHZXRBcnRpY2xlVmlld3NDb3VudBIeLkVkaXRDTVNXaW5kb3dzU2Vy",
            "dmljZS5HcnBjSW50Gh4uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNJbnQi",
            "ABKEAQoaR2V0UG9wdWxhck1vZGVsUGhvdG9zQ291bnQSMS5FZGl0Q01TV2lu",
            "ZG93c1NlcnZpY2UuR3JwY01ha2VNb2RlbEFwcGxpY2F0aW9uSUQaMS5FZGl0",
            "Q01TV2luZG93c1NlcnZpY2UuR3JwY1BvcHVsYXJNb2RlbFBob3Rvc0RhdGEi",
            "ABKCAQoZR2V0UG9wdWxhck1vZGVsVmlkZW9Db3VudBIxLkVkaXRDTVNXaW5k",
            "b3dzU2VydmljZS5HcnBjTWFrZU1vZGVsQXBwbGljYXRpb25JRBowLkVkaXRD",
            "TVNXaW5kb3dzU2VydmljZS5HcnBjUG9wdWxhck1vZGVsVmlkZW9EYXRhIgAS",
            "dwodR2V0Q29udGVudExpc3RCeVN1YkNhdGVnb3J5SWQSLS5FZGl0Q01TV2lu",
            "ZG93c1NlcnZpY2UuR3JwY0FydGljbGVCeVN1YkNhdFVSSRolLkVkaXRDTVNX",
            "aW5kb3dzU2VydmljZS5HcnBjQ01TQ29udGVudCIAElkKDkdldEF1dGhvcnNM",
            "aXN0Eh4uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNJbnQaJS5FZGl0Q01T",
            "V2luZG93c1NlcnZpY2UuR3JwY0F1dGhvckxpc3QiABJXChBHZXRBdXRob3JE",
            "ZXRhaWxzEh4uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNJbnQaIS5FZGl0",
            "Q01TV2luZG93c1NlcnZpY2UuR3JwY0F1dGhvciIAEnMKEkdldENvbnRlbnRC",
            "eUF1dGhvchItLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQ29udGVudEJ5",
            "QXV0aG9yVVJJGiwuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNBdXRob3JD",
            "b250ZW50TGlzdCIAEmwKEkdldEFsbE90aGVyQXV0aG9ycxItLkVkaXRDTVNX",
            "aW5kb3dzU2VydmljZS5HcnBjQ29udGVudEJ5QXV0aG9yVVJJGiUuRWRpdENN",
            "U1dpbmRvd3NTZXJ2aWNlLkdycGNBdXRob3JMaXN0IgAScwoRR2V0TmV3c0Zl",
            "ZWRCeVNsdWcSKS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY0NvbnRlbnRG",
            "ZWVkVVJJGjEuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNDb250ZW50RmVl",
            "ZFN1bW1hcnlMaXN0IgASegoYR2V0TmV3c0ZlZWRCeVN1YkNhdGVnb3J5Eiku",
            "RWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNDb250ZW50RmVlZFVSSRoxLkVk",
            "aXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQ29udGVudEZlZWRTdW1tYXJ5TGlz",
            "dCIAEnAKDkdldEFsbE5ld3NGZWVkEikuRWRpdENNU1dpbmRvd3NTZXJ2aWNl",
            "LkdycGNDb250ZW50RmVlZFVSSRoxLkVkaXRDTVNXaW5kb3dzU2VydmljZS5H",
            "cnBjQ29udGVudEZlZWRTdW1tYXJ5TGlzdCIAEmUKDkdldENhclN5bm9wc2lz",
            "EikuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNDYXJTeW5vcHNpc1VSSRom",
            "LkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQ2FyU3lub3BzaXMiABJxCg9H",
            "ZXRNb2RlbERldGFpbHMSKS5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY01v",
            "ZGVsRGV0YWlsVVJJGjEuRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNNYWtl",
            "QW5kTW9kZWxEZXRhaWxMaXN0IgASbwoOR2V0TWFrZURldGFpbHMSKC5FZGl0",
            "Q01TV2luZG93c1NlcnZpY2UuR3JwY01ha2VEZXRhaWxVUkkaMS5FZGl0Q01T",
            "V2luZG93c1NlcnZpY2UuR3JwY01ha2VBbmRNb2RlbERldGFpbExpc3QiABJf",
            "ChNHZXRDTVNSb2FkVGVzdENvdW50EiYuRWRpdENNU1dpbmRvd3NTZXJ2aWNl",
            "LkdycGNSb2FkVGVzdFVSSRoeLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBj",
            "SW50IgASVAoQR2V0VGFnZ2VkTW9kZWxJZBIeLkVkaXRDTVNXaW5kb3dzU2Vy",
            "dmljZS5HcnBjSW50Gh4uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNJbnQi",
            "ABJ3ChhHZXRSZWxhdGVkTGlzdEJ5Q2F0ZWdvcnkSKi5FZGl0Q01TV2luZG93",
            "c1NlcnZpY2UuR3JwY0FydGljbGVCeUNhdFVSSRotLkVkaXRDTVNXaW5kb3dz",
            "U2VydmljZS5HcnBjQXJ0aWNsZVN1bW1hcnlMaXN0IgAScwoTR2V0RmVhdHVy",
            "ZWRBcnRpY2xlcxIrLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQXJ0aWNs",
            "ZVJlY2VudFVSSRotLkVkaXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQXJ0aWNs",
            "ZVN1bW1hcnlMaXN0IgASbAoXR2V0T3RoZXJNb2RlbFBob3Rvc0xpc3QSKi5F",
            "ZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY1JlbGF0ZWRQaG90b1VSSRojLkVk",
            "aXRDTVNXaW5kb3dzU2VydmljZS5HcnBjQ01TSW1hZ2UiABJuChlHZXRTaW1p",
            "bGFyTW9kZWxQaG90b3NMaXN0EiouRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdy",
            "cGNSZWxhdGVkUGhvdG9VUkkaIy5FZGl0Q01TV2luZG93c1NlcnZpY2UuR3Jw",
            "Y0NNU0ltYWdlIgASUgoLVXBkYXRlVmlkZW8SIC5FZGl0Q01TV2luZG93c1Nl",
            "cnZpY2UuR3JwY1ZpZGVvGh8uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNC",
            "b29sIgASdQoUR29vZ2xlU2l0ZU1hcERldGFpbHMSLC5FZGl0Q01TV2luZG93",
            "c1NlcnZpY2UuR3JwY0FydGljbGVDb250ZW50VVJJGi0uRWRpdENNU1dpbmRv",
            "d3NTZXJ2aWNlLkdycGNBcnRpY2xlU3VtbWFyeUxpc3QiABJbChBHZXRBcnRp",
            "Y2xlVmlkZW9zEh4uRWRpdENNU1dpbmRvd3NTZXJ2aWNlLkdycGNJbnQaJS5F",
            "ZGl0Q01TV2luZG93c1NlcnZpY2UuR3JwY1ZpZGVvc0xpc3QiAEIhqgIeRWRp",
            "dENNU1dpbmRvd3NTZXJ2aWNlLk1lc3NhZ2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EditCMSWindowsService.Messages.EditCMSCategoryEnum), typeof(global::EditCMSWindowsService.Messages.GrpcVideoSortOrderCategory), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcRoadTestURI), global::EditCMSWindowsService.Messages.GrpcRoadTestURI.Parser, new[]{ "MakeId", "ModelId", "VersionId", "TopCount", "ApplicationId", "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcRelatedPhotoURI), global::EditCMSWindowsService.Messages.GrpcRelatedPhotoURI.Parser, new[]{ "ApplicationId", "ModelId", "CategoryIdList", "PlatformId", "StartIndex", "EndIndex", "SimilarModelsList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelDetailURI), global::EditCMSWindowsService.Messages.GrpcModelDetailURI.Parser, new[]{ "MakeId", "ApplicationId", "CategoryIdList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcMakeDetailURI), global::EditCMSWindowsService.Messages.GrpcMakeDetailURI.Parser, new[]{ "ApplicationId", "CategoryIdList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcInt), global::EditCMSWindowsService.Messages.GrpcInt.Parser, new[]{ "IntOutput", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCarSynopsisURI), global::EditCMSWindowsService.Messages.GrpcCarSynopsisURI.Parser, new[]{ "ModelId", "ApplicationId", "Priority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcContentFeedURI), global::EditCMSWindowsService.Messages.GrpcContentFeedURI.Parser, new[]{ "Slug", "SubCategoryId", "ApplicationId", "StartIndex", "EndIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcBool), global::EditCMSWindowsService.Messages.GrpcBool.Parser, new[]{ "BoolOutput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcFeatureCarURI), global::EditCMSWindowsService.Messages.GrpcFeatureCarURI.Parser, new[]{ "VersionIds", "CategoryId", "PlatformId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleBase), global::EditCMSWindowsService.Messages.GrpcArticleBase.Parser, new[]{ "BasicId", "Title", "ArticleUrl", "CompleteArticleUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetail), global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetail.Parser, new[]{ "Text", "Value", "MaskingName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcContentFeedSummary), global::EditCMSWindowsService.Messages.GrpcContentFeedSummary.Parser, new[]{ "BasicId", "AuthorName", "Description", "DisplayDate", "Views", "Title", "Url", "MainImageSet", "IsMainImage", "ImagePathThumbnail", "ImagePathLarge", "OriginalImgPath", "HostUrl", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleSummary), global::EditCMSWindowsService.Messages.GrpcArticleSummary.Parser, new[]{ "ArticleBase", "CategoryId", "HostUrl", "LargePicUrl", "SmallPicUrl", "OriginalImgUrl", "Description", "AuthorName", "DisplayDate", "Views", "IsSticky", "FacebookCommentCount", "MakeName", "MaskingName", "SubCategory", "ModelName", "FormattedDisplayDate", "AuthorMaskingName", "IsFeatured", "CategoryMaskingName", "Caption", "Tag", "SubCategoryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCMSContent), global::EditCMSWindowsService.Messages.GrpcCMSContent.Parser, new[]{ "RecordCount", "Articles", "LstGrpcCatArticle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCatArticleCount), global::EditCMSWindowsService.Messages.GrpcCatArticleCount.Parser, new[]{ "RecordCount", "CategoryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcPage), global::EditCMSWindowsService.Messages.GrpcPage.Parser, new[]{ "PageId", "Priority", "PageName", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticlePageDetails), global::EditCMSWindowsService.Messages.GrpcArticlePageDetails.Parser, new[]{ "ArticleSummary", "PageList", "TagsList", "VehiclTagsList", "NextArticle", "PrevArticle", "MainImgCaption", "IsMainImageSet", "ShowGallery", "CategoryName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCMSImage), global::EditCMSWindowsService.Messages.GrpcCMSImage.Parser, new[]{ "RecordCount", "LstGrpcModelImage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleDetails), global::EditCMSWindowsService.Messages.GrpcArticleDetails.Parser, new[]{ "Content", "TagsList", "VehiclTagsList", "NextArticle", "PrevArticle", "MainImgCaption", "IsMainImageSet", "ArticleSummary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVehicleTag), global::EditCMSWindowsService.Messages.GrpcVehicleTag.Parser, new[]{ "MakeBase", "ModelBase", "VersionBase" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase), global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase.Parser, new[]{ "ModelId", "ModelName", "MaskingName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCarVersionEntity), global::EditCMSWindowsService.Messages.GrpcCarVersionEntity.Parser, new[]{ "Id", "Name", "MaskingName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase), global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase.Parser, new[]{ "MakeId", "MakeName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelImage), global::EditCMSWindowsService.Messages.GrpcModelImage.Parser, new[]{ "ImageId", "HostUrl", "ImagePathThumbnail", "ImagePathLarge", "OriginalImgPath", "MainImgCategoryId", "ImageCategory", "Caption", "ImageName", "AltImageName", "ImageTitle", "ImageDescription", "MakeBase", "ModelBase" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleByCatURI), global::EditCMSWindowsService.Messages.GrpcArticleByCatURI.Parser, new[]{ "CategoryIdList", "ApplicationId", "StartIndex", "EndIndex", "MakeId", "ModelId", "BasicId", "BodyStyleIds", "ModelIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleContentURI), global::EditCMSWindowsService.Messages.GrpcArticleContentURI.Parser, new[]{ "BasicId", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelPhotoURI), global::EditCMSWindowsService.Messages.GrpcModelPhotoURI.Parser, new[]{ "ApplicationId", "ModelId", "CategoryIdList", "PlatformId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleRecentURI), global::EditCMSWindowsService.Messages.GrpcArticleRecentURI.Parser, new[]{ "ApplicationId", "ContentTypes", "TotalRecords", "MakeId", "ModelId", "BodyStyleIds", "ModelIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCarSynopsis), global::EditCMSWindowsService.Messages.GrpcCarSynopsis.Parser, new[]{ "Description", "ModelId", "Content", "PageName", "Priority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetailList), global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetailList.Parser, new[]{ "LstGrpcMakeAndModelDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcContentFeedSummaryList), global::EditCMSWindowsService.Messages.GrpcContentFeedSummaryList.Parser, new[]{ "LstGrpcContentFeedSummary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleSummaryList), global::EditCMSWindowsService.Messages.GrpcArticleSummaryList.Parser, new[]{ "LstGrpcArticleSummary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelImageList), global::EditCMSWindowsService.Messages.GrpcModelImageList.Parser, new[]{ "LstGrpcModelImage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideo), global::EditCMSWindowsService.Messages.GrpcVideo.Parser, new[]{ "VideoTitle", "VideoUrl", "VideoId", "Views", "Likes", "Description", "BasicId", "Tags", "Duration", "MakeName", "ModelName", "MaskingName", "SubCatId", "SubCatName", "VideoTitleUrl", "ImgHost", "ThumbnailPath", "ImagePath", "DisplayDate", "IsFeatured", "CategoryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideoListEntity), global::EditCMSWindowsService.Messages.GrpcVideoListEntity.Parser, new[]{ "Videos", "TotalRecords", "PrevPageUrl", "NextPageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideosList), global::EditCMSWindowsService.Messages.GrpcVideosList.Parser, new[]{ "LstGrpcVideos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideosBySubCategoryURI), global::EditCMSWindowsService.Messages.GrpcVideosBySubCategoryURI.Parser, new[]{ "SubCategoryId", "ApplicationId", "StartIndex", "EndIndex", "ModelId", "MakeId", "BodyStyleIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideosByIdURI), global::EditCMSWindowsService.Messages.GrpcVideosByIdURI.Parser, new[]{ "Id", "ApplicationId", "StartIndex", "EndIndex", "SimilarModels", "BodyStyleIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideosBySubCategoriesURI), global::EditCMSWindowsService.Messages.GrpcVideosBySubCategoriesURI.Parser, new[]{ "SubCategoryIds", "ApplicationId", "StartIndex", "EndIndex", "SortCategory", "MakeId", "ModelId", "BodyStyleIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.EditCMSCategory), global::EditCMSWindowsService.Messages.EditCMSCategory.Parser, new[]{ "Category", "MakeId", "ModelId", "BasicId", "BodyStyleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcArticleBySubCatURI), global::EditCMSWindowsService.Messages.GrpcArticleBySubCatURI.Parser, new[]{ "CategoryIdList", "SubCategory", "ApplicationId", "StartIndex", "EndIndex", "MakeId", "ModelId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.RelatedModelVideosURI), global::EditCMSWindowsService.Messages.RelatedModelVideosURI.Parser, new[]{ "Tags", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcRelatedArticlesURI), global::EditCMSWindowsService.Messages.GrpcRelatedArticlesURI.Parser, new[]{ "ApplicationId", "ContentTypes", "Tag", "TotalRecords" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcPopularModelPhotosData), global::EditCMSWindowsService.Messages.GrpcPopularModelPhotosData.Parser, new[]{ "ModelPhotoList", "RecordCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcPopularModelVideoData), global::EditCMSWindowsService.Messages.GrpcPopularModelVideoData.Parser, new[]{ "ModelVideoList", "RecordCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcMakeModelEntity), global::EditCMSWindowsService.Messages.GrpcMakeModelEntity.Parser, new[]{ "MakeId", "ModelId", "MakeName", "ModelName", "ModelMaskingName", "IsNew", "IsFuturistic", "Is360ExteriorAvailable", "Is360OpenAvailable", "Is360InteriorAvailable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelVideo), global::EditCMSWindowsService.Messages.GrpcModelVideo.Parser, new[]{ "MakeModelEntity", "VideoId", "VideoCount", "SubCategoryName", "BasicId", "Title", "VideoUrl", "DisplayDate", "Views", "Duration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelPhotos), global::EditCMSWindowsService.Messages.GrpcModelPhotos.Parser, new[]{ "MakeModelEntity", "HostURL", "OriginalImgPath", "ImageCount", "GalleryImagePath" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcPopularCarData), global::EditCMSWindowsService.Messages.GrpcPopularCarData.Parser, new[]{ "Id", "MakeName", "ModelName", "MaskingName", "LargePic", "SmallPic", "ReviewRate", "ReviewCount", "MinPrice", "MaxPrice", "HostUrl", "OriginalImgpath", "Sortorder" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideosEntity), global::EditCMSWindowsService.Messages.GrpcVideosEntity.Parser, new[]{ "Title", "Views", "Likes", "Description", "VideoId", "VideoSrc", "PublishDate", "IsSticky", "Popularity", "MakeName", "ModelName", "MaskingName", "SubCatName", "SubCatId", "BasicId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GetSponsoredArticleURI), global::EditCMSWindowsService.Messages.GetSponsoredArticleURI.Parser, new[]{ "CategoryList", "Author", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GetRelatedContentURI), global::EditCMSWindowsService.Messages.GetRelatedContentURI.Parser, new[]{ "BasicId", "RecordCount", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcSmallInt), global::EditCMSWindowsService.Messages.GrpcSmallInt.Parser, new[]{ "IntOutput", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcMakeModelApplicationID), global::EditCMSWindowsService.Messages.GrpcMakeModelApplicationID.Parser, new[]{ "MakeId", "ModelId", "ApplicationId", "GetAllVideos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCMSSubCategory), global::EditCMSWindowsService.Messages.GrpcCMSSubCategory.Parser, new[]{ "SubCategoryId", "SubCategoryName", "RecordCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCarModelDetails), global::EditCMSWindowsService.Messages.GrpcCarModelDetails.Parser, new[]{ "CarModelSummary", "MakeName", "ModelImageSmall", "ModelImageLarge", "MakeId", "Used", "Futuristic", "RootId", "VideoCount", "CarCount", "OriginalImgPath", "BodyStyleId", "SubSegmentId", "ModelPopularity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCarModelSummary), global::EditCMSWindowsService.Messages.GrpcCarModelSummary.Parser, new[]{ "ModelName", "MaskingName", "ModelRating", "FuelEconomy", "ValueForMoney", "Comfort", "Performance", "Looks", "ReviewCount", "MinPrice", "MaxPrice", "MinAvgPrice", "ModelImage", "LargeImage", "XLargeImage", "HostUrl", "OriginalImage", "ModelId", "New", "OfferExists", "MakeId", "DiscountSummary", "CarPriceOverview" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcDiscountSummary), global::EditCMSWindowsService.Messages.GrpcDiscountSummary.Parser, new[]{ "MaxDiscount", "MaskingName", "DealsCount", "CityId", "ModelId", "VersionId", "ModelName", "Offers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcPriceOverview), global::EditCMSWindowsService.Messages.GrpcPriceOverview.Parser, new[]{ "Price", "PriceLabel", "PriceVersionCount", "PriceStatus", "ReasonText", "City" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCity), global::EditCMSWindowsService.Messages.GrpcCity.Parser, new[]{ "CityId", "CityName", "GroupMasterId", "GroupName", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcStates), global::EditCMSWindowsService.Messages.GrpcStates.Parser, new[]{ "StateId", "StateName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcRelatedArticles), global::EditCMSWindowsService.Messages.GrpcRelatedArticles.Parser, new[]{ "CategoryId", "CategoryMaskingName", "BasicId", "ParentCatId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcAuthor), global::EditCMSWindowsService.Messages.GrpcAuthor.Parser, new[]{ "AuthorName", "ProfileImage", "Designation", "ShortDescription", "MaskingName", "HostUrl", "ImageName", "FullDescription", "EmailId", "FacebookProfile", "GooglePlusProfile", "LinkedInProfile", "TwitterProfile", "AuthorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcAuthorList), global::EditCMSWindowsService.Messages.GrpcAuthorList.Parser, new[]{ "LstGrpcAuthor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelVideoList), global::EditCMSWindowsService.Messages.GrpcModelVideoList.Parser, new[]{ "LstGrpcModelVideo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcVideosEntityList), global::EditCMSWindowsService.Messages.GrpcVideosEntityList.Parser, new[]{ "LstGrpcVideosEntity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcCMSSubCategoryList), global::EditCMSWindowsService.Messages.GrpcCMSSubCategoryList.Parser, new[]{ "LstGrpcCMSSubCategory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcRelatedArticlesList), global::EditCMSWindowsService.Messages.GrpcRelatedArticlesList.Parser, new[]{ "LstGrpcRelatedArticles" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcPopularCarDataList), global::EditCMSWindowsService.Messages.GrpcPopularCarDataList.Parser, new[]{ "LstGrpcPopularCarData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcModelPhotosList), global::EditCMSWindowsService.Messages.GrpcModelPhotosList.Parser, new[]{ "LstGrpcModelPhotos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcContentByAuthorURI), global::EditCMSWindowsService.Messages.GrpcContentByAuthorURI.Parser, new[]{ "AuthorId", "ApplicationId", "Categoryids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcAuthorContentList), global::EditCMSWindowsService.Messages.GrpcAuthorContentList.Parser, new[]{ "LstGrpcAuthorContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EditCMSWindowsService.Messages.GrpcAuthorContent), global::EditCMSWindowsService.Messages.GrpcAuthorContent.Parser, new[]{ "Title", "Url", "MaskingName", "MakeName", "CategoryId", "BasicId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EditCMSCategoryEnum {
    [pbr::OriginalName("News")] News = 0,
    [pbr::OriginalName("ExpertReviews")] ExpertReviews = 1,
    [pbr::OriginalName("Features")] Features = 2,
    [pbr::OriginalName("Videos")] Videos = 3,
    [pbr::OriginalName("All")] All = 4,
    [pbr::OriginalName("Photos")] Photos = 5,
  }

  public enum GrpcVideoSortOrderCategory {
    [pbr::OriginalName("FeaturedAndLatest")] FeaturedAndLatest = 0,
    [pbr::OriginalName("MostPopular")] MostPopular = 1,
    [pbr::OriginalName("JustLatest")] JustLatest = 2,
  }

  #endregion

  #region Messages
  public sealed partial class GrpcRoadTestURI : pb::IMessage<GrpcRoadTestURI> {
    private static readonly pb::MessageParser<GrpcRoadTestURI> _parser = new pb::MessageParser<GrpcRoadTestURI>(() => new GrpcRoadTestURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcRoadTestURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRoadTestURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRoadTestURI(GrpcRoadTestURI other) : this() {
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      topCount_ = other.topCount_;
      applicationId_ = other.applicationId_;
      category_ = other.category_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRoadTestURI Clone() {
      return new GrpcRoadTestURI(this);
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 1;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "VersionId" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private int versionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionId {
      get { return versionId_; }
      set {
        versionId_ = value;
      }
    }

    /// <summary>Field number for the "TopCount" field.</summary>
    public const int TopCountFieldNumber = 4;
    private int topCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TopCount {
      get { return topCount_; }
      set {
        topCount_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 5;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "Category" field.</summary>
    public const int CategoryFieldNumber = 6;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcRoadTestURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcRoadTestURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (TopCount != other.TopCount) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (Category != other.Category) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (VersionId != 0) hash ^= VersionId.GetHashCode();
      if (TopCount != 0) hash ^= TopCount.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MakeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (VersionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(VersionId);
      }
      if (TopCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TopCount);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ApplicationId);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Category);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (VersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionId);
      }
      if (TopCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopCount);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcRoadTestURI other) {
      if (other == null) {
        return;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId != 0) {
        VersionId = other.VersionId;
      }
      if (other.TopCount != 0) {
        TopCount = other.TopCount;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MakeId = input.ReadInt32();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 24: {
            VersionId = input.ReadInt32();
            break;
          }
          case 32: {
            TopCount = input.ReadInt32();
            break;
          }
          case 40: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 50: {
            Category = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcRelatedPhotoURI : pb::IMessage<GrpcRelatedPhotoURI> {
    private static readonly pb::MessageParser<GrpcRelatedPhotoURI> _parser = new pb::MessageParser<GrpcRelatedPhotoURI>(() => new GrpcRelatedPhotoURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcRelatedPhotoURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedPhotoURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedPhotoURI(GrpcRelatedPhotoURI other) : this() {
      applicationId_ = other.applicationId_;
      modelId_ = other.modelId_;
      categoryIdList_ = other.categoryIdList_;
      platformId_ = other.platformId_;
      startIndex_ = other.startIndex_;
      endIndex_ = other.endIndex_;
      similarModelsList_ = other.similarModelsList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedPhotoURI Clone() {
      return new GrpcRelatedPhotoURI(this);
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "CategoryIdList" field.</summary>
    public const int CategoryIdListFieldNumber = 3;
    private string categoryIdList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryIdList {
      get { return categoryIdList_; }
      set {
        categoryIdList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlatformId" field.</summary>
    public const int PlatformIdFieldNumber = 4;
    private string platformId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformId {
      get { return platformId_; }
      set {
        platformId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 5;
    private uint startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "EndIndex" field.</summary>
    public const int EndIndexFieldNumber = 6;
    private uint endIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndIndex {
      get { return endIndex_; }
      set {
        endIndex_ = value;
      }
    }

    /// <summary>Field number for the "SimilarModelsList" field.</summary>
    public const int SimilarModelsListFieldNumber = 7;
    private string similarModelsList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SimilarModelsList {
      get { return similarModelsList_; }
      set {
        similarModelsList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcRelatedPhotoURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcRelatedPhotoURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ModelId != other.ModelId) return false;
      if (CategoryIdList != other.CategoryIdList) return false;
      if (PlatformId != other.PlatformId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (EndIndex != other.EndIndex) return false;
      if (SimilarModelsList != other.SimilarModelsList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (CategoryIdList.Length != 0) hash ^= CategoryIdList.GetHashCode();
      if (PlatformId.Length != 0) hash ^= PlatformId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (EndIndex != 0) hash ^= EndIndex.GetHashCode();
      if (SimilarModelsList.Length != 0) hash ^= SimilarModelsList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ApplicationId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (CategoryIdList.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CategoryIdList);
      }
      if (PlatformId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlatformId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(StartIndex);
      }
      if (EndIndex != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(EndIndex);
      }
      if (SimilarModelsList.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SimilarModelsList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (CategoryIdList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryIdList);
      }
      if (PlatformId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartIndex);
      }
      if (EndIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndIndex);
      }
      if (SimilarModelsList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SimilarModelsList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcRelatedPhotoURI other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.CategoryIdList.Length != 0) {
        CategoryIdList = other.CategoryIdList;
      }
      if (other.PlatformId.Length != 0) {
        PlatformId = other.PlatformId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.EndIndex != 0) {
        EndIndex = other.EndIndex;
      }
      if (other.SimilarModelsList.Length != 0) {
        SimilarModelsList = other.SimilarModelsList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 26: {
            CategoryIdList = input.ReadString();
            break;
          }
          case 34: {
            PlatformId = input.ReadString();
            break;
          }
          case 40: {
            StartIndex = input.ReadUInt32();
            break;
          }
          case 48: {
            EndIndex = input.ReadUInt32();
            break;
          }
          case 58: {
            SimilarModelsList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelDetailURI : pb::IMessage<GrpcModelDetailURI> {
    private static readonly pb::MessageParser<GrpcModelDetailURI> _parser = new pb::MessageParser<GrpcModelDetailURI>(() => new GrpcModelDetailURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelDetailURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelDetailURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelDetailURI(GrpcModelDetailURI other) : this() {
      makeId_ = other.makeId_;
      applicationId_ = other.applicationId_;
      categoryIdList_ = other.categoryIdList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelDetailURI Clone() {
      return new GrpcModelDetailURI(this);
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 1;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "CategoryIdList" field.</summary>
    public const int CategoryIdListFieldNumber = 3;
    private string categoryIdList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryIdList {
      get { return categoryIdList_; }
      set {
        categoryIdList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelDetailURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelDetailURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakeId != other.MakeId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (CategoryIdList != other.CategoryIdList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (CategoryIdList.Length != 0) hash ^= CategoryIdList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MakeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MakeId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
      if (CategoryIdList.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CategoryIdList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (CategoryIdList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryIdList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelDetailURI other) {
      if (other == null) {
        return;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.CategoryIdList.Length != 0) {
        CategoryIdList = other.CategoryIdList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MakeId = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 26: {
            CategoryIdList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMakeDetailURI : pb::IMessage<GrpcMakeDetailURI> {
    private static readonly pb::MessageParser<GrpcMakeDetailURI> _parser = new pb::MessageParser<GrpcMakeDetailURI>(() => new GrpcMakeDetailURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMakeDetailURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeDetailURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeDetailURI(GrpcMakeDetailURI other) : this() {
      applicationId_ = other.applicationId_;
      categoryIdList_ = other.categoryIdList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeDetailURI Clone() {
      return new GrpcMakeDetailURI(this);
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "CategoryIdList" field.</summary>
    public const int CategoryIdListFieldNumber = 2;
    private string categoryIdList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryIdList {
      get { return categoryIdList_; }
      set {
        categoryIdList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMakeDetailURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMakeDetailURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (CategoryIdList != other.CategoryIdList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (CategoryIdList.Length != 0) hash ^= CategoryIdList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplicationId);
      }
      if (CategoryIdList.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CategoryIdList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (CategoryIdList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryIdList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMakeDetailURI other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.CategoryIdList.Length != 0) {
        CategoryIdList = other.CategoryIdList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 18: {
            CategoryIdList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcInt : pb::IMessage<GrpcInt> {
    private static readonly pb::MessageParser<GrpcInt> _parser = new pb::MessageParser<GrpcInt>(() => new GrpcInt());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcInt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcInt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcInt(GrpcInt other) : this() {
      intOutput_ = other.intOutput_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcInt Clone() {
      return new GrpcInt(this);
    }

    /// <summary>Field number for the "intOutput" field.</summary>
    public const int IntOutputFieldNumber = 1;
    private int intOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntOutput {
      get { return intOutput_; }
      set {
        intOutput_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcInt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcInt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntOutput != other.IntOutput) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IntOutput != 0) hash ^= IntOutput.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IntOutput != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IntOutput);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IntOutput != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntOutput);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcInt other) {
      if (other == null) {
        return;
      }
      if (other.IntOutput != 0) {
        IntOutput = other.IntOutput;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IntOutput = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCarSynopsisURI : pb::IMessage<GrpcCarSynopsisURI> {
    private static readonly pb::MessageParser<GrpcCarSynopsisURI> _parser = new pb::MessageParser<GrpcCarSynopsisURI>(() => new GrpcCarSynopsisURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCarSynopsisURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarSynopsisURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarSynopsisURI(GrpcCarSynopsisURI other) : this() {
      modelId_ = other.modelId_;
      applicationId_ = other.applicationId_;
      priority_ = other.priority_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarSynopsisURI Clone() {
      return new GrpcCarSynopsisURI(this);
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 1;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCarSynopsisURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCarSynopsisURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelId != other.ModelId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (Priority != other.Priority) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ModelId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
      if (Priority != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Priority);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCarSynopsisURI other) {
      if (other == null) {
        return;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ModelId = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 24: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcContentFeedURI : pb::IMessage<GrpcContentFeedURI> {
    private static readonly pb::MessageParser<GrpcContentFeedURI> _parser = new pb::MessageParser<GrpcContentFeedURI>(() => new GrpcContentFeedURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcContentFeedURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedURI(GrpcContentFeedURI other) : this() {
      slug_ = other.slug_;
      subCategoryId_ = other.subCategoryId_;
      applicationId_ = other.applicationId_;
      startIndex_ = other.startIndex_;
      endIndex_ = other.endIndex_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedURI Clone() {
      return new GrpcContentFeedURI(this);
    }

    /// <summary>Field number for the "Slug" field.</summary>
    public const int SlugFieldNumber = 1;
    private string slug_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Slug {
      get { return slug_; }
      set {
        slug_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCategoryId" field.</summary>
    public const int SubCategoryIdFieldNumber = 2;
    private int subCategoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubCategoryId {
      get { return subCategoryId_; }
      set {
        subCategoryId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 4;
    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "EndIndex" field.</summary>
    public const int EndIndexFieldNumber = 5;
    private int endIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndIndex {
      get { return endIndex_; }
      set {
        endIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcContentFeedURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcContentFeedURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Slug != other.Slug) return false;
      if (SubCategoryId != other.SubCategoryId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (EndIndex != other.EndIndex) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Slug.Length != 0) hash ^= Slug.GetHashCode();
      if (SubCategoryId != 0) hash ^= SubCategoryId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (EndIndex != 0) hash ^= EndIndex.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Slug.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Slug);
      }
      if (SubCategoryId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubCategoryId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApplicationId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (EndIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EndIndex);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Slug.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Slug);
      }
      if (SubCategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubCategoryId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (EndIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndIndex);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcContentFeedURI other) {
      if (other == null) {
        return;
      }
      if (other.Slug.Length != 0) {
        Slug = other.Slug;
      }
      if (other.SubCategoryId != 0) {
        SubCategoryId = other.SubCategoryId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.EndIndex != 0) {
        EndIndex = other.EndIndex;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Slug = input.ReadString();
            break;
          }
          case 16: {
            SubCategoryId = input.ReadInt32();
            break;
          }
          case 24: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 40: {
            EndIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcBool : pb::IMessage<GrpcBool> {
    private static readonly pb::MessageParser<GrpcBool> _parser = new pb::MessageParser<GrpcBool>(() => new GrpcBool());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcBool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBool(GrpcBool other) : this() {
      boolOutput_ = other.boolOutput_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBool Clone() {
      return new GrpcBool(this);
    }

    /// <summary>Field number for the "boolOutput" field.</summary>
    public const int BoolOutputFieldNumber = 1;
    private bool boolOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolOutput {
      get { return boolOutput_; }
      set {
        boolOutput_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcBool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcBool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoolOutput != other.BoolOutput) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BoolOutput != false) hash ^= BoolOutput.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BoolOutput != false) {
        output.WriteRawTag(8);
        output.WriteBool(BoolOutput);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoolOutput != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcBool other) {
      if (other == null) {
        return;
      }
      if (other.BoolOutput != false) {
        BoolOutput = other.BoolOutput;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BoolOutput = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcFeatureCarURI : pb::IMessage<GrpcFeatureCarURI> {
    private static readonly pb::MessageParser<GrpcFeatureCarURI> _parser = new pb::MessageParser<GrpcFeatureCarURI>(() => new GrpcFeatureCarURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcFeatureCarURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcFeatureCarURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcFeatureCarURI(GrpcFeatureCarURI other) : this() {
      versionIds_ = other.versionIds_;
      categoryId_ = other.categoryId_;
      platformId_ = other.platformId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcFeatureCarURI Clone() {
      return new GrpcFeatureCarURI(this);
    }

    /// <summary>Field number for the "versionIds" field.</summary>
    public const int VersionIdsFieldNumber = 1;
    private string versionIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionIds {
      get { return versionIds_; }
      set {
        versionIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 2;
    private int categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "platformId" field.</summary>
    public const int PlatformIdFieldNumber = 3;
    private int platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcFeatureCarURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcFeatureCarURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionIds != other.VersionIds) return false;
      if (CategoryId != other.CategoryId) return false;
      if (PlatformId != other.PlatformId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VersionIds.Length != 0) hash ^= VersionIds.GetHashCode();
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VersionIds.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VersionIds);
      }
      if (CategoryId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CategoryId);
      }
      if (PlatformId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlatformId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VersionIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionIds);
      }
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (PlatformId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcFeatureCarURI other) {
      if (other == null) {
        return;
      }
      if (other.VersionIds.Length != 0) {
        VersionIds = other.VersionIds;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.PlatformId != 0) {
        PlatformId = other.PlatformId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            VersionIds = input.ReadString();
            break;
          }
          case 16: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 24: {
            PlatformId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleBase : pb::IMessage<GrpcArticleBase> {
    private static readonly pb::MessageParser<GrpcArticleBase> _parser = new pb::MessageParser<GrpcArticleBase>(() => new GrpcArticleBase());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleBase(GrpcArticleBase other) : this() {
      basicId_ = other.basicId_;
      title_ = other.title_;
      articleUrl_ = other.articleUrl_;
      completeArticleUrl_ = other.completeArticleUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleBase Clone() {
      return new GrpcArticleBase(this);
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 1;
    private ulong basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ArticleUrl" field.</summary>
    public const int ArticleUrlFieldNumber = 3;
    private string articleUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArticleUrl {
      get { return articleUrl_; }
      set {
        articleUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompleteArticleUrl" field.</summary>
    public const int CompleteArticleUrlFieldNumber = 4;
    private string completeArticleUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompleteArticleUrl {
      get { return completeArticleUrl_; }
      set {
        completeArticleUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasicId != other.BasicId) return false;
      if (Title != other.Title) return false;
      if (ArticleUrl != other.ArticleUrl) return false;
      if (CompleteArticleUrl != other.CompleteArticleUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasicId != 0UL) hash ^= BasicId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (ArticleUrl.Length != 0) hash ^= ArticleUrl.GetHashCode();
      if (CompleteArticleUrl.Length != 0) hash ^= CompleteArticleUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasicId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BasicId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (ArticleUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ArticleUrl);
      }
      if (CompleteArticleUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompleteArticleUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasicId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasicId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (ArticleUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArticleUrl);
      }
      if (CompleteArticleUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompleteArticleUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleBase other) {
      if (other == null) {
        return;
      }
      if (other.BasicId != 0UL) {
        BasicId = other.BasicId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.ArticleUrl.Length != 0) {
        ArticleUrl = other.ArticleUrl;
      }
      if (other.CompleteArticleUrl.Length != 0) {
        CompleteArticleUrl = other.CompleteArticleUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BasicId = input.ReadUInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            ArticleUrl = input.ReadString();
            break;
          }
          case 34: {
            CompleteArticleUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMakeAndModelDetail : pb::IMessage<GrpcMakeAndModelDetail> {
    private static readonly pb::MessageParser<GrpcMakeAndModelDetail> _parser = new pb::MessageParser<GrpcMakeAndModelDetail>(() => new GrpcMakeAndModelDetail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMakeAndModelDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeAndModelDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeAndModelDetail(GrpcMakeAndModelDetail other) : this() {
      text_ = other.text_;
      value_ = other.value_;
      maskingName_ = other.maskingName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeAndModelDetail Clone() {
      return new GrpcMakeAndModelDetail(this);
    }

    /// <summary>Field number for the "Text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 3;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMakeAndModelDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMakeAndModelDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (Value != other.Value) return false;
      if (MaskingName != other.MaskingName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MaskingName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMakeAndModelDetail other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
          case 26: {
            MaskingName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcContentFeedSummary : pb::IMessage<GrpcContentFeedSummary> {
    private static readonly pb::MessageParser<GrpcContentFeedSummary> _parser = new pb::MessageParser<GrpcContentFeedSummary>(() => new GrpcContentFeedSummary());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcContentFeedSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedSummary(GrpcContentFeedSummary other) : this() {
      basicId_ = other.basicId_;
      authorName_ = other.authorName_;
      description_ = other.description_;
      displayDate_ = other.displayDate_;
      views_ = other.views_;
      title_ = other.title_;
      url_ = other.url_;
      mainImageSet_ = other.mainImageSet_;
      isMainImage_ = other.isMainImage_;
      imagePathThumbnail_ = other.imagePathThumbnail_;
      imagePathLarge_ = other.imagePathLarge_;
      originalImgPath_ = other.originalImgPath_;
      hostUrl_ = other.hostUrl_;
      content_ = other.content_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedSummary Clone() {
      return new GrpcContentFeedSummary(this);
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 1;
    private ulong basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "AuthorName" field.</summary>
    public const int AuthorNameFieldNumber = 2;
    private string authorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorName {
      get { return authorName_; }
      set {
        authorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayDate" field.</summary>
    public const int DisplayDateFieldNumber = 4;
    private string displayDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayDate {
      get { return displayDate_; }
      set {
        displayDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Views" field.</summary>
    public const int ViewsFieldNumber = 5;
    private ulong views_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Views {
      get { return views_; }
      set {
        views_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 6;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Url" field.</summary>
    public const int UrlFieldNumber = 7;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MainImageSet" field.</summary>
    public const int MainImageSetFieldNumber = 8;
    private uint mainImageSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MainImageSet {
      get { return mainImageSet_; }
      set {
        mainImageSet_ = value;
      }
    }

    /// <summary>Field number for the "IsMainImage" field.</summary>
    public const int IsMainImageFieldNumber = 9;
    private bool isMainImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMainImage {
      get { return isMainImage_; }
      set {
        isMainImage_ = value;
      }
    }

    /// <summary>Field number for the "ImagePathThumbnail" field.</summary>
    public const int ImagePathThumbnailFieldNumber = 10;
    private string imagePathThumbnail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagePathThumbnail {
      get { return imagePathThumbnail_; }
      set {
        imagePathThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImagePathLarge" field.</summary>
    public const int ImagePathLargeFieldNumber = 11;
    private string imagePathLarge_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagePathLarge {
      get { return imagePathLarge_; }
      set {
        imagePathLarge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalImgPath" field.</summary>
    public const int OriginalImgPathFieldNumber = 12;
    private string originalImgPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImgPath {
      get { return originalImgPath_; }
      set {
        originalImgPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HostUrl" field.</summary>
    public const int HostUrlFieldNumber = 13;
    private string hostUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostUrl {
      get { return hostUrl_; }
      set {
        hostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 14;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcContentFeedSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcContentFeedSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasicId != other.BasicId) return false;
      if (AuthorName != other.AuthorName) return false;
      if (Description != other.Description) return false;
      if (DisplayDate != other.DisplayDate) return false;
      if (Views != other.Views) return false;
      if (Title != other.Title) return false;
      if (Url != other.Url) return false;
      if (MainImageSet != other.MainImageSet) return false;
      if (IsMainImage != other.IsMainImage) return false;
      if (ImagePathThumbnail != other.ImagePathThumbnail) return false;
      if (ImagePathLarge != other.ImagePathLarge) return false;
      if (OriginalImgPath != other.OriginalImgPath) return false;
      if (HostUrl != other.HostUrl) return false;
      if (Content != other.Content) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasicId != 0UL) hash ^= BasicId.GetHashCode();
      if (AuthorName.Length != 0) hash ^= AuthorName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (DisplayDate.Length != 0) hash ^= DisplayDate.GetHashCode();
      if (Views != 0UL) hash ^= Views.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (MainImageSet != 0) hash ^= MainImageSet.GetHashCode();
      if (IsMainImage != false) hash ^= IsMainImage.GetHashCode();
      if (ImagePathThumbnail.Length != 0) hash ^= ImagePathThumbnail.GetHashCode();
      if (ImagePathLarge.Length != 0) hash ^= ImagePathLarge.GetHashCode();
      if (OriginalImgPath.Length != 0) hash ^= OriginalImgPath.GetHashCode();
      if (HostUrl.Length != 0) hash ^= HostUrl.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasicId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BasicId);
      }
      if (AuthorName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AuthorName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (DisplayDate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayDate);
      }
      if (Views != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Views);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Url);
      }
      if (MainImageSet != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MainImageSet);
      }
      if (IsMainImage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsMainImage);
      }
      if (ImagePathThumbnail.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ImagePathThumbnail);
      }
      if (ImagePathLarge.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ImagePathLarge);
      }
      if (OriginalImgPath.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OriginalImgPath);
      }
      if (HostUrl.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(HostUrl);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Content);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasicId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasicId);
      }
      if (AuthorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (DisplayDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayDate);
      }
      if (Views != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Views);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (MainImageSet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MainImageSet);
      }
      if (IsMainImage != false) {
        size += 1 + 1;
      }
      if (ImagePathThumbnail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImagePathThumbnail);
      }
      if (ImagePathLarge.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImagePathLarge);
      }
      if (OriginalImgPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalImgPath);
      }
      if (HostUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostUrl);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcContentFeedSummary other) {
      if (other == null) {
        return;
      }
      if (other.BasicId != 0UL) {
        BasicId = other.BasicId;
      }
      if (other.AuthorName.Length != 0) {
        AuthorName = other.AuthorName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.DisplayDate.Length != 0) {
        DisplayDate = other.DisplayDate;
      }
      if (other.Views != 0UL) {
        Views = other.Views;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.MainImageSet != 0) {
        MainImageSet = other.MainImageSet;
      }
      if (other.IsMainImage != false) {
        IsMainImage = other.IsMainImage;
      }
      if (other.ImagePathThumbnail.Length != 0) {
        ImagePathThumbnail = other.ImagePathThumbnail;
      }
      if (other.ImagePathLarge.Length != 0) {
        ImagePathLarge = other.ImagePathLarge;
      }
      if (other.OriginalImgPath.Length != 0) {
        OriginalImgPath = other.OriginalImgPath;
      }
      if (other.HostUrl.Length != 0) {
        HostUrl = other.HostUrl;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BasicId = input.ReadUInt64();
            break;
          }
          case 18: {
            AuthorName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            DisplayDate = input.ReadString();
            break;
          }
          case 40: {
            Views = input.ReadUInt64();
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 58: {
            Url = input.ReadString();
            break;
          }
          case 64: {
            MainImageSet = input.ReadUInt32();
            break;
          }
          case 72: {
            IsMainImage = input.ReadBool();
            break;
          }
          case 82: {
            ImagePathThumbnail = input.ReadString();
            break;
          }
          case 90: {
            ImagePathLarge = input.ReadString();
            break;
          }
          case 98: {
            OriginalImgPath = input.ReadString();
            break;
          }
          case 106: {
            HostUrl = input.ReadString();
            break;
          }
          case 114: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleSummary : pb::IMessage<GrpcArticleSummary> {
    private static readonly pb::MessageParser<GrpcArticleSummary> _parser = new pb::MessageParser<GrpcArticleSummary>(() => new GrpcArticleSummary());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleSummary(GrpcArticleSummary other) : this() {
      ArticleBase = other.articleBase_ != null ? other.ArticleBase.Clone() : null;
      categoryId_ = other.categoryId_;
      hostUrl_ = other.hostUrl_;
      largePicUrl_ = other.largePicUrl_;
      smallPicUrl_ = other.smallPicUrl_;
      originalImgUrl_ = other.originalImgUrl_;
      description_ = other.description_;
      authorName_ = other.authorName_;
      displayDate_ = other.displayDate_;
      views_ = other.views_;
      isSticky_ = other.isSticky_;
      facebookCommentCount_ = other.facebookCommentCount_;
      makeName_ = other.makeName_;
      maskingName_ = other.maskingName_;
      subCategory_ = other.subCategory_;
      modelName_ = other.modelName_;
      formattedDisplayDate_ = other.formattedDisplayDate_;
      authorMaskingName_ = other.authorMaskingName_;
      isFeatured_ = other.isFeatured_;
      categoryMaskingName_ = other.categoryMaskingName_;
      caption_ = other.caption_;
      tag_ = other.tag_;
      subCategoryId_ = other.subCategoryId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleSummary Clone() {
      return new GrpcArticleSummary(this);
    }

    /// <summary>Field number for the "ArticleBase" field.</summary>
    public const int ArticleBaseFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcArticleBase articleBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleBase ArticleBase {
      get { return articleBase_; }
      set {
        articleBase_ = value;
      }
    }

    /// <summary>Field number for the "CategoryId" field.</summary>
    public const int CategoryIdFieldNumber = 2;
    private uint categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "HostUrl" field.</summary>
    public const int HostUrlFieldNumber = 3;
    private string hostUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostUrl {
      get { return hostUrl_; }
      set {
        hostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LargePicUrl" field.</summary>
    public const int LargePicUrlFieldNumber = 4;
    private string largePicUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LargePicUrl {
      get { return largePicUrl_; }
      set {
        largePicUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SmallPicUrl" field.</summary>
    public const int SmallPicUrlFieldNumber = 5;
    private string smallPicUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SmallPicUrl {
      get { return smallPicUrl_; }
      set {
        smallPicUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalImgUrl" field.</summary>
    public const int OriginalImgUrlFieldNumber = 6;
    private string originalImgUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImgUrl {
      get { return originalImgUrl_; }
      set {
        originalImgUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AuthorName" field.</summary>
    public const int AuthorNameFieldNumber = 8;
    private string authorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorName {
      get { return authorName_; }
      set {
        authorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayDate" field.</summary>
    public const int DisplayDateFieldNumber = 9;
    private string displayDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayDate {
      get { return displayDate_; }
      set {
        displayDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Views" field.</summary>
    public const int ViewsFieldNumber = 10;
    private uint views_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Views {
      get { return views_; }
      set {
        views_ = value;
      }
    }

    /// <summary>Field number for the "IsSticky" field.</summary>
    public const int IsStickyFieldNumber = 11;
    private bool isSticky_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSticky {
      get { return isSticky_; }
      set {
        isSticky_ = value;
      }
    }

    /// <summary>Field number for the "FacebookCommentCount" field.</summary>
    public const int FacebookCommentCountFieldNumber = 12;
    private uint facebookCommentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FacebookCommentCount {
      get { return facebookCommentCount_; }
      set {
        facebookCommentCount_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 13;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 14;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCategory" field.</summary>
    public const int SubCategoryFieldNumber = 15;
    private string subCategory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCategory {
      get { return subCategory_; }
      set {
        subCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 16;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FormattedDisplayDate" field.</summary>
    public const int FormattedDisplayDateFieldNumber = 17;
    private string formattedDisplayDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedDisplayDate {
      get { return formattedDisplayDate_; }
      set {
        formattedDisplayDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AuthorMaskingName" field.</summary>
    public const int AuthorMaskingNameFieldNumber = 18;
    private string authorMaskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorMaskingName {
      get { return authorMaskingName_; }
      set {
        authorMaskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsFeatured" field.</summary>
    public const int IsFeaturedFieldNumber = 19;
    private bool isFeatured_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFeatured {
      get { return isFeatured_; }
      set {
        isFeatured_ = value;
      }
    }

    /// <summary>Field number for the "CategoryMaskingName" field.</summary>
    public const int CategoryMaskingNameFieldNumber = 20;
    private string categoryMaskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryMaskingName {
      get { return categoryMaskingName_; }
      set {
        categoryMaskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Caption" field.</summary>
    public const int CaptionFieldNumber = 21;
    private string caption_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caption {
      get { return caption_; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tag" field.</summary>
    public const int TagFieldNumber = 22;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCategoryId" field.</summary>
    public const int SubCategoryIdFieldNumber = 23;
    private uint subCategoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SubCategoryId {
      get { return subCategoryId_; }
      set {
        subCategoryId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ArticleBase, other.ArticleBase)) return false;
      if (CategoryId != other.CategoryId) return false;
      if (HostUrl != other.HostUrl) return false;
      if (LargePicUrl != other.LargePicUrl) return false;
      if (SmallPicUrl != other.SmallPicUrl) return false;
      if (OriginalImgUrl != other.OriginalImgUrl) return false;
      if (Description != other.Description) return false;
      if (AuthorName != other.AuthorName) return false;
      if (DisplayDate != other.DisplayDate) return false;
      if (Views != other.Views) return false;
      if (IsSticky != other.IsSticky) return false;
      if (FacebookCommentCount != other.FacebookCommentCount) return false;
      if (MakeName != other.MakeName) return false;
      if (MaskingName != other.MaskingName) return false;
      if (SubCategory != other.SubCategory) return false;
      if (ModelName != other.ModelName) return false;
      if (FormattedDisplayDate != other.FormattedDisplayDate) return false;
      if (AuthorMaskingName != other.AuthorMaskingName) return false;
      if (IsFeatured != other.IsFeatured) return false;
      if (CategoryMaskingName != other.CategoryMaskingName) return false;
      if (Caption != other.Caption) return false;
      if (Tag != other.Tag) return false;
      if (SubCategoryId != other.SubCategoryId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (articleBase_ != null) hash ^= ArticleBase.GetHashCode();
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (HostUrl.Length != 0) hash ^= HostUrl.GetHashCode();
      if (LargePicUrl.Length != 0) hash ^= LargePicUrl.GetHashCode();
      if (SmallPicUrl.Length != 0) hash ^= SmallPicUrl.GetHashCode();
      if (OriginalImgUrl.Length != 0) hash ^= OriginalImgUrl.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (AuthorName.Length != 0) hash ^= AuthorName.GetHashCode();
      if (DisplayDate.Length != 0) hash ^= DisplayDate.GetHashCode();
      if (Views != 0) hash ^= Views.GetHashCode();
      if (IsSticky != false) hash ^= IsSticky.GetHashCode();
      if (FacebookCommentCount != 0) hash ^= FacebookCommentCount.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (SubCategory.Length != 0) hash ^= SubCategory.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (FormattedDisplayDate.Length != 0) hash ^= FormattedDisplayDate.GetHashCode();
      if (AuthorMaskingName.Length != 0) hash ^= AuthorMaskingName.GetHashCode();
      if (IsFeatured != false) hash ^= IsFeatured.GetHashCode();
      if (CategoryMaskingName.Length != 0) hash ^= CategoryMaskingName.GetHashCode();
      if (Caption.Length != 0) hash ^= Caption.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (SubCategoryId != 0) hash ^= SubCategoryId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (articleBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArticleBase);
      }
      if (CategoryId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CategoryId);
      }
      if (HostUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HostUrl);
      }
      if (LargePicUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LargePicUrl);
      }
      if (SmallPicUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SmallPicUrl);
      }
      if (OriginalImgUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OriginalImgUrl);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (AuthorName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(AuthorName);
      }
      if (DisplayDate.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DisplayDate);
      }
      if (Views != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Views);
      }
      if (IsSticky != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsSticky);
      }
      if (FacebookCommentCount != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(FacebookCommentCount);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MakeName);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(MaskingName);
      }
      if (SubCategory.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SubCategory);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ModelName);
      }
      if (FormattedDisplayDate.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(FormattedDisplayDate);
      }
      if (AuthorMaskingName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AuthorMaskingName);
      }
      if (IsFeatured != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsFeatured);
      }
      if (CategoryMaskingName.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(CategoryMaskingName);
      }
      if (Caption.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Caption);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Tag);
      }
      if (SubCategoryId != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(SubCategoryId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (articleBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArticleBase);
      }
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CategoryId);
      }
      if (HostUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostUrl);
      }
      if (LargePicUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LargePicUrl);
      }
      if (SmallPicUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SmallPicUrl);
      }
      if (OriginalImgUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalImgUrl);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (AuthorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorName);
      }
      if (DisplayDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayDate);
      }
      if (Views != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Views);
      }
      if (IsSticky != false) {
        size += 1 + 1;
      }
      if (FacebookCommentCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FacebookCommentCount);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (SubCategory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategory);
      }
      if (ModelName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (FormattedDisplayDate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FormattedDisplayDate);
      }
      if (AuthorMaskingName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuthorMaskingName);
      }
      if (IsFeatured != false) {
        size += 2 + 1;
      }
      if (CategoryMaskingName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CategoryMaskingName);
      }
      if (Caption.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Caption);
      }
      if (Tag.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (SubCategoryId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SubCategoryId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleSummary other) {
      if (other == null) {
        return;
      }
      if (other.articleBase_ != null) {
        if (articleBase_ == null) {
          articleBase_ = new global::EditCMSWindowsService.Messages.GrpcArticleBase();
        }
        ArticleBase.MergeFrom(other.ArticleBase);
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.HostUrl.Length != 0) {
        HostUrl = other.HostUrl;
      }
      if (other.LargePicUrl.Length != 0) {
        LargePicUrl = other.LargePicUrl;
      }
      if (other.SmallPicUrl.Length != 0) {
        SmallPicUrl = other.SmallPicUrl;
      }
      if (other.OriginalImgUrl.Length != 0) {
        OriginalImgUrl = other.OriginalImgUrl;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.AuthorName.Length != 0) {
        AuthorName = other.AuthorName;
      }
      if (other.DisplayDate.Length != 0) {
        DisplayDate = other.DisplayDate;
      }
      if (other.Views != 0) {
        Views = other.Views;
      }
      if (other.IsSticky != false) {
        IsSticky = other.IsSticky;
      }
      if (other.FacebookCommentCount != 0) {
        FacebookCommentCount = other.FacebookCommentCount;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.SubCategory.Length != 0) {
        SubCategory = other.SubCategory;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.FormattedDisplayDate.Length != 0) {
        FormattedDisplayDate = other.FormattedDisplayDate;
      }
      if (other.AuthorMaskingName.Length != 0) {
        AuthorMaskingName = other.AuthorMaskingName;
      }
      if (other.IsFeatured != false) {
        IsFeatured = other.IsFeatured;
      }
      if (other.CategoryMaskingName.Length != 0) {
        CategoryMaskingName = other.CategoryMaskingName;
      }
      if (other.Caption.Length != 0) {
        Caption = other.Caption;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.SubCategoryId != 0) {
        SubCategoryId = other.SubCategoryId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (articleBase_ == null) {
              articleBase_ = new global::EditCMSWindowsService.Messages.GrpcArticleBase();
            }
            input.ReadMessage(articleBase_);
            break;
          }
          case 16: {
            CategoryId = input.ReadUInt32();
            break;
          }
          case 26: {
            HostUrl = input.ReadString();
            break;
          }
          case 34: {
            LargePicUrl = input.ReadString();
            break;
          }
          case 42: {
            SmallPicUrl = input.ReadString();
            break;
          }
          case 50: {
            OriginalImgUrl = input.ReadString();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 66: {
            AuthorName = input.ReadString();
            break;
          }
          case 74: {
            DisplayDate = input.ReadString();
            break;
          }
          case 80: {
            Views = input.ReadUInt32();
            break;
          }
          case 88: {
            IsSticky = input.ReadBool();
            break;
          }
          case 96: {
            FacebookCommentCount = input.ReadUInt32();
            break;
          }
          case 106: {
            MakeName = input.ReadString();
            break;
          }
          case 114: {
            MaskingName = input.ReadString();
            break;
          }
          case 122: {
            SubCategory = input.ReadString();
            break;
          }
          case 130: {
            ModelName = input.ReadString();
            break;
          }
          case 138: {
            FormattedDisplayDate = input.ReadString();
            break;
          }
          case 146: {
            AuthorMaskingName = input.ReadString();
            break;
          }
          case 152: {
            IsFeatured = input.ReadBool();
            break;
          }
          case 162: {
            CategoryMaskingName = input.ReadString();
            break;
          }
          case 170: {
            Caption = input.ReadString();
            break;
          }
          case 178: {
            Tag = input.ReadString();
            break;
          }
          case 184: {
            SubCategoryId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCMSContent : pb::IMessage<GrpcCMSContent> {
    private static readonly pb::MessageParser<GrpcCMSContent> _parser = new pb::MessageParser<GrpcCMSContent>(() => new GrpcCMSContent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCMSContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSContent(GrpcCMSContent other) : this() {
      recordCount_ = other.recordCount_;
      Articles = other.articles_ != null ? other.Articles.Clone() : null;
      lstGrpcCatArticle_ = other.lstGrpcCatArticle_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSContent Clone() {
      return new GrpcCMSContent(this);
    }

    /// <summary>Field number for the "RecordCount" field.</summary>
    public const int RecordCountFieldNumber = 1;
    private uint recordCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RecordCount {
      get { return recordCount_; }
      set {
        recordCount_ = value;
      }
    }

    /// <summary>Field number for the "Articles" field.</summary>
    public const int ArticlesFieldNumber = 2;
    private global::EditCMSWindowsService.Messages.GrpcArticleSummaryList articles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleSummaryList Articles {
      get { return articles_; }
      set {
        articles_ = value;
      }
    }

    /// <summary>Field number for the "LstGrpcCatArticle" field.</summary>
    public const int LstGrpcCatArticleFieldNumber = 3;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcCatArticleCount> _repeated_lstGrpcCatArticle_codec
        = pb::FieldCodec.ForMessage(26, global::EditCMSWindowsService.Messages.GrpcCatArticleCount.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcCatArticleCount> lstGrpcCatArticle_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcCatArticleCount>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcCatArticleCount> LstGrpcCatArticle {
      get { return lstGrpcCatArticle_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCMSContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCMSContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordCount != other.RecordCount) return false;
      if (!object.Equals(Articles, other.Articles)) return false;
      if(!lstGrpcCatArticle_.Equals(other.lstGrpcCatArticle_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RecordCount != 0) hash ^= RecordCount.GetHashCode();
      if (articles_ != null) hash ^= Articles.GetHashCode();
      hash ^= lstGrpcCatArticle_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RecordCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RecordCount);
      }
      if (articles_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Articles);
      }
      lstGrpcCatArticle_.WriteTo(output, _repeated_lstGrpcCatArticle_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RecordCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecordCount);
      }
      if (articles_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Articles);
      }
      size += lstGrpcCatArticle_.CalculateSize(_repeated_lstGrpcCatArticle_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCMSContent other) {
      if (other == null) {
        return;
      }
      if (other.RecordCount != 0) {
        RecordCount = other.RecordCount;
      }
      if (other.articles_ != null) {
        if (articles_ == null) {
          articles_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummaryList();
        }
        Articles.MergeFrom(other.Articles);
      }
      lstGrpcCatArticle_.Add(other.lstGrpcCatArticle_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RecordCount = input.ReadUInt32();
            break;
          }
          case 18: {
            if (articles_ == null) {
              articles_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummaryList();
            }
            input.ReadMessage(articles_);
            break;
          }
          case 26: {
            lstGrpcCatArticle_.AddEntriesFrom(input, _repeated_lstGrpcCatArticle_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCatArticleCount : pb::IMessage<GrpcCatArticleCount> {
    private static readonly pb::MessageParser<GrpcCatArticleCount> _parser = new pb::MessageParser<GrpcCatArticleCount>(() => new GrpcCatArticleCount());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCatArticleCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCatArticleCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCatArticleCount(GrpcCatArticleCount other) : this() {
      recordCount_ = other.recordCount_;
      categoryId_ = other.categoryId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCatArticleCount Clone() {
      return new GrpcCatArticleCount(this);
    }

    /// <summary>Field number for the "RecordCount" field.</summary>
    public const int RecordCountFieldNumber = 1;
    private uint recordCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RecordCount {
      get { return recordCount_; }
      set {
        recordCount_ = value;
      }
    }

    /// <summary>Field number for the "CategoryId" field.</summary>
    public const int CategoryIdFieldNumber = 2;
    private uint categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCatArticleCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCatArticleCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordCount != other.RecordCount) return false;
      if (CategoryId != other.CategoryId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RecordCount != 0) hash ^= RecordCount.GetHashCode();
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RecordCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RecordCount);
      }
      if (CategoryId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CategoryId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RecordCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecordCount);
      }
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CategoryId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCatArticleCount other) {
      if (other == null) {
        return;
      }
      if (other.RecordCount != 0) {
        RecordCount = other.RecordCount;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RecordCount = input.ReadUInt32();
            break;
          }
          case 16: {
            CategoryId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPage : pb::IMessage<GrpcPage> {
    private static readonly pb::MessageParser<GrpcPage> _parser = new pb::MessageParser<GrpcPage>(() => new GrpcPage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPage(GrpcPage other) : this() {
      pageId_ = other.pageId_;
      priority_ = other.priority_;
      pageName_ = other.pageName_;
      content_ = other.content_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPage Clone() {
      return new GrpcPage(this);
    }

    /// <summary>Field number for the "pageId" field.</summary>
    public const int PageIdFieldNumber = 1;
    private ulong pageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PageId {
      get { return pageId_; }
      set {
        pageId_ = value;
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 2;
    private uint priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "PageName" field.</summary>
    public const int PageNameFieldNumber = 3;
    private string pageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageName {
      get { return pageName_; }
      set {
        pageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 4;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageId != other.PageId) return false;
      if (Priority != other.Priority) return false;
      if (PageName != other.PageName) return false;
      if (Content != other.Content) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageId != 0UL) hash ^= PageId.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (PageName.Length != 0) hash ^= PageName.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PageId);
      }
      if (Priority != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Priority);
      }
      if (PageName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageName);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PageId);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Priority);
      }
      if (PageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageName);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPage other) {
      if (other == null) {
        return;
      }
      if (other.PageId != 0UL) {
        PageId = other.PageId;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.PageName.Length != 0) {
        PageName = other.PageName;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PageId = input.ReadUInt64();
            break;
          }
          case 16: {
            Priority = input.ReadUInt32();
            break;
          }
          case 26: {
            PageName = input.ReadString();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticlePageDetails : pb::IMessage<GrpcArticlePageDetails> {
    private static readonly pb::MessageParser<GrpcArticlePageDetails> _parser = new pb::MessageParser<GrpcArticlePageDetails>(() => new GrpcArticlePageDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticlePageDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticlePageDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticlePageDetails(GrpcArticlePageDetails other) : this() {
      ArticleSummary = other.articleSummary_ != null ? other.ArticleSummary.Clone() : null;
      pageList_ = other.pageList_.Clone();
      tagsList_ = other.tagsList_.Clone();
      vehiclTagsList_ = other.vehiclTagsList_.Clone();
      NextArticle = other.nextArticle_ != null ? other.NextArticle.Clone() : null;
      PrevArticle = other.prevArticle_ != null ? other.PrevArticle.Clone() : null;
      mainImgCaption_ = other.mainImgCaption_;
      isMainImageSet_ = other.isMainImageSet_;
      showGallery_ = other.showGallery_;
      categoryName_ = other.categoryName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticlePageDetails Clone() {
      return new GrpcArticlePageDetails(this);
    }

    /// <summary>Field number for the "ArticleSummary" field.</summary>
    public const int ArticleSummaryFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcArticleSummary articleSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleSummary ArticleSummary {
      get { return articleSummary_; }
      set {
        articleSummary_ = value;
      }
    }

    /// <summary>Field number for the "PageList" field.</summary>
    public const int PageListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcPage> _repeated_pageList_codec
        = pb::FieldCodec.ForMessage(18, global::EditCMSWindowsService.Messages.GrpcPage.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcPage> pageList_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcPage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcPage> PageList {
      get { return pageList_; }
    }

    /// <summary>Field number for the "TagsList" field.</summary>
    public const int TagsListFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tagsList_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tagsList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TagsList {
      get { return tagsList_; }
    }

    /// <summary>Field number for the "VehiclTagsList" field.</summary>
    public const int VehiclTagsListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcVehicleTag> _repeated_vehiclTagsList_codec
        = pb::FieldCodec.ForMessage(34, global::EditCMSWindowsService.Messages.GrpcVehicleTag.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVehicleTag> vehiclTagsList_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVehicleTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVehicleTag> VehiclTagsList {
      get { return vehiclTagsList_; }
    }

    /// <summary>Field number for the "NextArticle" field.</summary>
    public const int NextArticleFieldNumber = 5;
    private global::EditCMSWindowsService.Messages.GrpcArticleBase nextArticle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleBase NextArticle {
      get { return nextArticle_; }
      set {
        nextArticle_ = value;
      }
    }

    /// <summary>Field number for the "PrevArticle" field.</summary>
    public const int PrevArticleFieldNumber = 6;
    private global::EditCMSWindowsService.Messages.GrpcArticleBase prevArticle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleBase PrevArticle {
      get { return prevArticle_; }
      set {
        prevArticle_ = value;
      }
    }

    /// <summary>Field number for the "MainImgCaption" field.</summary>
    public const int MainImgCaptionFieldNumber = 7;
    private string mainImgCaption_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MainImgCaption {
      get { return mainImgCaption_; }
      set {
        mainImgCaption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsMainImageSet" field.</summary>
    public const int IsMainImageSetFieldNumber = 8;
    private bool isMainImageSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMainImageSet {
      get { return isMainImageSet_; }
      set {
        isMainImageSet_ = value;
      }
    }

    /// <summary>Field number for the "ShowGallery" field.</summary>
    public const int ShowGalleryFieldNumber = 9;
    private bool showGallery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowGallery {
      get { return showGallery_; }
      set {
        showGallery_ = value;
      }
    }

    /// <summary>Field number for the "CategoryName" field.</summary>
    public const int CategoryNameFieldNumber = 10;
    private string categoryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryName {
      get { return categoryName_; }
      set {
        categoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticlePageDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticlePageDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ArticleSummary, other.ArticleSummary)) return false;
      if(!pageList_.Equals(other.pageList_)) return false;
      if(!tagsList_.Equals(other.tagsList_)) return false;
      if(!vehiclTagsList_.Equals(other.vehiclTagsList_)) return false;
      if (!object.Equals(NextArticle, other.NextArticle)) return false;
      if (!object.Equals(PrevArticle, other.PrevArticle)) return false;
      if (MainImgCaption != other.MainImgCaption) return false;
      if (IsMainImageSet != other.IsMainImageSet) return false;
      if (ShowGallery != other.ShowGallery) return false;
      if (CategoryName != other.CategoryName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (articleSummary_ != null) hash ^= ArticleSummary.GetHashCode();
      hash ^= pageList_.GetHashCode();
      hash ^= tagsList_.GetHashCode();
      hash ^= vehiclTagsList_.GetHashCode();
      if (nextArticle_ != null) hash ^= NextArticle.GetHashCode();
      if (prevArticle_ != null) hash ^= PrevArticle.GetHashCode();
      if (MainImgCaption.Length != 0) hash ^= MainImgCaption.GetHashCode();
      if (IsMainImageSet != false) hash ^= IsMainImageSet.GetHashCode();
      if (ShowGallery != false) hash ^= ShowGallery.GetHashCode();
      if (CategoryName.Length != 0) hash ^= CategoryName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (articleSummary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArticleSummary);
      }
      pageList_.WriteTo(output, _repeated_pageList_codec);
      tagsList_.WriteTo(output, _repeated_tagsList_codec);
      vehiclTagsList_.WriteTo(output, _repeated_vehiclTagsList_codec);
      if (nextArticle_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NextArticle);
      }
      if (prevArticle_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PrevArticle);
      }
      if (MainImgCaption.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MainImgCaption);
      }
      if (IsMainImageSet != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsMainImageSet);
      }
      if (ShowGallery != false) {
        output.WriteRawTag(72);
        output.WriteBool(ShowGallery);
      }
      if (CategoryName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CategoryName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (articleSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArticleSummary);
      }
      size += pageList_.CalculateSize(_repeated_pageList_codec);
      size += tagsList_.CalculateSize(_repeated_tagsList_codec);
      size += vehiclTagsList_.CalculateSize(_repeated_vehiclTagsList_codec);
      if (nextArticle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextArticle);
      }
      if (prevArticle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrevArticle);
      }
      if (MainImgCaption.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MainImgCaption);
      }
      if (IsMainImageSet != false) {
        size += 1 + 1;
      }
      if (ShowGallery != false) {
        size += 1 + 1;
      }
      if (CategoryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticlePageDetails other) {
      if (other == null) {
        return;
      }
      if (other.articleSummary_ != null) {
        if (articleSummary_ == null) {
          articleSummary_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
        }
        ArticleSummary.MergeFrom(other.ArticleSummary);
      }
      pageList_.Add(other.pageList_);
      tagsList_.Add(other.tagsList_);
      vehiclTagsList_.Add(other.vehiclTagsList_);
      if (other.nextArticle_ != null) {
        if (nextArticle_ == null) {
          nextArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleBase();
        }
        NextArticle.MergeFrom(other.NextArticle);
      }
      if (other.prevArticle_ != null) {
        if (prevArticle_ == null) {
          prevArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleBase();
        }
        PrevArticle.MergeFrom(other.PrevArticle);
      }
      if (other.MainImgCaption.Length != 0) {
        MainImgCaption = other.MainImgCaption;
      }
      if (other.IsMainImageSet != false) {
        IsMainImageSet = other.IsMainImageSet;
      }
      if (other.ShowGallery != false) {
        ShowGallery = other.ShowGallery;
      }
      if (other.CategoryName.Length != 0) {
        CategoryName = other.CategoryName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (articleSummary_ == null) {
              articleSummary_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
            }
            input.ReadMessage(articleSummary_);
            break;
          }
          case 18: {
            pageList_.AddEntriesFrom(input, _repeated_pageList_codec);
            break;
          }
          case 26: {
            tagsList_.AddEntriesFrom(input, _repeated_tagsList_codec);
            break;
          }
          case 34: {
            vehiclTagsList_.AddEntriesFrom(input, _repeated_vehiclTagsList_codec);
            break;
          }
          case 42: {
            if (nextArticle_ == null) {
              nextArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleBase();
            }
            input.ReadMessage(nextArticle_);
            break;
          }
          case 50: {
            if (prevArticle_ == null) {
              prevArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleBase();
            }
            input.ReadMessage(prevArticle_);
            break;
          }
          case 58: {
            MainImgCaption = input.ReadString();
            break;
          }
          case 64: {
            IsMainImageSet = input.ReadBool();
            break;
          }
          case 72: {
            ShowGallery = input.ReadBool();
            break;
          }
          case 82: {
            CategoryName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCMSImage : pb::IMessage<GrpcCMSImage> {
    private static readonly pb::MessageParser<GrpcCMSImage> _parser = new pb::MessageParser<GrpcCMSImage>(() => new GrpcCMSImage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCMSImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSImage(GrpcCMSImage other) : this() {
      recordCount_ = other.recordCount_;
      lstGrpcModelImage_ = other.lstGrpcModelImage_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSImage Clone() {
      return new GrpcCMSImage(this);
    }

    /// <summary>Field number for the "RecordCount" field.</summary>
    public const int RecordCountFieldNumber = 1;
    private int recordCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecordCount {
      get { return recordCount_; }
      set {
        recordCount_ = value;
      }
    }

    /// <summary>Field number for the "LstGrpcModelImage" field.</summary>
    public const int LstGrpcModelImageFieldNumber = 2;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcModelImage> _repeated_lstGrpcModelImage_codec
        = pb::FieldCodec.ForMessage(18, global::EditCMSWindowsService.Messages.GrpcModelImage.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelImage> lstGrpcModelImage_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelImage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelImage> LstGrpcModelImage {
      get { return lstGrpcModelImage_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCMSImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCMSImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordCount != other.RecordCount) return false;
      if(!lstGrpcModelImage_.Equals(other.lstGrpcModelImage_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RecordCount != 0) hash ^= RecordCount.GetHashCode();
      hash ^= lstGrpcModelImage_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RecordCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RecordCount);
      }
      lstGrpcModelImage_.WriteTo(output, _repeated_lstGrpcModelImage_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RecordCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordCount);
      }
      size += lstGrpcModelImage_.CalculateSize(_repeated_lstGrpcModelImage_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCMSImage other) {
      if (other == null) {
        return;
      }
      if (other.RecordCount != 0) {
        RecordCount = other.RecordCount;
      }
      lstGrpcModelImage_.Add(other.lstGrpcModelImage_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RecordCount = input.ReadInt32();
            break;
          }
          case 18: {
            lstGrpcModelImage_.AddEntriesFrom(input, _repeated_lstGrpcModelImage_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleDetails : pb::IMessage<GrpcArticleDetails> {
    private static readonly pb::MessageParser<GrpcArticleDetails> _parser = new pb::MessageParser<GrpcArticleDetails>(() => new GrpcArticleDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleDetails(GrpcArticleDetails other) : this() {
      content_ = other.content_;
      tagsList_ = other.tagsList_.Clone();
      vehiclTagsList_ = other.vehiclTagsList_.Clone();
      NextArticle = other.nextArticle_ != null ? other.NextArticle.Clone() : null;
      PrevArticle = other.prevArticle_ != null ? other.PrevArticle.Clone() : null;
      mainImgCaption_ = other.mainImgCaption_;
      isMainImageSet_ = other.isMainImageSet_;
      ArticleSummary = other.articleSummary_ != null ? other.ArticleSummary.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleDetails Clone() {
      return new GrpcArticleDetails(this);
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TagsList" field.</summary>
    public const int TagsListFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tagsList_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tagsList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TagsList {
      get { return tagsList_; }
    }

    /// <summary>Field number for the "VehiclTagsList" field.</summary>
    public const int VehiclTagsListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcVehicleTag> _repeated_vehiclTagsList_codec
        = pb::FieldCodec.ForMessage(26, global::EditCMSWindowsService.Messages.GrpcVehicleTag.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVehicleTag> vehiclTagsList_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVehicleTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVehicleTag> VehiclTagsList {
      get { return vehiclTagsList_; }
    }

    /// <summary>Field number for the "NextArticle" field.</summary>
    public const int NextArticleFieldNumber = 4;
    private global::EditCMSWindowsService.Messages.GrpcArticleSummary nextArticle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleSummary NextArticle {
      get { return nextArticle_; }
      set {
        nextArticle_ = value;
      }
    }

    /// <summary>Field number for the "PrevArticle" field.</summary>
    public const int PrevArticleFieldNumber = 5;
    private global::EditCMSWindowsService.Messages.GrpcArticleSummary prevArticle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleSummary PrevArticle {
      get { return prevArticle_; }
      set {
        prevArticle_ = value;
      }
    }

    /// <summary>Field number for the "MainImgCaption" field.</summary>
    public const int MainImgCaptionFieldNumber = 6;
    private string mainImgCaption_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MainImgCaption {
      get { return mainImgCaption_; }
      set {
        mainImgCaption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsMainImageSet" field.</summary>
    public const int IsMainImageSetFieldNumber = 7;
    private bool isMainImageSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMainImageSet {
      get { return isMainImageSet_; }
      set {
        isMainImageSet_ = value;
      }
    }

    /// <summary>Field number for the "ArticleSummary" field.</summary>
    public const int ArticleSummaryFieldNumber = 8;
    private global::EditCMSWindowsService.Messages.GrpcArticleSummary articleSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcArticleSummary ArticleSummary {
      get { return articleSummary_; }
      set {
        articleSummary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if(!tagsList_.Equals(other.tagsList_)) return false;
      if(!vehiclTagsList_.Equals(other.vehiclTagsList_)) return false;
      if (!object.Equals(NextArticle, other.NextArticle)) return false;
      if (!object.Equals(PrevArticle, other.PrevArticle)) return false;
      if (MainImgCaption != other.MainImgCaption) return false;
      if (IsMainImageSet != other.IsMainImageSet) return false;
      if (!object.Equals(ArticleSummary, other.ArticleSummary)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= tagsList_.GetHashCode();
      hash ^= vehiclTagsList_.GetHashCode();
      if (nextArticle_ != null) hash ^= NextArticle.GetHashCode();
      if (prevArticle_ != null) hash ^= PrevArticle.GetHashCode();
      if (MainImgCaption.Length != 0) hash ^= MainImgCaption.GetHashCode();
      if (IsMainImageSet != false) hash ^= IsMainImageSet.GetHashCode();
      if (articleSummary_ != null) hash ^= ArticleSummary.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      tagsList_.WriteTo(output, _repeated_tagsList_codec);
      vehiclTagsList_.WriteTo(output, _repeated_vehiclTagsList_codec);
      if (nextArticle_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NextArticle);
      }
      if (prevArticle_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PrevArticle);
      }
      if (MainImgCaption.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MainImgCaption);
      }
      if (IsMainImageSet != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsMainImageSet);
      }
      if (articleSummary_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ArticleSummary);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += tagsList_.CalculateSize(_repeated_tagsList_codec);
      size += vehiclTagsList_.CalculateSize(_repeated_vehiclTagsList_codec);
      if (nextArticle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextArticle);
      }
      if (prevArticle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrevArticle);
      }
      if (MainImgCaption.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MainImgCaption);
      }
      if (IsMainImageSet != false) {
        size += 1 + 1;
      }
      if (articleSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArticleSummary);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleDetails other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      tagsList_.Add(other.tagsList_);
      vehiclTagsList_.Add(other.vehiclTagsList_);
      if (other.nextArticle_ != null) {
        if (nextArticle_ == null) {
          nextArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
        }
        NextArticle.MergeFrom(other.NextArticle);
      }
      if (other.prevArticle_ != null) {
        if (prevArticle_ == null) {
          prevArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
        }
        PrevArticle.MergeFrom(other.PrevArticle);
      }
      if (other.MainImgCaption.Length != 0) {
        MainImgCaption = other.MainImgCaption;
      }
      if (other.IsMainImageSet != false) {
        IsMainImageSet = other.IsMainImageSet;
      }
      if (other.articleSummary_ != null) {
        if (articleSummary_ == null) {
          articleSummary_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
        }
        ArticleSummary.MergeFrom(other.ArticleSummary);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 18: {
            tagsList_.AddEntriesFrom(input, _repeated_tagsList_codec);
            break;
          }
          case 26: {
            vehiclTagsList_.AddEntriesFrom(input, _repeated_vehiclTagsList_codec);
            break;
          }
          case 34: {
            if (nextArticle_ == null) {
              nextArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
            }
            input.ReadMessage(nextArticle_);
            break;
          }
          case 42: {
            if (prevArticle_ == null) {
              prevArticle_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
            }
            input.ReadMessage(prevArticle_);
            break;
          }
          case 50: {
            MainImgCaption = input.ReadString();
            break;
          }
          case 56: {
            IsMainImageSet = input.ReadBool();
            break;
          }
          case 66: {
            if (articleSummary_ == null) {
              articleSummary_ = new global::EditCMSWindowsService.Messages.GrpcArticleSummary();
            }
            input.ReadMessage(articleSummary_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVehicleTag : pb::IMessage<GrpcVehicleTag> {
    private static readonly pb::MessageParser<GrpcVehicleTag> _parser = new pb::MessageParser<GrpcVehicleTag>(() => new GrpcVehicleTag());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVehicleTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVehicleTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVehicleTag(GrpcVehicleTag other) : this() {
      MakeBase = other.makeBase_ != null ? other.MakeBase.Clone() : null;
      ModelBase = other.modelBase_ != null ? other.ModelBase.Clone() : null;
      VersionBase = other.versionBase_ != null ? other.VersionBase.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVehicleTag Clone() {
      return new GrpcVehicleTag(this);
    }

    /// <summary>Field number for the "MakeBase" field.</summary>
    public const int MakeBaseFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase makeBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase MakeBase {
      get { return makeBase_; }
      set {
        makeBase_ = value;
      }
    }

    /// <summary>Field number for the "ModelBase" field.</summary>
    public const int ModelBaseFieldNumber = 2;
    private global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase modelBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase ModelBase {
      get { return modelBase_; }
      set {
        modelBase_ = value;
      }
    }

    /// <summary>Field number for the "VersionBase" field.</summary>
    public const int VersionBaseFieldNumber = 3;
    private global::EditCMSWindowsService.Messages.GrpcCarVersionEntity versionBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcCarVersionEntity VersionBase {
      get { return versionBase_; }
      set {
        versionBase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVehicleTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVehicleTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MakeBase, other.MakeBase)) return false;
      if (!object.Equals(ModelBase, other.ModelBase)) return false;
      if (!object.Equals(VersionBase, other.VersionBase)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (makeBase_ != null) hash ^= MakeBase.GetHashCode();
      if (modelBase_ != null) hash ^= ModelBase.GetHashCode();
      if (versionBase_ != null) hash ^= VersionBase.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (makeBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MakeBase);
      }
      if (modelBase_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModelBase);
      }
      if (versionBase_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VersionBase);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (makeBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MakeBase);
      }
      if (modelBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelBase);
      }
      if (versionBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VersionBase);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVehicleTag other) {
      if (other == null) {
        return;
      }
      if (other.makeBase_ != null) {
        if (makeBase_ == null) {
          makeBase_ = new global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase();
        }
        MakeBase.MergeFrom(other.MakeBase);
      }
      if (other.modelBase_ != null) {
        if (modelBase_ == null) {
          modelBase_ = new global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase();
        }
        ModelBase.MergeFrom(other.ModelBase);
      }
      if (other.versionBase_ != null) {
        if (versionBase_ == null) {
          versionBase_ = new global::EditCMSWindowsService.Messages.GrpcCarVersionEntity();
        }
        VersionBase.MergeFrom(other.VersionBase);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (makeBase_ == null) {
              makeBase_ = new global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase();
            }
            input.ReadMessage(makeBase_);
            break;
          }
          case 18: {
            if (modelBase_ == null) {
              modelBase_ = new global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase();
            }
            input.ReadMessage(modelBase_);
            break;
          }
          case 26: {
            if (versionBase_ == null) {
              versionBase_ = new global::EditCMSWindowsService.Messages.GrpcCarVersionEntity();
            }
            input.ReadMessage(versionBase_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCarModelEntityBase : pb::IMessage<GrpcCarModelEntityBase> {
    private static readonly pb::MessageParser<GrpcCarModelEntityBase> _parser = new pb::MessageParser<GrpcCarModelEntityBase>(() => new GrpcCarModelEntityBase());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCarModelEntityBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelEntityBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelEntityBase(GrpcCarModelEntityBase other) : this() {
      modelId_ = other.modelId_;
      modelName_ = other.modelName_;
      maskingName_ = other.maskingName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelEntityBase Clone() {
      return new GrpcCarModelEntityBase(this);
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 1;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 2;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 3;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCarModelEntityBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCarModelEntityBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelId != other.ModelId) return false;
      if (ModelName != other.ModelName) return false;
      if (MaskingName != other.MaskingName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ModelId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MaskingName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCarModelEntityBase other) {
      if (other == null) {
        return;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ModelId = input.ReadInt32();
            break;
          }
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 26: {
            MaskingName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCarVersionEntity : pb::IMessage<GrpcCarVersionEntity> {
    private static readonly pb::MessageParser<GrpcCarVersionEntity> _parser = new pb::MessageParser<GrpcCarVersionEntity>(() => new GrpcCarVersionEntity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCarVersionEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarVersionEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarVersionEntity(GrpcCarVersionEntity other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      maskingName_ = other.maskingName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarVersionEntity Clone() {
      return new GrpcCarVersionEntity(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 3;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCarVersionEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCarVersionEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (MaskingName != other.MaskingName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MaskingName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCarVersionEntity other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            MaskingName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCarMakeEntityBase : pb::IMessage<GrpcCarMakeEntityBase> {
    private static readonly pb::MessageParser<GrpcCarMakeEntityBase> _parser = new pb::MessageParser<GrpcCarMakeEntityBase>(() => new GrpcCarMakeEntityBase());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCarMakeEntityBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarMakeEntityBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarMakeEntityBase(GrpcCarMakeEntityBase other) : this() {
      makeId_ = other.makeId_;
      makeName_ = other.makeName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarMakeEntityBase Clone() {
      return new GrpcCarMakeEntityBase(this);
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 1;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 2;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCarMakeEntityBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCarMakeEntityBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakeId != other.MakeId) return false;
      if (MakeName != other.MakeName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MakeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MakeId);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MakeName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCarMakeEntityBase other) {
      if (other == null) {
        return;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MakeId = input.ReadInt32();
            break;
          }
          case 18: {
            MakeName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelImage : pb::IMessage<GrpcModelImage> {
    private static readonly pb::MessageParser<GrpcModelImage> _parser = new pb::MessageParser<GrpcModelImage>(() => new GrpcModelImage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelImage(GrpcModelImage other) : this() {
      imageId_ = other.imageId_;
      hostUrl_ = other.hostUrl_;
      imagePathThumbnail_ = other.imagePathThumbnail_;
      imagePathLarge_ = other.imagePathLarge_;
      originalImgPath_ = other.originalImgPath_;
      mainImgCategoryId_ = other.mainImgCategoryId_;
      imageCategory_ = other.imageCategory_;
      caption_ = other.caption_;
      imageName_ = other.imageName_;
      altImageName_ = other.altImageName_;
      imageTitle_ = other.imageTitle_;
      imageDescription_ = other.imageDescription_;
      MakeBase = other.makeBase_ != null ? other.MakeBase.Clone() : null;
      ModelBase = other.modelBase_ != null ? other.ModelBase.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelImage Clone() {
      return new GrpcModelImage(this);
    }

    /// <summary>Field number for the "ImageId" field.</summary>
    public const int ImageIdFieldNumber = 1;
    private uint imageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ImageId {
      get { return imageId_; }
      set {
        imageId_ = value;
      }
    }

    /// <summary>Field number for the "HostUrl" field.</summary>
    public const int HostUrlFieldNumber = 2;
    private string hostUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostUrl {
      get { return hostUrl_; }
      set {
        hostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImagePathThumbnail" field.</summary>
    public const int ImagePathThumbnailFieldNumber = 3;
    private string imagePathThumbnail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagePathThumbnail {
      get { return imagePathThumbnail_; }
      set {
        imagePathThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImagePathLarge" field.</summary>
    public const int ImagePathLargeFieldNumber = 4;
    private string imagePathLarge_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagePathLarge {
      get { return imagePathLarge_; }
      set {
        imagePathLarge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalImgPath" field.</summary>
    public const int OriginalImgPathFieldNumber = 5;
    private string originalImgPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImgPath {
      get { return originalImgPath_; }
      set {
        originalImgPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MainImgCategoryId" field.</summary>
    public const int MainImgCategoryIdFieldNumber = 6;
    private int mainImgCategoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MainImgCategoryId {
      get { return mainImgCategoryId_; }
      set {
        mainImgCategoryId_ = value;
      }
    }

    /// <summary>Field number for the "ImageCategory" field.</summary>
    public const int ImageCategoryFieldNumber = 7;
    private string imageCategory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageCategory {
      get { return imageCategory_; }
      set {
        imageCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Caption" field.</summary>
    public const int CaptionFieldNumber = 8;
    private string caption_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caption {
      get { return caption_; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImageName" field.</summary>
    public const int ImageNameFieldNumber = 9;
    private string imageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageName {
      get { return imageName_; }
      set {
        imageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AltImageName" field.</summary>
    public const int AltImageNameFieldNumber = 10;
    private string altImageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AltImageName {
      get { return altImageName_; }
      set {
        altImageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImageTitle" field.</summary>
    public const int ImageTitleFieldNumber = 11;
    private string imageTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageTitle {
      get { return imageTitle_; }
      set {
        imageTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImageDescription" field.</summary>
    public const int ImageDescriptionFieldNumber = 12;
    private string imageDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageDescription {
      get { return imageDescription_; }
      set {
        imageDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MakeBase" field.</summary>
    public const int MakeBaseFieldNumber = 13;
    private global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase makeBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase MakeBase {
      get { return makeBase_; }
      set {
        makeBase_ = value;
      }
    }

    /// <summary>Field number for the "ModelBase" field.</summary>
    public const int ModelBaseFieldNumber = 14;
    private global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase modelBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase ModelBase {
      get { return modelBase_; }
      set {
        modelBase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageId != other.ImageId) return false;
      if (HostUrl != other.HostUrl) return false;
      if (ImagePathThumbnail != other.ImagePathThumbnail) return false;
      if (ImagePathLarge != other.ImagePathLarge) return false;
      if (OriginalImgPath != other.OriginalImgPath) return false;
      if (MainImgCategoryId != other.MainImgCategoryId) return false;
      if (ImageCategory != other.ImageCategory) return false;
      if (Caption != other.Caption) return false;
      if (ImageName != other.ImageName) return false;
      if (AltImageName != other.AltImageName) return false;
      if (ImageTitle != other.ImageTitle) return false;
      if (ImageDescription != other.ImageDescription) return false;
      if (!object.Equals(MakeBase, other.MakeBase)) return false;
      if (!object.Equals(ModelBase, other.ModelBase)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageId != 0) hash ^= ImageId.GetHashCode();
      if (HostUrl.Length != 0) hash ^= HostUrl.GetHashCode();
      if (ImagePathThumbnail.Length != 0) hash ^= ImagePathThumbnail.GetHashCode();
      if (ImagePathLarge.Length != 0) hash ^= ImagePathLarge.GetHashCode();
      if (OriginalImgPath.Length != 0) hash ^= OriginalImgPath.GetHashCode();
      if (MainImgCategoryId != 0) hash ^= MainImgCategoryId.GetHashCode();
      if (ImageCategory.Length != 0) hash ^= ImageCategory.GetHashCode();
      if (Caption.Length != 0) hash ^= Caption.GetHashCode();
      if (ImageName.Length != 0) hash ^= ImageName.GetHashCode();
      if (AltImageName.Length != 0) hash ^= AltImageName.GetHashCode();
      if (ImageTitle.Length != 0) hash ^= ImageTitle.GetHashCode();
      if (ImageDescription.Length != 0) hash ^= ImageDescription.GetHashCode();
      if (makeBase_ != null) hash ^= MakeBase.GetHashCode();
      if (modelBase_ != null) hash ^= ModelBase.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImageId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ImageId);
      }
      if (HostUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HostUrl);
      }
      if (ImagePathThumbnail.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ImagePathThumbnail);
      }
      if (ImagePathLarge.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImagePathLarge);
      }
      if (OriginalImgPath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OriginalImgPath);
      }
      if (MainImgCategoryId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MainImgCategoryId);
      }
      if (ImageCategory.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImageCategory);
      }
      if (Caption.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Caption);
      }
      if (ImageName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ImageName);
      }
      if (AltImageName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AltImageName);
      }
      if (ImageTitle.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ImageTitle);
      }
      if (ImageDescription.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ImageDescription);
      }
      if (makeBase_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(MakeBase);
      }
      if (modelBase_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ModelBase);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageId);
      }
      if (HostUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostUrl);
      }
      if (ImagePathThumbnail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImagePathThumbnail);
      }
      if (ImagePathLarge.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImagePathLarge);
      }
      if (OriginalImgPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalImgPath);
      }
      if (MainImgCategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MainImgCategoryId);
      }
      if (ImageCategory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageCategory);
      }
      if (Caption.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Caption);
      }
      if (ImageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageName);
      }
      if (AltImageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AltImageName);
      }
      if (ImageTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageTitle);
      }
      if (ImageDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageDescription);
      }
      if (makeBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MakeBase);
      }
      if (modelBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelBase);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelImage other) {
      if (other == null) {
        return;
      }
      if (other.ImageId != 0) {
        ImageId = other.ImageId;
      }
      if (other.HostUrl.Length != 0) {
        HostUrl = other.HostUrl;
      }
      if (other.ImagePathThumbnail.Length != 0) {
        ImagePathThumbnail = other.ImagePathThumbnail;
      }
      if (other.ImagePathLarge.Length != 0) {
        ImagePathLarge = other.ImagePathLarge;
      }
      if (other.OriginalImgPath.Length != 0) {
        OriginalImgPath = other.OriginalImgPath;
      }
      if (other.MainImgCategoryId != 0) {
        MainImgCategoryId = other.MainImgCategoryId;
      }
      if (other.ImageCategory.Length != 0) {
        ImageCategory = other.ImageCategory;
      }
      if (other.Caption.Length != 0) {
        Caption = other.Caption;
      }
      if (other.ImageName.Length != 0) {
        ImageName = other.ImageName;
      }
      if (other.AltImageName.Length != 0) {
        AltImageName = other.AltImageName;
      }
      if (other.ImageTitle.Length != 0) {
        ImageTitle = other.ImageTitle;
      }
      if (other.ImageDescription.Length != 0) {
        ImageDescription = other.ImageDescription;
      }
      if (other.makeBase_ != null) {
        if (makeBase_ == null) {
          makeBase_ = new global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase();
        }
        MakeBase.MergeFrom(other.MakeBase);
      }
      if (other.modelBase_ != null) {
        if (modelBase_ == null) {
          modelBase_ = new global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase();
        }
        ModelBase.MergeFrom(other.ModelBase);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ImageId = input.ReadUInt32();
            break;
          }
          case 18: {
            HostUrl = input.ReadString();
            break;
          }
          case 26: {
            ImagePathThumbnail = input.ReadString();
            break;
          }
          case 34: {
            ImagePathLarge = input.ReadString();
            break;
          }
          case 42: {
            OriginalImgPath = input.ReadString();
            break;
          }
          case 48: {
            MainImgCategoryId = input.ReadInt32();
            break;
          }
          case 58: {
            ImageCategory = input.ReadString();
            break;
          }
          case 66: {
            Caption = input.ReadString();
            break;
          }
          case 74: {
            ImageName = input.ReadString();
            break;
          }
          case 82: {
            AltImageName = input.ReadString();
            break;
          }
          case 90: {
            ImageTitle = input.ReadString();
            break;
          }
          case 98: {
            ImageDescription = input.ReadString();
            break;
          }
          case 106: {
            if (makeBase_ == null) {
              makeBase_ = new global::EditCMSWindowsService.Messages.GrpcCarMakeEntityBase();
            }
            input.ReadMessage(makeBase_);
            break;
          }
          case 114: {
            if (modelBase_ == null) {
              modelBase_ = new global::EditCMSWindowsService.Messages.GrpcCarModelEntityBase();
            }
            input.ReadMessage(modelBase_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleByCatURI : pb::IMessage<GrpcArticleByCatURI> {
    private static readonly pb::MessageParser<GrpcArticleByCatURI> _parser = new pb::MessageParser<GrpcArticleByCatURI>(() => new GrpcArticleByCatURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleByCatURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleByCatURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleByCatURI(GrpcArticleByCatURI other) : this() {
      categoryIdList_ = other.categoryIdList_;
      applicationId_ = other.applicationId_;
      startIndex_ = other.startIndex_;
      endIndex_ = other.endIndex_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      basicId_ = other.basicId_;
      bodyStyleIds_ = other.bodyStyleIds_;
      modelIds_ = other.modelIds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleByCatURI Clone() {
      return new GrpcArticleByCatURI(this);
    }

    /// <summary>Field number for the "CategoryIdList" field.</summary>
    public const int CategoryIdListFieldNumber = 1;
    private string categoryIdList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryIdList {
      get { return categoryIdList_; }
      set {
        categoryIdList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private uint startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "EndIndex" field.</summary>
    public const int EndIndexFieldNumber = 4;
    private uint endIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndIndex {
      get { return endIndex_; }
      set {
        endIndex_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 5;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 6;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 7;
    private int basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "BodyStyleIds" field.</summary>
    public const int BodyStyleIdsFieldNumber = 8;
    private string bodyStyleIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyStyleIds {
      get { return bodyStyleIds_; }
      set {
        bodyStyleIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelIds" field.</summary>
    public const int ModelIdsFieldNumber = 9;
    private string modelIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelIds {
      get { return modelIds_; }
      set {
        modelIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleByCatURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleByCatURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryIdList != other.CategoryIdList) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (EndIndex != other.EndIndex) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (BasicId != other.BasicId) return false;
      if (BodyStyleIds != other.BodyStyleIds) return false;
      if (ModelIds != other.ModelIds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryIdList.Length != 0) hash ^= CategoryIdList.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (EndIndex != 0) hash ^= EndIndex.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (BasicId != 0) hash ^= BasicId.GetHashCode();
      if (BodyStyleIds.Length != 0) hash ^= BodyStyleIds.GetHashCode();
      if (ModelIds.Length != 0) hash ^= ModelIds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryIdList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CategoryIdList);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ApplicationId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartIndex);
      }
      if (EndIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EndIndex);
      }
      if (MakeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ModelId);
      }
      if (BasicId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BasicId);
      }
      if (BodyStyleIds.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BodyStyleIds);
      }
      if (ModelIds.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModelIds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryIdList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryIdList);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartIndex);
      }
      if (EndIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndIndex);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (BasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicId);
      }
      if (BodyStyleIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyStyleIds);
      }
      if (ModelIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelIds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleByCatURI other) {
      if (other == null) {
        return;
      }
      if (other.CategoryIdList.Length != 0) {
        CategoryIdList = other.CategoryIdList;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.EndIndex != 0) {
        EndIndex = other.EndIndex;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.BasicId != 0) {
        BasicId = other.BasicId;
      }
      if (other.BodyStyleIds.Length != 0) {
        BodyStyleIds = other.BodyStyleIds;
      }
      if (other.ModelIds.Length != 0) {
        ModelIds = other.ModelIds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CategoryIdList = input.ReadString();
            break;
          }
          case 16: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            EndIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            MakeId = input.ReadInt32();
            break;
          }
          case 48: {
            ModelId = input.ReadInt32();
            break;
          }
          case 56: {
            BasicId = input.ReadInt32();
            break;
          }
          case 66: {
            BodyStyleIds = input.ReadString();
            break;
          }
          case 74: {
            ModelIds = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleContentURI : pb::IMessage<GrpcArticleContentURI> {
    private static readonly pb::MessageParser<GrpcArticleContentURI> _parser = new pb::MessageParser<GrpcArticleContentURI>(() => new GrpcArticleContentURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleContentURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleContentURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleContentURI(GrpcArticleContentURI other) : this() {
      basicId_ = other.basicId_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleContentURI Clone() {
      return new GrpcArticleContentURI(this);
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 1;
    private ulong basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleContentURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleContentURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasicId != other.BasicId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasicId != 0UL) hash ^= BasicId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasicId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BasicId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasicId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasicId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleContentURI other) {
      if (other == null) {
        return;
      }
      if (other.BasicId != 0UL) {
        BasicId = other.BasicId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BasicId = input.ReadUInt64();
            break;
          }
          case 16: {
            ApplicationId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelPhotoURI : pb::IMessage<GrpcModelPhotoURI> {
    private static readonly pb::MessageParser<GrpcModelPhotoURI> _parser = new pb::MessageParser<GrpcModelPhotoURI>(() => new GrpcModelPhotoURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelPhotoURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotoURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotoURI(GrpcModelPhotoURI other) : this() {
      applicationId_ = other.applicationId_;
      modelId_ = other.modelId_;
      categoryIdList_ = other.categoryIdList_;
      platformId_ = other.platformId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotoURI Clone() {
      return new GrpcModelPhotoURI(this);
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "CategoryIdList" field.</summary>
    public const int CategoryIdListFieldNumber = 3;
    private string categoryIdList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryIdList {
      get { return categoryIdList_; }
      set {
        categoryIdList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlatformId" field.</summary>
    public const int PlatformIdFieldNumber = 4;
    private string platformId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformId {
      get { return platformId_; }
      set {
        platformId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelPhotoURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelPhotoURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ModelId != other.ModelId) return false;
      if (CategoryIdList != other.CategoryIdList) return false;
      if (PlatformId != other.PlatformId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (CategoryIdList.Length != 0) hash ^= CategoryIdList.GetHashCode();
      if (PlatformId.Length != 0) hash ^= PlatformId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ApplicationId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (CategoryIdList.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CategoryIdList);
      }
      if (PlatformId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlatformId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (CategoryIdList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryIdList);
      }
      if (PlatformId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelPhotoURI other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.CategoryIdList.Length != 0) {
        CategoryIdList = other.CategoryIdList;
      }
      if (other.PlatformId.Length != 0) {
        PlatformId = other.PlatformId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 26: {
            CategoryIdList = input.ReadString();
            break;
          }
          case 34: {
            PlatformId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleRecentURI : pb::IMessage<GrpcArticleRecentURI> {
    private static readonly pb::MessageParser<GrpcArticleRecentURI> _parser = new pb::MessageParser<GrpcArticleRecentURI>(() => new GrpcArticleRecentURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleRecentURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleRecentURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleRecentURI(GrpcArticleRecentURI other) : this() {
      applicationId_ = other.applicationId_;
      contentTypes_ = other.contentTypes_;
      totalRecords_ = other.totalRecords_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      bodyStyleIds_ = other.bodyStyleIds_;
      modelIds_ = other.modelIds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleRecentURI Clone() {
      return new GrpcArticleRecentURI(this);
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "ContentTypes" field.</summary>
    public const int ContentTypesFieldNumber = 2;
    private string contentTypes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentTypes {
      get { return contentTypes_; }
      set {
        contentTypes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TotalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 3;
    private uint totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 4;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 5;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "BodyStyleIds" field.</summary>
    public const int BodyStyleIdsFieldNumber = 6;
    private string bodyStyleIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyStyleIds {
      get { return bodyStyleIds_; }
      set {
        bodyStyleIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelIds" field.</summary>
    public const int ModelIdsFieldNumber = 7;
    private string modelIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelIds {
      get { return modelIds_; }
      set {
        modelIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleRecentURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleRecentURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ContentTypes != other.ContentTypes) return false;
      if (TotalRecords != other.TotalRecords) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (BodyStyleIds != other.BodyStyleIds) return false;
      if (ModelIds != other.ModelIds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (ContentTypes.Length != 0) hash ^= ContentTypes.GetHashCode();
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (BodyStyleIds.Length != 0) hash ^= BodyStyleIds.GetHashCode();
      if (ModelIds.Length != 0) hash ^= ModelIds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ApplicationId);
      }
      if (ContentTypes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentTypes);
      }
      if (TotalRecords != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TotalRecords);
      }
      if (MakeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ModelId);
      }
      if (BodyStyleIds.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BodyStyleIds);
      }
      if (ModelIds.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModelIds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (ContentTypes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentTypes);
      }
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalRecords);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (BodyStyleIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyStyleIds);
      }
      if (ModelIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelIds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleRecentURI other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ContentTypes.Length != 0) {
        ContentTypes = other.ContentTypes;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.BodyStyleIds.Length != 0) {
        BodyStyleIds = other.BodyStyleIds;
      }
      if (other.ModelIds.Length != 0) {
        ModelIds = other.ModelIds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 18: {
            ContentTypes = input.ReadString();
            break;
          }
          case 24: {
            TotalRecords = input.ReadUInt32();
            break;
          }
          case 32: {
            MakeId = input.ReadInt32();
            break;
          }
          case 40: {
            ModelId = input.ReadInt32();
            break;
          }
          case 50: {
            BodyStyleIds = input.ReadString();
            break;
          }
          case 58: {
            ModelIds = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCarSynopsis : pb::IMessage<GrpcCarSynopsis> {
    private static readonly pb::MessageParser<GrpcCarSynopsis> _parser = new pb::MessageParser<GrpcCarSynopsis>(() => new GrpcCarSynopsis());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCarSynopsis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarSynopsis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarSynopsis(GrpcCarSynopsis other) : this() {
      description_ = other.description_;
      modelId_ = other.modelId_;
      content_ = other.content_;
      pageName_ = other.pageName_;
      priority_ = other.priority_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarSynopsis Clone() {
      return new GrpcCarSynopsis(this);
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PageName" field.</summary>
    public const int PageNameFieldNumber = 4;
    private string pageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageName {
      get { return pageName_; }
      set {
        pageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 5;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCarSynopsis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCarSynopsis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (ModelId != other.ModelId) return false;
      if (Content != other.Content) return false;
      if (PageName != other.PageName) return false;
      if (Priority != other.Priority) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (PageName.Length != 0) hash ^= PageName.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (PageName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageName);
      }
      if (Priority != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Priority);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (PageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageName);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCarSynopsis other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.PageName.Length != 0) {
        PageName = other.PageName;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 34: {
            PageName = input.ReadString();
            break;
          }
          case 40: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMakeAndModelDetailList : pb::IMessage<GrpcMakeAndModelDetailList> {
    private static readonly pb::MessageParser<GrpcMakeAndModelDetailList> _parser = new pb::MessageParser<GrpcMakeAndModelDetailList>(() => new GrpcMakeAndModelDetailList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMakeAndModelDetailList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeAndModelDetailList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeAndModelDetailList(GrpcMakeAndModelDetailList other) : this() {
      lstGrpcMakeAndModelDetail_ = other.lstGrpcMakeAndModelDetail_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeAndModelDetailList Clone() {
      return new GrpcMakeAndModelDetailList(this);
    }

    /// <summary>Field number for the "LstGrpcMakeAndModelDetail" field.</summary>
    public const int LstGrpcMakeAndModelDetailFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetail> _repeated_lstGrpcMakeAndModelDetail_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetail.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetail> lstGrpcMakeAndModelDetail_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcMakeAndModelDetail> LstGrpcMakeAndModelDetail {
      get { return lstGrpcMakeAndModelDetail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMakeAndModelDetailList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMakeAndModelDetailList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcMakeAndModelDetail_.Equals(other.lstGrpcMakeAndModelDetail_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcMakeAndModelDetail_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcMakeAndModelDetail_.WriteTo(output, _repeated_lstGrpcMakeAndModelDetail_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcMakeAndModelDetail_.CalculateSize(_repeated_lstGrpcMakeAndModelDetail_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMakeAndModelDetailList other) {
      if (other == null) {
        return;
      }
      lstGrpcMakeAndModelDetail_.Add(other.lstGrpcMakeAndModelDetail_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcMakeAndModelDetail_.AddEntriesFrom(input, _repeated_lstGrpcMakeAndModelDetail_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcContentFeedSummaryList : pb::IMessage<GrpcContentFeedSummaryList> {
    private static readonly pb::MessageParser<GrpcContentFeedSummaryList> _parser = new pb::MessageParser<GrpcContentFeedSummaryList>(() => new GrpcContentFeedSummaryList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcContentFeedSummaryList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedSummaryList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedSummaryList(GrpcContentFeedSummaryList other) : this() {
      lstGrpcContentFeedSummary_ = other.lstGrpcContentFeedSummary_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentFeedSummaryList Clone() {
      return new GrpcContentFeedSummaryList(this);
    }

    /// <summary>Field number for the "LstGrpcContentFeedSummary" field.</summary>
    public const int LstGrpcContentFeedSummaryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcContentFeedSummary> _repeated_lstGrpcContentFeedSummary_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcContentFeedSummary.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcContentFeedSummary> lstGrpcContentFeedSummary_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcContentFeedSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcContentFeedSummary> LstGrpcContentFeedSummary {
      get { return lstGrpcContentFeedSummary_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcContentFeedSummaryList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcContentFeedSummaryList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcContentFeedSummary_.Equals(other.lstGrpcContentFeedSummary_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcContentFeedSummary_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcContentFeedSummary_.WriteTo(output, _repeated_lstGrpcContentFeedSummary_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcContentFeedSummary_.CalculateSize(_repeated_lstGrpcContentFeedSummary_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcContentFeedSummaryList other) {
      if (other == null) {
        return;
      }
      lstGrpcContentFeedSummary_.Add(other.lstGrpcContentFeedSummary_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcContentFeedSummary_.AddEntriesFrom(input, _repeated_lstGrpcContentFeedSummary_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleSummaryList : pb::IMessage<GrpcArticleSummaryList> {
    private static readonly pb::MessageParser<GrpcArticleSummaryList> _parser = new pb::MessageParser<GrpcArticleSummaryList>(() => new GrpcArticleSummaryList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleSummaryList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleSummaryList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleSummaryList(GrpcArticleSummaryList other) : this() {
      lstGrpcArticleSummary_ = other.lstGrpcArticleSummary_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleSummaryList Clone() {
      return new GrpcArticleSummaryList(this);
    }

    /// <summary>Field number for the "LstGrpcArticleSummary" field.</summary>
    public const int LstGrpcArticleSummaryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcArticleSummary> _repeated_lstGrpcArticleSummary_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcArticleSummary.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcArticleSummary> lstGrpcArticleSummary_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcArticleSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcArticleSummary> LstGrpcArticleSummary {
      get { return lstGrpcArticleSummary_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleSummaryList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleSummaryList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcArticleSummary_.Equals(other.lstGrpcArticleSummary_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcArticleSummary_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcArticleSummary_.WriteTo(output, _repeated_lstGrpcArticleSummary_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcArticleSummary_.CalculateSize(_repeated_lstGrpcArticleSummary_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleSummaryList other) {
      if (other == null) {
        return;
      }
      lstGrpcArticleSummary_.Add(other.lstGrpcArticleSummary_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcArticleSummary_.AddEntriesFrom(input, _repeated_lstGrpcArticleSummary_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelImageList : pb::IMessage<GrpcModelImageList> {
    private static readonly pb::MessageParser<GrpcModelImageList> _parser = new pb::MessageParser<GrpcModelImageList>(() => new GrpcModelImageList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelImageList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelImageList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelImageList(GrpcModelImageList other) : this() {
      lstGrpcModelImage_ = other.lstGrpcModelImage_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelImageList Clone() {
      return new GrpcModelImageList(this);
    }

    /// <summary>Field number for the "LstGrpcModelImage" field.</summary>
    public const int LstGrpcModelImageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcModelImage> _repeated_lstGrpcModelImage_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcModelImage.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelImage> lstGrpcModelImage_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelImage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelImage> LstGrpcModelImage {
      get { return lstGrpcModelImage_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelImageList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelImageList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcModelImage_.Equals(other.lstGrpcModelImage_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcModelImage_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcModelImage_.WriteTo(output, _repeated_lstGrpcModelImage_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcModelImage_.CalculateSize(_repeated_lstGrpcModelImage_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelImageList other) {
      if (other == null) {
        return;
      }
      lstGrpcModelImage_.Add(other.lstGrpcModelImage_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcModelImage_.AddEntriesFrom(input, _repeated_lstGrpcModelImage_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideo : pb::IMessage<GrpcVideo> {
    private static readonly pb::MessageParser<GrpcVideo> _parser = new pb::MessageParser<GrpcVideo>(() => new GrpcVideo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideo(GrpcVideo other) : this() {
      videoTitle_ = other.videoTitle_;
      videoUrl_ = other.videoUrl_;
      videoId_ = other.videoId_;
      views_ = other.views_;
      likes_ = other.likes_;
      description_ = other.description_;
      basicId_ = other.basicId_;
      tags_ = other.tags_;
      duration_ = other.duration_;
      makeName_ = other.makeName_;
      modelName_ = other.modelName_;
      maskingName_ = other.maskingName_;
      subCatId_ = other.subCatId_;
      subCatName_ = other.subCatName_;
      videoTitleUrl_ = other.videoTitleUrl_;
      imgHost_ = other.imgHost_;
      thumbnailPath_ = other.thumbnailPath_;
      imagePath_ = other.imagePath_;
      displayDate_ = other.displayDate_;
      isFeatured_ = other.isFeatured_;
      categoryId_ = other.categoryId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideo Clone() {
      return new GrpcVideo(this);
    }

    /// <summary>Field number for the "VideoTitle" field.</summary>
    public const int VideoTitleFieldNumber = 1;
    private string videoTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoTitle {
      get { return videoTitle_; }
      set {
        videoTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VideoUrl" field.</summary>
    public const int VideoUrlFieldNumber = 2;
    private string videoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoUrl {
      get { return videoUrl_; }
      set {
        videoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VideoId" field.</summary>
    public const int VideoIdFieldNumber = 3;
    private string videoId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoId {
      get { return videoId_; }
      set {
        videoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Views" field.</summary>
    public const int ViewsFieldNumber = 4;
    private int views_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Views {
      get { return views_; }
      set {
        views_ = value;
      }
    }

    /// <summary>Field number for the "Likes" field.</summary>
    public const int LikesFieldNumber = 5;
    private int likes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Likes {
      get { return likes_; }
      set {
        likes_ = value;
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 7;
    private int basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 8;
    private string tags_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Duration" field.</summary>
    public const int DurationFieldNumber = 9;
    private int duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 11;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 12;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 13;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCatId" field.</summary>
    public const int SubCatIdFieldNumber = 14;
    private string subCatId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCatId {
      get { return subCatId_; }
      set {
        subCatId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCatName" field.</summary>
    public const int SubCatNameFieldNumber = 15;
    private string subCatName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCatName {
      get { return subCatName_; }
      set {
        subCatName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VideoTitleUrl" field.</summary>
    public const int VideoTitleUrlFieldNumber = 16;
    private string videoTitleUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoTitleUrl {
      get { return videoTitleUrl_; }
      set {
        videoTitleUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImgHost" field.</summary>
    public const int ImgHostFieldNumber = 17;
    private string imgHost_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImgHost {
      get { return imgHost_; }
      set {
        imgHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThumbnailPath" field.</summary>
    public const int ThumbnailPathFieldNumber = 18;
    private string thumbnailPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailPath {
      get { return thumbnailPath_; }
      set {
        thumbnailPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImagePath" field.</summary>
    public const int ImagePathFieldNumber = 19;
    private string imagePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagePath {
      get { return imagePath_; }
      set {
        imagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayDate" field.</summary>
    public const int DisplayDateFieldNumber = 20;
    private string displayDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayDate {
      get { return displayDate_; }
      set {
        displayDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsFeatured" field.</summary>
    public const int IsFeaturedFieldNumber = 21;
    private bool isFeatured_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFeatured {
      get { return isFeatured_; }
      set {
        isFeatured_ = value;
      }
    }

    /// <summary>Field number for the "CategoryId" field.</summary>
    public const int CategoryIdFieldNumber = 22;
    private int categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VideoTitle != other.VideoTitle) return false;
      if (VideoUrl != other.VideoUrl) return false;
      if (VideoId != other.VideoId) return false;
      if (Views != other.Views) return false;
      if (Likes != other.Likes) return false;
      if (Description != other.Description) return false;
      if (BasicId != other.BasicId) return false;
      if (Tags != other.Tags) return false;
      if (Duration != other.Duration) return false;
      if (MakeName != other.MakeName) return false;
      if (ModelName != other.ModelName) return false;
      if (MaskingName != other.MaskingName) return false;
      if (SubCatId != other.SubCatId) return false;
      if (SubCatName != other.SubCatName) return false;
      if (VideoTitleUrl != other.VideoTitleUrl) return false;
      if (ImgHost != other.ImgHost) return false;
      if (ThumbnailPath != other.ThumbnailPath) return false;
      if (ImagePath != other.ImagePath) return false;
      if (DisplayDate != other.DisplayDate) return false;
      if (IsFeatured != other.IsFeatured) return false;
      if (CategoryId != other.CategoryId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VideoTitle.Length != 0) hash ^= VideoTitle.GetHashCode();
      if (VideoUrl.Length != 0) hash ^= VideoUrl.GetHashCode();
      if (VideoId.Length != 0) hash ^= VideoId.GetHashCode();
      if (Views != 0) hash ^= Views.GetHashCode();
      if (Likes != 0) hash ^= Likes.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (BasicId != 0) hash ^= BasicId.GetHashCode();
      if (Tags.Length != 0) hash ^= Tags.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (SubCatId.Length != 0) hash ^= SubCatId.GetHashCode();
      if (SubCatName.Length != 0) hash ^= SubCatName.GetHashCode();
      if (VideoTitleUrl.Length != 0) hash ^= VideoTitleUrl.GetHashCode();
      if (ImgHost.Length != 0) hash ^= ImgHost.GetHashCode();
      if (ThumbnailPath.Length != 0) hash ^= ThumbnailPath.GetHashCode();
      if (ImagePath.Length != 0) hash ^= ImagePath.GetHashCode();
      if (DisplayDate.Length != 0) hash ^= DisplayDate.GetHashCode();
      if (IsFeatured != false) hash ^= IsFeatured.GetHashCode();
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VideoTitle.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VideoTitle);
      }
      if (VideoUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VideoUrl);
      }
      if (VideoId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VideoId);
      }
      if (Views != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Views);
      }
      if (Likes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Likes);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (BasicId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BasicId);
      }
      if (Tags.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Tags);
      }
      if (Duration != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Duration);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(MakeName);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ModelName);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MaskingName);
      }
      if (SubCatId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SubCatId);
      }
      if (SubCatName.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SubCatName);
      }
      if (VideoTitleUrl.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(VideoTitleUrl);
      }
      if (ImgHost.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ImgHost);
      }
      if (ThumbnailPath.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ThumbnailPath);
      }
      if (ImagePath.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ImagePath);
      }
      if (DisplayDate.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(DisplayDate);
      }
      if (IsFeatured != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsFeatured);
      }
      if (CategoryId != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(CategoryId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VideoTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoTitle);
      }
      if (VideoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoUrl);
      }
      if (VideoId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoId);
      }
      if (Views != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Views);
      }
      if (Likes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Likes);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (BasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicId);
      }
      if (Tags.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tags);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (SubCatId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCatId);
      }
      if (SubCatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCatName);
      }
      if (VideoTitleUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VideoTitleUrl);
      }
      if (ImgHost.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ImgHost);
      }
      if (ThumbnailPath.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ThumbnailPath);
      }
      if (ImagePath.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ImagePath);
      }
      if (DisplayDate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DisplayDate);
      }
      if (IsFeatured != false) {
        size += 2 + 1;
      }
      if (CategoryId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideo other) {
      if (other == null) {
        return;
      }
      if (other.VideoTitle.Length != 0) {
        VideoTitle = other.VideoTitle;
      }
      if (other.VideoUrl.Length != 0) {
        VideoUrl = other.VideoUrl;
      }
      if (other.VideoId.Length != 0) {
        VideoId = other.VideoId;
      }
      if (other.Views != 0) {
        Views = other.Views;
      }
      if (other.Likes != 0) {
        Likes = other.Likes;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.BasicId != 0) {
        BasicId = other.BasicId;
      }
      if (other.Tags.Length != 0) {
        Tags = other.Tags;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.SubCatId.Length != 0) {
        SubCatId = other.SubCatId;
      }
      if (other.SubCatName.Length != 0) {
        SubCatName = other.SubCatName;
      }
      if (other.VideoTitleUrl.Length != 0) {
        VideoTitleUrl = other.VideoTitleUrl;
      }
      if (other.ImgHost.Length != 0) {
        ImgHost = other.ImgHost;
      }
      if (other.ThumbnailPath.Length != 0) {
        ThumbnailPath = other.ThumbnailPath;
      }
      if (other.ImagePath.Length != 0) {
        ImagePath = other.ImagePath;
      }
      if (other.DisplayDate.Length != 0) {
        DisplayDate = other.DisplayDate;
      }
      if (other.IsFeatured != false) {
        IsFeatured = other.IsFeatured;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            VideoTitle = input.ReadString();
            break;
          }
          case 18: {
            VideoUrl = input.ReadString();
            break;
          }
          case 26: {
            VideoId = input.ReadString();
            break;
          }
          case 32: {
            Views = input.ReadInt32();
            break;
          }
          case 40: {
            Likes = input.ReadInt32();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 56: {
            BasicId = input.ReadInt32();
            break;
          }
          case 66: {
            Tags = input.ReadString();
            break;
          }
          case 72: {
            Duration = input.ReadInt32();
            break;
          }
          case 90: {
            MakeName = input.ReadString();
            break;
          }
          case 98: {
            ModelName = input.ReadString();
            break;
          }
          case 106: {
            MaskingName = input.ReadString();
            break;
          }
          case 114: {
            SubCatId = input.ReadString();
            break;
          }
          case 122: {
            SubCatName = input.ReadString();
            break;
          }
          case 130: {
            VideoTitleUrl = input.ReadString();
            break;
          }
          case 138: {
            ImgHost = input.ReadString();
            break;
          }
          case 146: {
            ThumbnailPath = input.ReadString();
            break;
          }
          case 154: {
            ImagePath = input.ReadString();
            break;
          }
          case 162: {
            DisplayDate = input.ReadString();
            break;
          }
          case 168: {
            IsFeatured = input.ReadBool();
            break;
          }
          case 176: {
            CategoryId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideoListEntity : pb::IMessage<GrpcVideoListEntity> {
    private static readonly pb::MessageParser<GrpcVideoListEntity> _parser = new pb::MessageParser<GrpcVideoListEntity>(() => new GrpcVideoListEntity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideoListEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideoListEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideoListEntity(GrpcVideoListEntity other) : this() {
      Videos = other.videos_ != null ? other.Videos.Clone() : null;
      totalRecords_ = other.totalRecords_;
      prevPageUrl_ = other.prevPageUrl_;
      nextPageUrl_ = other.nextPageUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideoListEntity Clone() {
      return new GrpcVideoListEntity(this);
    }

    /// <summary>Field number for the "Videos" field.</summary>
    public const int VideosFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcVideosList videos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcVideosList Videos {
      get { return videos_; }
      set {
        videos_ = value;
      }
    }

    /// <summary>Field number for the "TotalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 2;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "PrevPageUrl" field.</summary>
    public const int PrevPageUrlFieldNumber = 3;
    private string prevPageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevPageUrl {
      get { return prevPageUrl_; }
      set {
        prevPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 4;
    private string nextPageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideoListEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideoListEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Videos, other.Videos)) return false;
      if (TotalRecords != other.TotalRecords) return false;
      if (PrevPageUrl != other.PrevPageUrl) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (videos_ != null) hash ^= Videos.GetHashCode();
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      if (PrevPageUrl.Length != 0) hash ^= PrevPageUrl.GetHashCode();
      if (NextPageUrl.Length != 0) hash ^= NextPageUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (videos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Videos);
      }
      if (TotalRecords != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalRecords);
      }
      if (PrevPageUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevPageUrl);
      }
      if (NextPageUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NextPageUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (videos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Videos);
      }
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      if (PrevPageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevPageUrl);
      }
      if (NextPageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideoListEntity other) {
      if (other == null) {
        return;
      }
      if (other.videos_ != null) {
        if (videos_ == null) {
          videos_ = new global::EditCMSWindowsService.Messages.GrpcVideosList();
        }
        Videos.MergeFrom(other.Videos);
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      if (other.PrevPageUrl.Length != 0) {
        PrevPageUrl = other.PrevPageUrl;
      }
      if (other.NextPageUrl.Length != 0) {
        NextPageUrl = other.NextPageUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (videos_ == null) {
              videos_ = new global::EditCMSWindowsService.Messages.GrpcVideosList();
            }
            input.ReadMessage(videos_);
            break;
          }
          case 16: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 26: {
            PrevPageUrl = input.ReadString();
            break;
          }
          case 34: {
            NextPageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideosList : pb::IMessage<GrpcVideosList> {
    private static readonly pb::MessageParser<GrpcVideosList> _parser = new pb::MessageParser<GrpcVideosList>(() => new GrpcVideosList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideosList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosList(GrpcVideosList other) : this() {
      lstGrpcVideos_ = other.lstGrpcVideos_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosList Clone() {
      return new GrpcVideosList(this);
    }

    /// <summary>Field number for the "LstGrpcVideos" field.</summary>
    public const int LstGrpcVideosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcVideo> _repeated_lstGrpcVideos_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcVideo.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVideo> lstGrpcVideos_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVideo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVideo> LstGrpcVideos {
      get { return lstGrpcVideos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideosList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideosList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcVideos_.Equals(other.lstGrpcVideos_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcVideos_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcVideos_.WriteTo(output, _repeated_lstGrpcVideos_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcVideos_.CalculateSize(_repeated_lstGrpcVideos_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideosList other) {
      if (other == null) {
        return;
      }
      lstGrpcVideos_.Add(other.lstGrpcVideos_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcVideos_.AddEntriesFrom(input, _repeated_lstGrpcVideos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideosBySubCategoryURI : pb::IMessage<GrpcVideosBySubCategoryURI> {
    private static readonly pb::MessageParser<GrpcVideosBySubCategoryURI> _parser = new pb::MessageParser<GrpcVideosBySubCategoryURI>(() => new GrpcVideosBySubCategoryURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideosBySubCategoryURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosBySubCategoryURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosBySubCategoryURI(GrpcVideosBySubCategoryURI other) : this() {
      subCategoryId_ = other.subCategoryId_;
      applicationId_ = other.applicationId_;
      startIndex_ = other.startIndex_;
      endIndex_ = other.endIndex_;
      modelId_ = other.modelId_;
      makeId_ = other.makeId_;
      bodyStyleIds_ = other.bodyStyleIds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosBySubCategoryURI Clone() {
      return new GrpcVideosBySubCategoryURI(this);
    }

    /// <summary>Field number for the "SubCategoryId" field.</summary>
    public const int SubCategoryIdFieldNumber = 1;
    private uint subCategoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SubCategoryId {
      get { return subCategoryId_; }
      set {
        subCategoryId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private uint startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "EndIndex" field.</summary>
    public const int EndIndexFieldNumber = 4;
    private uint endIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndIndex {
      get { return endIndex_; }
      set {
        endIndex_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 5;
    private uint modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 6;
    private uint makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "BodyStyleIds" field.</summary>
    public const int BodyStyleIdsFieldNumber = 7;
    private string bodyStyleIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyStyleIds {
      get { return bodyStyleIds_; }
      set {
        bodyStyleIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideosBySubCategoryURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideosBySubCategoryURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubCategoryId != other.SubCategoryId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (EndIndex != other.EndIndex) return false;
      if (ModelId != other.ModelId) return false;
      if (MakeId != other.MakeId) return false;
      if (BodyStyleIds != other.BodyStyleIds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubCategoryId != 0) hash ^= SubCategoryId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (EndIndex != 0) hash ^= EndIndex.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (BodyStyleIds.Length != 0) hash ^= BodyStyleIds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubCategoryId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SubCategoryId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ApplicationId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartIndex);
      }
      if (EndIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EndIndex);
      }
      if (ModelId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ModelId);
      }
      if (MakeId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MakeId);
      }
      if (BodyStyleIds.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(BodyStyleIds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubCategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubCategoryId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartIndex);
      }
      if (EndIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndIndex);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModelId);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MakeId);
      }
      if (BodyStyleIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyStyleIds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideosBySubCategoryURI other) {
      if (other == null) {
        return;
      }
      if (other.SubCategoryId != 0) {
        SubCategoryId = other.SubCategoryId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.EndIndex != 0) {
        EndIndex = other.EndIndex;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.BodyStyleIds.Length != 0) {
        BodyStyleIds = other.BodyStyleIds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SubCategoryId = input.ReadUInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            EndIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            ModelId = input.ReadUInt32();
            break;
          }
          case 48: {
            MakeId = input.ReadUInt32();
            break;
          }
          case 58: {
            BodyStyleIds = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideosByIdURI : pb::IMessage<GrpcVideosByIdURI> {
    private static readonly pb::MessageParser<GrpcVideosByIdURI> _parser = new pb::MessageParser<GrpcVideosByIdURI>(() => new GrpcVideosByIdURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideosByIdURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosByIdURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosByIdURI(GrpcVideosByIdURI other) : this() {
      id_ = other.id_;
      applicationId_ = other.applicationId_;
      startIndex_ = other.startIndex_;
      endIndex_ = other.endIndex_;
      similarModels_ = other.similarModels_;
      bodyStyleIds_ = other.bodyStyleIds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosByIdURI Clone() {
      return new GrpcVideosByIdURI(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private uint startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "EndIndex" field.</summary>
    public const int EndIndexFieldNumber = 4;
    private uint endIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndIndex {
      get { return endIndex_; }
      set {
        endIndex_ = value;
      }
    }

    /// <summary>Field number for the "SimilarModels" field.</summary>
    public const int SimilarModelsFieldNumber = 5;
    private string similarModels_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SimilarModels {
      get { return similarModels_; }
      set {
        similarModels_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BodyStyleIds" field.</summary>
    public const int BodyStyleIdsFieldNumber = 6;
    private string bodyStyleIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyStyleIds {
      get { return bodyStyleIds_; }
      set {
        bodyStyleIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideosByIdURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideosByIdURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (EndIndex != other.EndIndex) return false;
      if (SimilarModels != other.SimilarModels) return false;
      if (BodyStyleIds != other.BodyStyleIds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (EndIndex != 0) hash ^= EndIndex.GetHashCode();
      if (SimilarModels.Length != 0) hash ^= SimilarModels.GetHashCode();
      if (BodyStyleIds.Length != 0) hash ^= BodyStyleIds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ApplicationId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartIndex);
      }
      if (EndIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EndIndex);
      }
      if (SimilarModels.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SimilarModels);
      }
      if (BodyStyleIds.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BodyStyleIds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartIndex);
      }
      if (EndIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndIndex);
      }
      if (SimilarModels.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SimilarModels);
      }
      if (BodyStyleIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyStyleIds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideosByIdURI other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.EndIndex != 0) {
        EndIndex = other.EndIndex;
      }
      if (other.SimilarModels.Length != 0) {
        SimilarModels = other.SimilarModels;
      }
      if (other.BodyStyleIds.Length != 0) {
        BodyStyleIds = other.BodyStyleIds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            EndIndex = input.ReadUInt32();
            break;
          }
          case 42: {
            SimilarModels = input.ReadString();
            break;
          }
          case 50: {
            BodyStyleIds = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideosBySubCategoriesURI : pb::IMessage<GrpcVideosBySubCategoriesURI> {
    private static readonly pb::MessageParser<GrpcVideosBySubCategoriesURI> _parser = new pb::MessageParser<GrpcVideosBySubCategoriesURI>(() => new GrpcVideosBySubCategoriesURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideosBySubCategoriesURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosBySubCategoriesURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosBySubCategoriesURI(GrpcVideosBySubCategoriesURI other) : this() {
      subCategoryIds_ = other.subCategoryIds_;
      applicationId_ = other.applicationId_;
      startIndex_ = other.startIndex_;
      endIndex_ = other.endIndex_;
      sortCategory_ = other.sortCategory_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      bodyStyleIds_ = other.bodyStyleIds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosBySubCategoriesURI Clone() {
      return new GrpcVideosBySubCategoriesURI(this);
    }

    /// <summary>Field number for the "SubCategoryIds" field.</summary>
    public const int SubCategoryIdsFieldNumber = 1;
    private string subCategoryIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCategoryIds {
      get { return subCategoryIds_; }
      set {
        subCategoryIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private uint startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "EndIndex" field.</summary>
    public const int EndIndexFieldNumber = 4;
    private uint endIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndIndex {
      get { return endIndex_; }
      set {
        endIndex_ = value;
      }
    }

    /// <summary>Field number for the "SortCategory" field.</summary>
    public const int SortCategoryFieldNumber = 5;
    private global::EditCMSWindowsService.Messages.GrpcVideoSortOrderCategory sortCategory_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcVideoSortOrderCategory SortCategory {
      get { return sortCategory_; }
      set {
        sortCategory_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 6;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 7;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "BodyStyleIds" field.</summary>
    public const int BodyStyleIdsFieldNumber = 8;
    private string bodyStyleIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyStyleIds {
      get { return bodyStyleIds_; }
      set {
        bodyStyleIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideosBySubCategoriesURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideosBySubCategoriesURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubCategoryIds != other.SubCategoryIds) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (EndIndex != other.EndIndex) return false;
      if (SortCategory != other.SortCategory) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (BodyStyleIds != other.BodyStyleIds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubCategoryIds.Length != 0) hash ^= SubCategoryIds.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (EndIndex != 0) hash ^= EndIndex.GetHashCode();
      if (SortCategory != 0) hash ^= SortCategory.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (BodyStyleIds.Length != 0) hash ^= BodyStyleIds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubCategoryIds.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubCategoryIds);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ApplicationId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartIndex);
      }
      if (EndIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EndIndex);
      }
      if (SortCategory != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) SortCategory);
      }
      if (MakeId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ModelId);
      }
      if (BodyStyleIds.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BodyStyleIds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubCategoryIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategoryIds);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartIndex);
      }
      if (EndIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndIndex);
      }
      if (SortCategory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SortCategory);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (BodyStyleIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyStyleIds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideosBySubCategoriesURI other) {
      if (other == null) {
        return;
      }
      if (other.SubCategoryIds.Length != 0) {
        SubCategoryIds = other.SubCategoryIds;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.EndIndex != 0) {
        EndIndex = other.EndIndex;
      }
      if (other.SortCategory != 0) {
        SortCategory = other.SortCategory;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.BodyStyleIds.Length != 0) {
        BodyStyleIds = other.BodyStyleIds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SubCategoryIds = input.ReadString();
            break;
          }
          case 16: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            EndIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            sortCategory_ = (global::EditCMSWindowsService.Messages.GrpcVideoSortOrderCategory) input.ReadEnum();
            break;
          }
          case 48: {
            MakeId = input.ReadInt32();
            break;
          }
          case 56: {
            ModelId = input.ReadInt32();
            break;
          }
          case 66: {
            BodyStyleIds = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EditCMSCategory : pb::IMessage<EditCMSCategory> {
    private static readonly pb::MessageParser<EditCMSCategory> _parser = new pb::MessageParser<EditCMSCategory>(() => new EditCMSCategory());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EditCMSCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditCMSCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditCMSCategory(EditCMSCategory other) : this() {
      category_ = other.category_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      basicId_ = other.basicId_;
      bodyStyleId_ = other.bodyStyleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditCMSCategory Clone() {
      return new EditCMSCategory(this);
    }

    /// <summary>Field number for the "Category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.EditCMSCategoryEnum category_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.EditCMSCategoryEnum Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 2;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 3;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 4;
    private int basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "BodyStyleId" field.</summary>
    public const int BodyStyleIdFieldNumber = 5;
    private int bodyStyleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BodyStyleId {
      get { return bodyStyleId_; }
      set {
        bodyStyleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EditCMSCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EditCMSCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (BasicId != other.BasicId) return false;
      if (BodyStyleId != other.BodyStyleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category != 0) hash ^= Category.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (BasicId != 0) hash ^= BasicId.GetHashCode();
      if (BodyStyleId != 0) hash ^= BodyStyleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Category);
      }
      if (MakeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ModelId);
      }
      if (BasicId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BasicId);
      }
      if (BodyStyleId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BodyStyleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Category);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (BasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicId);
      }
      if (BodyStyleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BodyStyleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EditCMSCategory other) {
      if (other == null) {
        return;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.BasicId != 0) {
        BasicId = other.BasicId;
      }
      if (other.BodyStyleId != 0) {
        BodyStyleId = other.BodyStyleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            category_ = (global::EditCMSWindowsService.Messages.EditCMSCategoryEnum) input.ReadEnum();
            break;
          }
          case 16: {
            MakeId = input.ReadInt32();
            break;
          }
          case 24: {
            ModelId = input.ReadInt32();
            break;
          }
          case 32: {
            BasicId = input.ReadInt32();
            break;
          }
          case 40: {
            BodyStyleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcArticleBySubCatURI : pb::IMessage<GrpcArticleBySubCatURI> {
    private static readonly pb::MessageParser<GrpcArticleBySubCatURI> _parser = new pb::MessageParser<GrpcArticleBySubCatURI>(() => new GrpcArticleBySubCatURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcArticleBySubCatURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleBySubCatURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleBySubCatURI(GrpcArticleBySubCatURI other) : this() {
      categoryIdList_ = other.categoryIdList_;
      subCategory_ = other.subCategory_;
      applicationId_ = other.applicationId_;
      startIndex_ = other.startIndex_;
      endIndex_ = other.endIndex_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcArticleBySubCatURI Clone() {
      return new GrpcArticleBySubCatURI(this);
    }

    /// <summary>Field number for the "CategoryIdList" field.</summary>
    public const int CategoryIdListFieldNumber = 1;
    private string categoryIdList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryIdList {
      get { return categoryIdList_; }
      set {
        categoryIdList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCategory" field.</summary>
    public const int SubCategoryFieldNumber = 2;
    private string subCategory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCategory {
      get { return subCategory_; }
      set {
        subCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "StartIndex" field.</summary>
    public const int StartIndexFieldNumber = 4;
    private uint startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "EndIndex" field.</summary>
    public const int EndIndexFieldNumber = 5;
    private uint endIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndIndex {
      get { return endIndex_; }
      set {
        endIndex_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 6;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 7;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcArticleBySubCatURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcArticleBySubCatURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryIdList != other.CategoryIdList) return false;
      if (SubCategory != other.SubCategory) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (EndIndex != other.EndIndex) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryIdList.Length != 0) hash ^= CategoryIdList.GetHashCode();
      if (SubCategory.Length != 0) hash ^= SubCategory.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (EndIndex != 0) hash ^= EndIndex.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryIdList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CategoryIdList);
      }
      if (SubCategory.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubCategory);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ApplicationId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(StartIndex);
      }
      if (EndIndex != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EndIndex);
      }
      if (MakeId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ModelId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryIdList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryIdList);
      }
      if (SubCategory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategory);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartIndex);
      }
      if (EndIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndIndex);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcArticleBySubCatURI other) {
      if (other == null) {
        return;
      }
      if (other.CategoryIdList.Length != 0) {
        CategoryIdList = other.CategoryIdList;
      }
      if (other.SubCategory.Length != 0) {
        SubCategory = other.SubCategory;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.EndIndex != 0) {
        EndIndex = other.EndIndex;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CategoryIdList = input.ReadString();
            break;
          }
          case 18: {
            SubCategory = input.ReadString();
            break;
          }
          case 24: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            EndIndex = input.ReadUInt32();
            break;
          }
          case 48: {
            MakeId = input.ReadInt32();
            break;
          }
          case 56: {
            ModelId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedModelVideosURI : pb::IMessage<RelatedModelVideosURI> {
    private static readonly pb::MessageParser<RelatedModelVideosURI> _parser = new pb::MessageParser<RelatedModelVideosURI>(() => new RelatedModelVideosURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedModelVideosURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedModelVideosURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedModelVideosURI(RelatedModelVideosURI other) : this() {
      tags_ = other.tags_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedModelVideosURI Clone() {
      return new RelatedModelVideosURI(this);
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 1;
    private string tags_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedModelVideosURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedModelVideosURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tags != other.Tags) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tags.Length != 0) hash ^= Tags.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tags.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tags);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tags.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tags);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedModelVideosURI other) {
      if (other == null) {
        return;
      }
      if (other.Tags.Length != 0) {
        Tags = other.Tags;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Tags = input.ReadString();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcRelatedArticlesURI : pb::IMessage<GrpcRelatedArticlesURI> {
    private static readonly pb::MessageParser<GrpcRelatedArticlesURI> _parser = new pb::MessageParser<GrpcRelatedArticlesURI>(() => new GrpcRelatedArticlesURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcRelatedArticlesURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticlesURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticlesURI(GrpcRelatedArticlesURI other) : this() {
      applicationId_ = other.applicationId_;
      contentTypes_ = other.contentTypes_;
      tag_ = other.tag_;
      totalRecords_ = other.totalRecords_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticlesURI Clone() {
      return new GrpcRelatedArticlesURI(this);
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private uint applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "ContentTypes" field.</summary>
    public const int ContentTypesFieldNumber = 2;
    private string contentTypes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentTypes {
      get { return contentTypes_; }
      set {
        contentTypes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tag" field.</summary>
    public const int TagFieldNumber = 3;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TotalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 4;
    private uint totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcRelatedArticlesURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcRelatedArticlesURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ContentTypes != other.ContentTypes) return false;
      if (Tag != other.Tag) return false;
      if (TotalRecords != other.TotalRecords) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (ContentTypes.Length != 0) hash ^= ContentTypes.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ApplicationId);
      }
      if (ContentTypes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentTypes);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Tag);
      }
      if (TotalRecords != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TotalRecords);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApplicationId);
      }
      if (ContentTypes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentTypes);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalRecords);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcRelatedArticlesURI other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ContentTypes.Length != 0) {
        ContentTypes = other.ContentTypes;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicationId = input.ReadUInt32();
            break;
          }
          case 18: {
            ContentTypes = input.ReadString();
            break;
          }
          case 26: {
            Tag = input.ReadString();
            break;
          }
          case 32: {
            TotalRecords = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopularModelPhotosData : pb::IMessage<GrpcPopularModelPhotosData> {
    private static readonly pb::MessageParser<GrpcPopularModelPhotosData> _parser = new pb::MessageParser<GrpcPopularModelPhotosData>(() => new GrpcPopularModelPhotosData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopularModelPhotosData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularModelPhotosData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularModelPhotosData(GrpcPopularModelPhotosData other) : this() {
      ModelPhotoList = other.modelPhotoList_ != null ? other.ModelPhotoList.Clone() : null;
      recordCount_ = other.recordCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularModelPhotosData Clone() {
      return new GrpcPopularModelPhotosData(this);
    }

    /// <summary>Field number for the "ModelPhotoList" field.</summary>
    public const int ModelPhotoListFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcModelPhotosList modelPhotoList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcModelPhotosList ModelPhotoList {
      get { return modelPhotoList_; }
      set {
        modelPhotoList_ = value;
      }
    }

    /// <summary>Field number for the "RecordCount" field.</summary>
    public const int RecordCountFieldNumber = 2;
    private int recordCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecordCount {
      get { return recordCount_; }
      set {
        recordCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopularModelPhotosData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopularModelPhotosData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ModelPhotoList, other.ModelPhotoList)) return false;
      if (RecordCount != other.RecordCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (modelPhotoList_ != null) hash ^= ModelPhotoList.GetHashCode();
      if (RecordCount != 0) hash ^= RecordCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (modelPhotoList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ModelPhotoList);
      }
      if (RecordCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RecordCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (modelPhotoList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelPhotoList);
      }
      if (RecordCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopularModelPhotosData other) {
      if (other == null) {
        return;
      }
      if (other.modelPhotoList_ != null) {
        if (modelPhotoList_ == null) {
          modelPhotoList_ = new global::EditCMSWindowsService.Messages.GrpcModelPhotosList();
        }
        ModelPhotoList.MergeFrom(other.ModelPhotoList);
      }
      if (other.RecordCount != 0) {
        RecordCount = other.RecordCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (modelPhotoList_ == null) {
              modelPhotoList_ = new global::EditCMSWindowsService.Messages.GrpcModelPhotosList();
            }
            input.ReadMessage(modelPhotoList_);
            break;
          }
          case 16: {
            RecordCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopularModelVideoData : pb::IMessage<GrpcPopularModelVideoData> {
    private static readonly pb::MessageParser<GrpcPopularModelVideoData> _parser = new pb::MessageParser<GrpcPopularModelVideoData>(() => new GrpcPopularModelVideoData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopularModelVideoData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularModelVideoData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularModelVideoData(GrpcPopularModelVideoData other) : this() {
      ModelVideoList = other.modelVideoList_ != null ? other.ModelVideoList.Clone() : null;
      recordCount_ = other.recordCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularModelVideoData Clone() {
      return new GrpcPopularModelVideoData(this);
    }

    /// <summary>Field number for the "ModelVideoList" field.</summary>
    public const int ModelVideoListFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcModelVideoList modelVideoList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcModelVideoList ModelVideoList {
      get { return modelVideoList_; }
      set {
        modelVideoList_ = value;
      }
    }

    /// <summary>Field number for the "RecordCount" field.</summary>
    public const int RecordCountFieldNumber = 2;
    private int recordCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecordCount {
      get { return recordCount_; }
      set {
        recordCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopularModelVideoData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopularModelVideoData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ModelVideoList, other.ModelVideoList)) return false;
      if (RecordCount != other.RecordCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (modelVideoList_ != null) hash ^= ModelVideoList.GetHashCode();
      if (RecordCount != 0) hash ^= RecordCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (modelVideoList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ModelVideoList);
      }
      if (RecordCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RecordCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (modelVideoList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelVideoList);
      }
      if (RecordCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopularModelVideoData other) {
      if (other == null) {
        return;
      }
      if (other.modelVideoList_ != null) {
        if (modelVideoList_ == null) {
          modelVideoList_ = new global::EditCMSWindowsService.Messages.GrpcModelVideoList();
        }
        ModelVideoList.MergeFrom(other.ModelVideoList);
      }
      if (other.RecordCount != 0) {
        RecordCount = other.RecordCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (modelVideoList_ == null) {
              modelVideoList_ = new global::EditCMSWindowsService.Messages.GrpcModelVideoList();
            }
            input.ReadMessage(modelVideoList_);
            break;
          }
          case 16: {
            RecordCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMakeModelEntity : pb::IMessage<GrpcMakeModelEntity> {
    private static readonly pb::MessageParser<GrpcMakeModelEntity> _parser = new pb::MessageParser<GrpcMakeModelEntity>(() => new GrpcMakeModelEntity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMakeModelEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeModelEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeModelEntity(GrpcMakeModelEntity other) : this() {
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      makeName_ = other.makeName_;
      modelName_ = other.modelName_;
      modelMaskingName_ = other.modelMaskingName_;
      isNew_ = other.isNew_;
      isFuturistic_ = other.isFuturistic_;
      is360ExteriorAvailable_ = other.is360ExteriorAvailable_;
      is360OpenAvailable_ = other.is360OpenAvailable_;
      is360InteriorAvailable_ = other.is360InteriorAvailable_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeModelEntity Clone() {
      return new GrpcMakeModelEntity(this);
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 1;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 3;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 4;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelMaskingName" field.</summary>
    public const int ModelMaskingNameFieldNumber = 5;
    private string modelMaskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelMaskingName {
      get { return modelMaskingName_; }
      set {
        modelMaskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsNew" field.</summary>
    public const int IsNewFieldNumber = 6;
    private uint isNew_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IsNew {
      get { return isNew_; }
      set {
        isNew_ = value;
      }
    }

    /// <summary>Field number for the "IsFuturistic" field.</summary>
    public const int IsFuturisticFieldNumber = 7;
    private uint isFuturistic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IsFuturistic {
      get { return isFuturistic_; }
      set {
        isFuturistic_ = value;
      }
    }

    /// <summary>Field number for the "Is360ExteriorAvailable" field.</summary>
    public const int Is360ExteriorAvailableFieldNumber = 8;
    private bool is360ExteriorAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Is360ExteriorAvailable {
      get { return is360ExteriorAvailable_; }
      set {
        is360ExteriorAvailable_ = value;
      }
    }

    /// <summary>Field number for the "Is360OpenAvailable" field.</summary>
    public const int Is360OpenAvailableFieldNumber = 9;
    private bool is360OpenAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Is360OpenAvailable {
      get { return is360OpenAvailable_; }
      set {
        is360OpenAvailable_ = value;
      }
    }

    /// <summary>Field number for the "Is360InteriorAvailable" field.</summary>
    public const int Is360InteriorAvailableFieldNumber = 10;
    private bool is360InteriorAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Is360InteriorAvailable {
      get { return is360InteriorAvailable_; }
      set {
        is360InteriorAvailable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMakeModelEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMakeModelEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (MakeName != other.MakeName) return false;
      if (ModelName != other.ModelName) return false;
      if (ModelMaskingName != other.ModelMaskingName) return false;
      if (IsNew != other.IsNew) return false;
      if (IsFuturistic != other.IsFuturistic) return false;
      if (Is360ExteriorAvailable != other.Is360ExteriorAvailable) return false;
      if (Is360OpenAvailable != other.Is360OpenAvailable) return false;
      if (Is360InteriorAvailable != other.Is360InteriorAvailable) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (ModelMaskingName.Length != 0) hash ^= ModelMaskingName.GetHashCode();
      if (IsNew != 0) hash ^= IsNew.GetHashCode();
      if (IsFuturistic != 0) hash ^= IsFuturistic.GetHashCode();
      if (Is360ExteriorAvailable != false) hash ^= Is360ExteriorAvailable.GetHashCode();
      if (Is360OpenAvailable != false) hash ^= Is360OpenAvailable.GetHashCode();
      if (Is360InteriorAvailable != false) hash ^= Is360InteriorAvailable.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MakeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MakeName);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModelName);
      }
      if (ModelMaskingName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelMaskingName);
      }
      if (IsNew != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(IsNew);
      }
      if (IsFuturistic != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(IsFuturistic);
      }
      if (Is360ExteriorAvailable != false) {
        output.WriteRawTag(64);
        output.WriteBool(Is360ExteriorAvailable);
      }
      if (Is360OpenAvailable != false) {
        output.WriteRawTag(72);
        output.WriteBool(Is360OpenAvailable);
      }
      if (Is360InteriorAvailable != false) {
        output.WriteRawTag(80);
        output.WriteBool(Is360InteriorAvailable);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (ModelMaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelMaskingName);
      }
      if (IsNew != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IsNew);
      }
      if (IsFuturistic != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IsFuturistic);
      }
      if (Is360ExteriorAvailable != false) {
        size += 1 + 1;
      }
      if (Is360OpenAvailable != false) {
        size += 1 + 1;
      }
      if (Is360InteriorAvailable != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMakeModelEntity other) {
      if (other == null) {
        return;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.ModelMaskingName.Length != 0) {
        ModelMaskingName = other.ModelMaskingName;
      }
      if (other.IsNew != 0) {
        IsNew = other.IsNew;
      }
      if (other.IsFuturistic != 0) {
        IsFuturistic = other.IsFuturistic;
      }
      if (other.Is360ExteriorAvailable != false) {
        Is360ExteriorAvailable = other.Is360ExteriorAvailable;
      }
      if (other.Is360OpenAvailable != false) {
        Is360OpenAvailable = other.Is360OpenAvailable;
      }
      if (other.Is360InteriorAvailable != false) {
        Is360InteriorAvailable = other.Is360InteriorAvailable;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MakeId = input.ReadInt32();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 26: {
            MakeName = input.ReadString();
            break;
          }
          case 34: {
            ModelName = input.ReadString();
            break;
          }
          case 42: {
            ModelMaskingName = input.ReadString();
            break;
          }
          case 48: {
            IsNew = input.ReadUInt32();
            break;
          }
          case 56: {
            IsFuturistic = input.ReadUInt32();
            break;
          }
          case 64: {
            Is360ExteriorAvailable = input.ReadBool();
            break;
          }
          case 72: {
            Is360OpenAvailable = input.ReadBool();
            break;
          }
          case 80: {
            Is360InteriorAvailable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelVideo : pb::IMessage<GrpcModelVideo> {
    private static readonly pb::MessageParser<GrpcModelVideo> _parser = new pb::MessageParser<GrpcModelVideo>(() => new GrpcModelVideo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelVideo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelVideo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelVideo(GrpcModelVideo other) : this() {
      MakeModelEntity = other.makeModelEntity_ != null ? other.MakeModelEntity.Clone() : null;
      videoId_ = other.videoId_;
      videoCount_ = other.videoCount_;
      subCategoryName_ = other.subCategoryName_;
      basicId_ = other.basicId_;
      title_ = other.title_;
      videoUrl_ = other.videoUrl_;
      displayDate_ = other.displayDate_;
      views_ = other.views_;
      duration_ = other.duration_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelVideo Clone() {
      return new GrpcModelVideo(this);
    }

    /// <summary>Field number for the "MakeModelEntity" field.</summary>
    public const int MakeModelEntityFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcMakeModelEntity makeModelEntity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcMakeModelEntity MakeModelEntity {
      get { return makeModelEntity_; }
      set {
        makeModelEntity_ = value;
      }
    }

    /// <summary>Field number for the "VideoId" field.</summary>
    public const int VideoIdFieldNumber = 2;
    private string videoId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoId {
      get { return videoId_; }
      set {
        videoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VideoCount" field.</summary>
    public const int VideoCountFieldNumber = 3;
    private int videoCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VideoCount {
      get { return videoCount_; }
      set {
        videoCount_ = value;
      }
    }

    /// <summary>Field number for the "SubCategoryName" field.</summary>
    public const int SubCategoryNameFieldNumber = 4;
    private string subCategoryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCategoryName {
      get { return subCategoryName_; }
      set {
        subCategoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 5;
    private int basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 6;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VideoUrl" field.</summary>
    public const int VideoUrlFieldNumber = 7;
    private string videoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoUrl {
      get { return videoUrl_; }
      set {
        videoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayDate" field.</summary>
    public const int DisplayDateFieldNumber = 8;
    private string displayDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayDate {
      get { return displayDate_; }
      set {
        displayDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Views" field.</summary>
    public const int ViewsFieldNumber = 9;
    private int views_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Views {
      get { return views_; }
      set {
        views_ = value;
      }
    }

    /// <summary>Field number for the "Duration" field.</summary>
    public const int DurationFieldNumber = 10;
    private int duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelVideo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelVideo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MakeModelEntity, other.MakeModelEntity)) return false;
      if (VideoId != other.VideoId) return false;
      if (VideoCount != other.VideoCount) return false;
      if (SubCategoryName != other.SubCategoryName) return false;
      if (BasicId != other.BasicId) return false;
      if (Title != other.Title) return false;
      if (VideoUrl != other.VideoUrl) return false;
      if (DisplayDate != other.DisplayDate) return false;
      if (Views != other.Views) return false;
      if (Duration != other.Duration) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (makeModelEntity_ != null) hash ^= MakeModelEntity.GetHashCode();
      if (VideoId.Length != 0) hash ^= VideoId.GetHashCode();
      if (VideoCount != 0) hash ^= VideoCount.GetHashCode();
      if (SubCategoryName.Length != 0) hash ^= SubCategoryName.GetHashCode();
      if (BasicId != 0) hash ^= BasicId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (VideoUrl.Length != 0) hash ^= VideoUrl.GetHashCode();
      if (DisplayDate.Length != 0) hash ^= DisplayDate.GetHashCode();
      if (Views != 0) hash ^= Views.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (makeModelEntity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MakeModelEntity);
      }
      if (VideoId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VideoId);
      }
      if (VideoCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(VideoCount);
      }
      if (SubCategoryName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubCategoryName);
      }
      if (BasicId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BasicId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (VideoUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(VideoUrl);
      }
      if (DisplayDate.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DisplayDate);
      }
      if (Views != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Views);
      }
      if (Duration != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Duration);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (makeModelEntity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MakeModelEntity);
      }
      if (VideoId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoId);
      }
      if (VideoCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VideoCount);
      }
      if (SubCategoryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategoryName);
      }
      if (BasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (VideoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoUrl);
      }
      if (DisplayDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayDate);
      }
      if (Views != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Views);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelVideo other) {
      if (other == null) {
        return;
      }
      if (other.makeModelEntity_ != null) {
        if (makeModelEntity_ == null) {
          makeModelEntity_ = new global::EditCMSWindowsService.Messages.GrpcMakeModelEntity();
        }
        MakeModelEntity.MergeFrom(other.MakeModelEntity);
      }
      if (other.VideoId.Length != 0) {
        VideoId = other.VideoId;
      }
      if (other.VideoCount != 0) {
        VideoCount = other.VideoCount;
      }
      if (other.SubCategoryName.Length != 0) {
        SubCategoryName = other.SubCategoryName;
      }
      if (other.BasicId != 0) {
        BasicId = other.BasicId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.VideoUrl.Length != 0) {
        VideoUrl = other.VideoUrl;
      }
      if (other.DisplayDate.Length != 0) {
        DisplayDate = other.DisplayDate;
      }
      if (other.Views != 0) {
        Views = other.Views;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (makeModelEntity_ == null) {
              makeModelEntity_ = new global::EditCMSWindowsService.Messages.GrpcMakeModelEntity();
            }
            input.ReadMessage(makeModelEntity_);
            break;
          }
          case 18: {
            VideoId = input.ReadString();
            break;
          }
          case 24: {
            VideoCount = input.ReadInt32();
            break;
          }
          case 34: {
            SubCategoryName = input.ReadString();
            break;
          }
          case 40: {
            BasicId = input.ReadInt32();
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 58: {
            VideoUrl = input.ReadString();
            break;
          }
          case 66: {
            DisplayDate = input.ReadString();
            break;
          }
          case 72: {
            Views = input.ReadInt32();
            break;
          }
          case 80: {
            Duration = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelPhotos : pb::IMessage<GrpcModelPhotos> {
    private static readonly pb::MessageParser<GrpcModelPhotos> _parser = new pb::MessageParser<GrpcModelPhotos>(() => new GrpcModelPhotos());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelPhotos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotos(GrpcModelPhotos other) : this() {
      MakeModelEntity = other.makeModelEntity_ != null ? other.MakeModelEntity.Clone() : null;
      hostURL_ = other.hostURL_;
      originalImgPath_ = other.originalImgPath_;
      imageCount_ = other.imageCount_;
      galleryImagePath_ = other.galleryImagePath_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotos Clone() {
      return new GrpcModelPhotos(this);
    }

    /// <summary>Field number for the "MakeModelEntity" field.</summary>
    public const int MakeModelEntityFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcMakeModelEntity makeModelEntity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcMakeModelEntity MakeModelEntity {
      get { return makeModelEntity_; }
      set {
        makeModelEntity_ = value;
      }
    }

    /// <summary>Field number for the "HostURL" field.</summary>
    public const int HostURLFieldNumber = 2;
    private string hostURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostURL {
      get { return hostURL_; }
      set {
        hostURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalImgPath" field.</summary>
    public const int OriginalImgPathFieldNumber = 3;
    private string originalImgPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImgPath {
      get { return originalImgPath_; }
      set {
        originalImgPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImageCount" field.</summary>
    public const int ImageCountFieldNumber = 4;
    private string imageCount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GalleryImagePath" field.</summary>
    public const int GalleryImagePathFieldNumber = 5;
    private string galleryImagePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryImagePath {
      get { return galleryImagePath_; }
      set {
        galleryImagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelPhotos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelPhotos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MakeModelEntity, other.MakeModelEntity)) return false;
      if (HostURL != other.HostURL) return false;
      if (OriginalImgPath != other.OriginalImgPath) return false;
      if (ImageCount != other.ImageCount) return false;
      if (GalleryImagePath != other.GalleryImagePath) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (makeModelEntity_ != null) hash ^= MakeModelEntity.GetHashCode();
      if (HostURL.Length != 0) hash ^= HostURL.GetHashCode();
      if (OriginalImgPath.Length != 0) hash ^= OriginalImgPath.GetHashCode();
      if (ImageCount.Length != 0) hash ^= ImageCount.GetHashCode();
      if (GalleryImagePath.Length != 0) hash ^= GalleryImagePath.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (makeModelEntity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MakeModelEntity);
      }
      if (HostURL.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HostURL);
      }
      if (OriginalImgPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OriginalImgPath);
      }
      if (ImageCount.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImageCount);
      }
      if (GalleryImagePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GalleryImagePath);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (makeModelEntity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MakeModelEntity);
      }
      if (HostURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostURL);
      }
      if (OriginalImgPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalImgPath);
      }
      if (ImageCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageCount);
      }
      if (GalleryImagePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryImagePath);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelPhotos other) {
      if (other == null) {
        return;
      }
      if (other.makeModelEntity_ != null) {
        if (makeModelEntity_ == null) {
          makeModelEntity_ = new global::EditCMSWindowsService.Messages.GrpcMakeModelEntity();
        }
        MakeModelEntity.MergeFrom(other.MakeModelEntity);
      }
      if (other.HostURL.Length != 0) {
        HostURL = other.HostURL;
      }
      if (other.OriginalImgPath.Length != 0) {
        OriginalImgPath = other.OriginalImgPath;
      }
      if (other.ImageCount.Length != 0) {
        ImageCount = other.ImageCount;
      }
      if (other.GalleryImagePath.Length != 0) {
        GalleryImagePath = other.GalleryImagePath;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (makeModelEntity_ == null) {
              makeModelEntity_ = new global::EditCMSWindowsService.Messages.GrpcMakeModelEntity();
            }
            input.ReadMessage(makeModelEntity_);
            break;
          }
          case 18: {
            HostURL = input.ReadString();
            break;
          }
          case 26: {
            OriginalImgPath = input.ReadString();
            break;
          }
          case 34: {
            ImageCount = input.ReadString();
            break;
          }
          case 42: {
            GalleryImagePath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopularCarData : pb::IMessage<GrpcPopularCarData> {
    private static readonly pb::MessageParser<GrpcPopularCarData> _parser = new pb::MessageParser<GrpcPopularCarData>(() => new GrpcPopularCarData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopularCarData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularCarData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularCarData(GrpcPopularCarData other) : this() {
      id_ = other.id_;
      makeName_ = other.makeName_;
      modelName_ = other.modelName_;
      maskingName_ = other.maskingName_;
      largePic_ = other.largePic_;
      smallPic_ = other.smallPic_;
      reviewRate_ = other.reviewRate_;
      reviewCount_ = other.reviewCount_;
      minPrice_ = other.minPrice_;
      maxPrice_ = other.maxPrice_;
      hostUrl_ = other.hostUrl_;
      originalImgpath_ = other.originalImgpath_;
      sortorder_ = other.sortorder_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularCarData Clone() {
      return new GrpcPopularCarData(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 2;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 3;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 4;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LargePic" field.</summary>
    public const int LargePicFieldNumber = 5;
    private string largePic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LargePic {
      get { return largePic_; }
      set {
        largePic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SmallPic" field.</summary>
    public const int SmallPicFieldNumber = 6;
    private string smallPic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SmallPic {
      get { return smallPic_; }
      set {
        smallPic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReviewRate" field.</summary>
    public const int ReviewRateFieldNumber = 7;
    private string reviewRate_ = "";
    /// <summary>
    ///  this is made string float wont be good option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviewRate {
      get { return reviewRate_; }
      set {
        reviewRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReviewCount" field.</summary>
    public const int ReviewCountFieldNumber = 8;
    private int reviewCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReviewCount {
      get { return reviewCount_; }
      set {
        reviewCount_ = value;
      }
    }

    /// <summary>Field number for the "MinPrice" field.</summary>
    public const int MinPriceFieldNumber = 9;
    private int minPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinPrice {
      get { return minPrice_; }
      set {
        minPrice_ = value;
      }
    }

    /// <summary>Field number for the "MaxPrice" field.</summary>
    public const int MaxPriceFieldNumber = 10;
    private int maxPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPrice {
      get { return maxPrice_; }
      set {
        maxPrice_ = value;
      }
    }

    /// <summary>Field number for the "HostUrl" field.</summary>
    public const int HostUrlFieldNumber = 11;
    private string hostUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostUrl {
      get { return hostUrl_; }
      set {
        hostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalImgpath" field.</summary>
    public const int OriginalImgpathFieldNumber = 12;
    private string originalImgpath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImgpath {
      get { return originalImgpath_; }
      set {
        originalImgpath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sortorder" field.</summary>
    public const int SortorderFieldNumber = 13;
    private int sortorder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sortorder {
      get { return sortorder_; }
      set {
        sortorder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopularCarData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopularCarData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MakeName != other.MakeName) return false;
      if (ModelName != other.ModelName) return false;
      if (MaskingName != other.MaskingName) return false;
      if (LargePic != other.LargePic) return false;
      if (SmallPic != other.SmallPic) return false;
      if (ReviewRate != other.ReviewRate) return false;
      if (ReviewCount != other.ReviewCount) return false;
      if (MinPrice != other.MinPrice) return false;
      if (MaxPrice != other.MaxPrice) return false;
      if (HostUrl != other.HostUrl) return false;
      if (OriginalImgpath != other.OriginalImgpath) return false;
      if (Sortorder != other.Sortorder) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (LargePic.Length != 0) hash ^= LargePic.GetHashCode();
      if (SmallPic.Length != 0) hash ^= SmallPic.GetHashCode();
      if (ReviewRate.Length != 0) hash ^= ReviewRate.GetHashCode();
      if (ReviewCount != 0) hash ^= ReviewCount.GetHashCode();
      if (MinPrice != 0) hash ^= MinPrice.GetHashCode();
      if (MaxPrice != 0) hash ^= MaxPrice.GetHashCode();
      if (HostUrl.Length != 0) hash ^= HostUrl.GetHashCode();
      if (OriginalImgpath.Length != 0) hash ^= OriginalImgpath.GetHashCode();
      if (Sortorder != 0) hash ^= Sortorder.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MakeName);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelName);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MaskingName);
      }
      if (LargePic.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LargePic);
      }
      if (SmallPic.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SmallPic);
      }
      if (ReviewRate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReviewRate);
      }
      if (ReviewCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ReviewCount);
      }
      if (MinPrice != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MinPrice);
      }
      if (MaxPrice != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxPrice);
      }
      if (HostUrl.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(HostUrl);
      }
      if (OriginalImgpath.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OriginalImgpath);
      }
      if (Sortorder != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Sortorder);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (LargePic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LargePic);
      }
      if (SmallPic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SmallPic);
      }
      if (ReviewRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReviewRate);
      }
      if (ReviewCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReviewCount);
      }
      if (MinPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPrice);
      }
      if (MaxPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPrice);
      }
      if (HostUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostUrl);
      }
      if (OriginalImgpath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalImgpath);
      }
      if (Sortorder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sortorder);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopularCarData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.LargePic.Length != 0) {
        LargePic = other.LargePic;
      }
      if (other.SmallPic.Length != 0) {
        SmallPic = other.SmallPic;
      }
      if (other.ReviewRate.Length != 0) {
        ReviewRate = other.ReviewRate;
      }
      if (other.ReviewCount != 0) {
        ReviewCount = other.ReviewCount;
      }
      if (other.MinPrice != 0) {
        MinPrice = other.MinPrice;
      }
      if (other.MaxPrice != 0) {
        MaxPrice = other.MaxPrice;
      }
      if (other.HostUrl.Length != 0) {
        HostUrl = other.HostUrl;
      }
      if (other.OriginalImgpath.Length != 0) {
        OriginalImgpath = other.OriginalImgpath;
      }
      if (other.Sortorder != 0) {
        Sortorder = other.Sortorder;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            MakeName = input.ReadString();
            break;
          }
          case 26: {
            ModelName = input.ReadString();
            break;
          }
          case 34: {
            MaskingName = input.ReadString();
            break;
          }
          case 42: {
            LargePic = input.ReadString();
            break;
          }
          case 50: {
            SmallPic = input.ReadString();
            break;
          }
          case 58: {
            ReviewRate = input.ReadString();
            break;
          }
          case 64: {
            ReviewCount = input.ReadInt32();
            break;
          }
          case 72: {
            MinPrice = input.ReadInt32();
            break;
          }
          case 80: {
            MaxPrice = input.ReadInt32();
            break;
          }
          case 90: {
            HostUrl = input.ReadString();
            break;
          }
          case 98: {
            OriginalImgpath = input.ReadString();
            break;
          }
          case 104: {
            Sortorder = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideosEntity : pb::IMessage<GrpcVideosEntity> {
    private static readonly pb::MessageParser<GrpcVideosEntity> _parser = new pb::MessageParser<GrpcVideosEntity>(() => new GrpcVideosEntity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideosEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosEntity(GrpcVideosEntity other) : this() {
      title_ = other.title_;
      views_ = other.views_;
      likes_ = other.likes_;
      description_ = other.description_;
      videoId_ = other.videoId_;
      videoSrc_ = other.videoSrc_;
      publishDate_ = other.publishDate_;
      isSticky_ = other.isSticky_;
      popularity_ = other.popularity_;
      makeName_ = other.makeName_;
      modelName_ = other.modelName_;
      maskingName_ = other.maskingName_;
      subCatName_ = other.subCatName_;
      subCatId_ = other.subCatId_;
      basicId_ = other.basicId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosEntity Clone() {
      return new GrpcVideosEntity(this);
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Views" field.</summary>
    public const int ViewsFieldNumber = 2;
    private int views_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Views {
      get { return views_; }
      set {
        views_ = value;
      }
    }

    /// <summary>Field number for the "Likes" field.</summary>
    public const int LikesFieldNumber = 3;
    private int likes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Likes {
      get { return likes_; }
      set {
        likes_ = value;
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VideoId" field.</summary>
    public const int VideoIdFieldNumber = 5;
    private string videoId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoId {
      get { return videoId_; }
      set {
        videoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VideoSrc" field.</summary>
    public const int VideoSrcFieldNumber = 6;
    private string videoSrc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoSrc {
      get { return videoSrc_; }
      set {
        videoSrc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PublishDate" field.</summary>
    public const int PublishDateFieldNumber = 7;
    private string publishDate_ = "";
    /// <summary>
    /// no datetime support in protobuf as on 5th Jan 2016
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublishDate {
      get { return publishDate_; }
      set {
        publishDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSticky" field.</summary>
    public const int IsStickyFieldNumber = 8;
    private bool isSticky_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSticky {
      get { return isSticky_; }
      set {
        isSticky_ = value;
      }
    }

    /// <summary>Field number for the "Popularity" field.</summary>
    public const int PopularityFieldNumber = 9;
    private int popularity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Popularity {
      get { return popularity_; }
      set {
        popularity_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 10;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 11;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 12;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCatName" field.</summary>
    public const int SubCatNameFieldNumber = 13;
    private string subCatName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCatName {
      get { return subCatName_; }
      set {
        subCatName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubCatId" field.</summary>
    public const int SubCatIdFieldNumber = 14;
    private int subCatId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubCatId {
      get { return subCatId_; }
      set {
        subCatId_ = value;
      }
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 15;
    private string basicId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BasicId {
      get { return basicId_; }
      set {
        basicId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideosEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideosEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Views != other.Views) return false;
      if (Likes != other.Likes) return false;
      if (Description != other.Description) return false;
      if (VideoId != other.VideoId) return false;
      if (VideoSrc != other.VideoSrc) return false;
      if (PublishDate != other.PublishDate) return false;
      if (IsSticky != other.IsSticky) return false;
      if (Popularity != other.Popularity) return false;
      if (MakeName != other.MakeName) return false;
      if (ModelName != other.ModelName) return false;
      if (MaskingName != other.MaskingName) return false;
      if (SubCatName != other.SubCatName) return false;
      if (SubCatId != other.SubCatId) return false;
      if (BasicId != other.BasicId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Views != 0) hash ^= Views.GetHashCode();
      if (Likes != 0) hash ^= Likes.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (VideoId.Length != 0) hash ^= VideoId.GetHashCode();
      if (VideoSrc.Length != 0) hash ^= VideoSrc.GetHashCode();
      if (PublishDate.Length != 0) hash ^= PublishDate.GetHashCode();
      if (IsSticky != false) hash ^= IsSticky.GetHashCode();
      if (Popularity != 0) hash ^= Popularity.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (SubCatName.Length != 0) hash ^= SubCatName.GetHashCode();
      if (SubCatId != 0) hash ^= SubCatId.GetHashCode();
      if (BasicId.Length != 0) hash ^= BasicId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Views != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Views);
      }
      if (Likes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Likes);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (VideoId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VideoId);
      }
      if (VideoSrc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VideoSrc);
      }
      if (PublishDate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PublishDate);
      }
      if (IsSticky != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsSticky);
      }
      if (Popularity != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Popularity);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MakeName);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModelName);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(MaskingName);
      }
      if (SubCatName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SubCatName);
      }
      if (SubCatId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SubCatId);
      }
      if (BasicId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BasicId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Views != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Views);
      }
      if (Likes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Likes);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (VideoId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoId);
      }
      if (VideoSrc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoSrc);
      }
      if (PublishDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublishDate);
      }
      if (IsSticky != false) {
        size += 1 + 1;
      }
      if (Popularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Popularity);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (SubCatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCatName);
      }
      if (SubCatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubCatId);
      }
      if (BasicId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BasicId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideosEntity other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Views != 0) {
        Views = other.Views;
      }
      if (other.Likes != 0) {
        Likes = other.Likes;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.VideoId.Length != 0) {
        VideoId = other.VideoId;
      }
      if (other.VideoSrc.Length != 0) {
        VideoSrc = other.VideoSrc;
      }
      if (other.PublishDate.Length != 0) {
        PublishDate = other.PublishDate;
      }
      if (other.IsSticky != false) {
        IsSticky = other.IsSticky;
      }
      if (other.Popularity != 0) {
        Popularity = other.Popularity;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.SubCatName.Length != 0) {
        SubCatName = other.SubCatName;
      }
      if (other.SubCatId != 0) {
        SubCatId = other.SubCatId;
      }
      if (other.BasicId.Length != 0) {
        BasicId = other.BasicId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            Views = input.ReadInt32();
            break;
          }
          case 24: {
            Likes = input.ReadInt32();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            VideoId = input.ReadString();
            break;
          }
          case 50: {
            VideoSrc = input.ReadString();
            break;
          }
          case 58: {
            PublishDate = input.ReadString();
            break;
          }
          case 64: {
            IsSticky = input.ReadBool();
            break;
          }
          case 72: {
            Popularity = input.ReadInt32();
            break;
          }
          case 82: {
            MakeName = input.ReadString();
            break;
          }
          case 90: {
            ModelName = input.ReadString();
            break;
          }
          case 98: {
            MaskingName = input.ReadString();
            break;
          }
          case 106: {
            SubCatName = input.ReadString();
            break;
          }
          case 112: {
            SubCatId = input.ReadInt32();
            break;
          }
          case 122: {
            BasicId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSponsoredArticleURI : pb::IMessage<GetSponsoredArticleURI> {
    private static readonly pb::MessageParser<GetSponsoredArticleURI> _parser = new pb::MessageParser<GetSponsoredArticleURI>(() => new GetSponsoredArticleURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSponsoredArticleURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSponsoredArticleURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSponsoredArticleURI(GetSponsoredArticleURI other) : this() {
      categoryList_ = other.categoryList_;
      author_ = other.author_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSponsoredArticleURI Clone() {
      return new GetSponsoredArticleURI(this);
    }

    /// <summary>Field number for the "CategoryList" field.</summary>
    public const int CategoryListFieldNumber = 1;
    private string categoryList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryList {
      get { return categoryList_; }
      set {
        categoryList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Author" field.</summary>
    public const int AuthorFieldNumber = 2;
    private string author_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSponsoredArticleURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSponsoredArticleURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryList != other.CategoryList) return false;
      if (Author != other.Author) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryList.Length != 0) hash ^= CategoryList.GetHashCode();
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CategoryList);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Author);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryList);
      }
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSponsoredArticleURI other) {
      if (other == null) {
        return;
      }
      if (other.CategoryList.Length != 0) {
        CategoryList = other.CategoryList;
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CategoryList = input.ReadString();
            break;
          }
          case 18: {
            Author = input.ReadString();
            break;
          }
          case 24: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRelatedContentURI : pb::IMessage<GetRelatedContentURI> {
    private static readonly pb::MessageParser<GetRelatedContentURI> _parser = new pb::MessageParser<GetRelatedContentURI>(() => new GetRelatedContentURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRelatedContentURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRelatedContentURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRelatedContentURI(GetRelatedContentURI other) : this() {
      basicId_ = other.basicId_;
      recordCount_ = other.recordCount_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRelatedContentURI Clone() {
      return new GetRelatedContentURI(this);
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 1;
    private int basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "RecordCount" field.</summary>
    public const int RecordCountFieldNumber = 2;
    private int recordCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecordCount {
      get { return recordCount_; }
      set {
        recordCount_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRelatedContentURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRelatedContentURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasicId != other.BasicId) return false;
      if (RecordCount != other.RecordCount) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasicId != 0) hash ^= BasicId.GetHashCode();
      if (RecordCount != 0) hash ^= RecordCount.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasicId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BasicId);
      }
      if (RecordCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RecordCount);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicId);
      }
      if (RecordCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordCount);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRelatedContentURI other) {
      if (other == null) {
        return;
      }
      if (other.BasicId != 0) {
        BasicId = other.BasicId;
      }
      if (other.RecordCount != 0) {
        RecordCount = other.RecordCount;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BasicId = input.ReadInt32();
            break;
          }
          case 16: {
            RecordCount = input.ReadInt32();
            break;
          }
          case 24: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcSmallInt : pb::IMessage<GrpcSmallInt> {
    private static readonly pb::MessageParser<GrpcSmallInt> _parser = new pb::MessageParser<GrpcSmallInt>(() => new GrpcSmallInt());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcSmallInt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSmallInt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSmallInt(GrpcSmallInt other) : this() {
      intOutput_ = other.intOutput_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSmallInt Clone() {
      return new GrpcSmallInt(this);
    }

    /// <summary>Field number for the "intOutput" field.</summary>
    public const int IntOutputFieldNumber = 1;
    private int intOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntOutput {
      get { return intOutput_; }
      set {
        intOutput_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcSmallInt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcSmallInt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntOutput != other.IntOutput) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IntOutput != 0) hash ^= IntOutput.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IntOutput != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IntOutput);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IntOutput != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntOutput);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcSmallInt other) {
      if (other == null) {
        return;
      }
      if (other.IntOutput != 0) {
        IntOutput = other.IntOutput;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IntOutput = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMakeModelApplicationID : pb::IMessage<GrpcMakeModelApplicationID> {
    private static readonly pb::MessageParser<GrpcMakeModelApplicationID> _parser = new pb::MessageParser<GrpcMakeModelApplicationID>(() => new GrpcMakeModelApplicationID());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMakeModelApplicationID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeModelApplicationID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeModelApplicationID(GrpcMakeModelApplicationID other) : this() {
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      applicationId_ = other.applicationId_;
      getAllVideos_ = other.getAllVideos_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMakeModelApplicationID Clone() {
      return new GrpcMakeModelApplicationID(this);
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 1;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "GetAllVideos" field.</summary>
    public const int GetAllVideosFieldNumber = 4;
    private bool getAllVideos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GetAllVideos {
      get { return getAllVideos_; }
      set {
        getAllVideos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMakeModelApplicationID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMakeModelApplicationID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (GetAllVideos != other.GetAllVideos) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (GetAllVideos != false) hash ^= GetAllVideos.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MakeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApplicationId);
      }
      if (GetAllVideos != false) {
        output.WriteRawTag(32);
        output.WriteBool(GetAllVideos);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (GetAllVideos != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMakeModelApplicationID other) {
      if (other == null) {
        return;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.GetAllVideos != false) {
        GetAllVideos = other.GetAllVideos;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MakeId = input.ReadInt32();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 24: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 32: {
            GetAllVideos = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCMSSubCategory : pb::IMessage<GrpcCMSSubCategory> {
    private static readonly pb::MessageParser<GrpcCMSSubCategory> _parser = new pb::MessageParser<GrpcCMSSubCategory>(() => new GrpcCMSSubCategory());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCMSSubCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSSubCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSSubCategory(GrpcCMSSubCategory other) : this() {
      subCategoryId_ = other.subCategoryId_;
      subCategoryName_ = other.subCategoryName_;
      recordCount_ = other.recordCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSSubCategory Clone() {
      return new GrpcCMSSubCategory(this);
    }

    /// <summary>Field number for the "SubCategoryId" field.</summary>
    public const int SubCategoryIdFieldNumber = 1;
    private int subCategoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubCategoryId {
      get { return subCategoryId_; }
      set {
        subCategoryId_ = value;
      }
    }

    /// <summary>Field number for the "SubCategoryName" field.</summary>
    public const int SubCategoryNameFieldNumber = 2;
    private string subCategoryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCategoryName {
      get { return subCategoryName_; }
      set {
        subCategoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RecordCount" field.</summary>
    public const int RecordCountFieldNumber = 3;
    private int recordCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecordCount {
      get { return recordCount_; }
      set {
        recordCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCMSSubCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCMSSubCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubCategoryId != other.SubCategoryId) return false;
      if (SubCategoryName != other.SubCategoryName) return false;
      if (RecordCount != other.RecordCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubCategoryId != 0) hash ^= SubCategoryId.GetHashCode();
      if (SubCategoryName.Length != 0) hash ^= SubCategoryName.GetHashCode();
      if (RecordCount != 0) hash ^= RecordCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubCategoryId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SubCategoryId);
      }
      if (SubCategoryName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubCategoryName);
      }
      if (RecordCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RecordCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubCategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubCategoryId);
      }
      if (SubCategoryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategoryName);
      }
      if (RecordCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCMSSubCategory other) {
      if (other == null) {
        return;
      }
      if (other.SubCategoryId != 0) {
        SubCategoryId = other.SubCategoryId;
      }
      if (other.SubCategoryName.Length != 0) {
        SubCategoryName = other.SubCategoryName;
      }
      if (other.RecordCount != 0) {
        RecordCount = other.RecordCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SubCategoryId = input.ReadInt32();
            break;
          }
          case 18: {
            SubCategoryName = input.ReadString();
            break;
          }
          case 24: {
            RecordCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCarModelDetails : pb::IMessage<GrpcCarModelDetails> {
    private static readonly pb::MessageParser<GrpcCarModelDetails> _parser = new pb::MessageParser<GrpcCarModelDetails>(() => new GrpcCarModelDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCarModelDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelDetails(GrpcCarModelDetails other) : this() {
      CarModelSummary = other.carModelSummary_ != null ? other.CarModelSummary.Clone() : null;
      makeName_ = other.makeName_;
      modelImageSmall_ = other.modelImageSmall_;
      modelImageLarge_ = other.modelImageLarge_;
      makeId_ = other.makeId_;
      used_ = other.used_;
      futuristic_ = other.futuristic_;
      rootId_ = other.rootId_;
      videoCount_ = other.videoCount_;
      carCount_ = other.carCount_;
      originalImgPath_ = other.originalImgPath_;
      bodyStyleId_ = other.bodyStyleId_;
      subSegmentId_ = other.subSegmentId_;
      modelPopularity_ = other.modelPopularity_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelDetails Clone() {
      return new GrpcCarModelDetails(this);
    }

    /// <summary>Field number for the "CarModelSummary" field.</summary>
    public const int CarModelSummaryFieldNumber = 1;
    private global::EditCMSWindowsService.Messages.GrpcCarModelSummary carModelSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcCarModelSummary CarModelSummary {
      get { return carModelSummary_; }
      set {
        carModelSummary_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 2;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelImageSmall" field.</summary>
    public const int ModelImageSmallFieldNumber = 3;
    private string modelImageSmall_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelImageSmall {
      get { return modelImageSmall_; }
      set {
        modelImageSmall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelImageLarge" field.</summary>
    public const int ModelImageLargeFieldNumber = 4;
    private string modelImageLarge_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelImageLarge {
      get { return modelImageLarge_; }
      set {
        modelImageLarge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 5;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "Used" field.</summary>
    public const int UsedFieldNumber = 6;
    private int used_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Used {
      get { return used_; }
      set {
        used_ = value;
      }
    }

    /// <summary>Field number for the "Futuristic" field.</summary>
    public const int FuturisticFieldNumber = 7;
    private bool futuristic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Futuristic {
      get { return futuristic_; }
      set {
        futuristic_ = value;
      }
    }

    /// <summary>Field number for the "RootId" field.</summary>
    public const int RootIdFieldNumber = 8;
    private int rootId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RootId {
      get { return rootId_; }
      set {
        rootId_ = value;
      }
    }

    /// <summary>Field number for the "VideoCount" field.</summary>
    public const int VideoCountFieldNumber = 9;
    private int videoCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VideoCount {
      get { return videoCount_; }
      set {
        videoCount_ = value;
      }
    }

    /// <summary>Field number for the "CarCount" field.</summary>
    public const int CarCountFieldNumber = 10;
    private int carCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CarCount {
      get { return carCount_; }
      set {
        carCount_ = value;
      }
    }

    /// <summary>Field number for the "OriginalImgPath" field.</summary>
    public const int OriginalImgPathFieldNumber = 11;
    private string originalImgPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImgPath {
      get { return originalImgPath_; }
      set {
        originalImgPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BodyStyleId" field.</summary>
    public const int BodyStyleIdFieldNumber = 12;
    private int bodyStyleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BodyStyleId {
      get { return bodyStyleId_; }
      set {
        bodyStyleId_ = value;
      }
    }

    /// <summary>Field number for the "SubSegmentId" field.</summary>
    public const int SubSegmentIdFieldNumber = 13;
    private int subSegmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubSegmentId {
      get { return subSegmentId_; }
      set {
        subSegmentId_ = value;
      }
    }

    /// <summary>Field number for the "ModelPopularity" field.</summary>
    public const int ModelPopularityFieldNumber = 14;
    private int modelPopularity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelPopularity {
      get { return modelPopularity_; }
      set {
        modelPopularity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCarModelDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCarModelDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CarModelSummary, other.CarModelSummary)) return false;
      if (MakeName != other.MakeName) return false;
      if (ModelImageSmall != other.ModelImageSmall) return false;
      if (ModelImageLarge != other.ModelImageLarge) return false;
      if (MakeId != other.MakeId) return false;
      if (Used != other.Used) return false;
      if (Futuristic != other.Futuristic) return false;
      if (RootId != other.RootId) return false;
      if (VideoCount != other.VideoCount) return false;
      if (CarCount != other.CarCount) return false;
      if (OriginalImgPath != other.OriginalImgPath) return false;
      if (BodyStyleId != other.BodyStyleId) return false;
      if (SubSegmentId != other.SubSegmentId) return false;
      if (ModelPopularity != other.ModelPopularity) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (carModelSummary_ != null) hash ^= CarModelSummary.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (ModelImageSmall.Length != 0) hash ^= ModelImageSmall.GetHashCode();
      if (ModelImageLarge.Length != 0) hash ^= ModelImageLarge.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (Used != 0) hash ^= Used.GetHashCode();
      if (Futuristic != false) hash ^= Futuristic.GetHashCode();
      if (RootId != 0) hash ^= RootId.GetHashCode();
      if (VideoCount != 0) hash ^= VideoCount.GetHashCode();
      if (CarCount != 0) hash ^= CarCount.GetHashCode();
      if (OriginalImgPath.Length != 0) hash ^= OriginalImgPath.GetHashCode();
      if (BodyStyleId != 0) hash ^= BodyStyleId.GetHashCode();
      if (SubSegmentId != 0) hash ^= SubSegmentId.GetHashCode();
      if (ModelPopularity != 0) hash ^= ModelPopularity.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (carModelSummary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CarModelSummary);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MakeName);
      }
      if (ModelImageSmall.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelImageSmall);
      }
      if (ModelImageLarge.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModelImageLarge);
      }
      if (MakeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MakeId);
      }
      if (Used != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Used);
      }
      if (Futuristic != false) {
        output.WriteRawTag(56);
        output.WriteBool(Futuristic);
      }
      if (RootId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RootId);
      }
      if (VideoCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(VideoCount);
      }
      if (CarCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CarCount);
      }
      if (OriginalImgPath.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OriginalImgPath);
      }
      if (BodyStyleId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BodyStyleId);
      }
      if (SubSegmentId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SubSegmentId);
      }
      if (ModelPopularity != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ModelPopularity);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (carModelSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarModelSummary);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (ModelImageSmall.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelImageSmall);
      }
      if (ModelImageLarge.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelImageLarge);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (Used != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Used);
      }
      if (Futuristic != false) {
        size += 1 + 1;
      }
      if (RootId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RootId);
      }
      if (VideoCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VideoCount);
      }
      if (CarCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CarCount);
      }
      if (OriginalImgPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalImgPath);
      }
      if (BodyStyleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BodyStyleId);
      }
      if (SubSegmentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubSegmentId);
      }
      if (ModelPopularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelPopularity);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCarModelDetails other) {
      if (other == null) {
        return;
      }
      if (other.carModelSummary_ != null) {
        if (carModelSummary_ == null) {
          carModelSummary_ = new global::EditCMSWindowsService.Messages.GrpcCarModelSummary();
        }
        CarModelSummary.MergeFrom(other.CarModelSummary);
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.ModelImageSmall.Length != 0) {
        ModelImageSmall = other.ModelImageSmall;
      }
      if (other.ModelImageLarge.Length != 0) {
        ModelImageLarge = other.ModelImageLarge;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.Used != 0) {
        Used = other.Used;
      }
      if (other.Futuristic != false) {
        Futuristic = other.Futuristic;
      }
      if (other.RootId != 0) {
        RootId = other.RootId;
      }
      if (other.VideoCount != 0) {
        VideoCount = other.VideoCount;
      }
      if (other.CarCount != 0) {
        CarCount = other.CarCount;
      }
      if (other.OriginalImgPath.Length != 0) {
        OriginalImgPath = other.OriginalImgPath;
      }
      if (other.BodyStyleId != 0) {
        BodyStyleId = other.BodyStyleId;
      }
      if (other.SubSegmentId != 0) {
        SubSegmentId = other.SubSegmentId;
      }
      if (other.ModelPopularity != 0) {
        ModelPopularity = other.ModelPopularity;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (carModelSummary_ == null) {
              carModelSummary_ = new global::EditCMSWindowsService.Messages.GrpcCarModelSummary();
            }
            input.ReadMessage(carModelSummary_);
            break;
          }
          case 18: {
            MakeName = input.ReadString();
            break;
          }
          case 26: {
            ModelImageSmall = input.ReadString();
            break;
          }
          case 34: {
            ModelImageLarge = input.ReadString();
            break;
          }
          case 40: {
            MakeId = input.ReadInt32();
            break;
          }
          case 48: {
            Used = input.ReadInt32();
            break;
          }
          case 56: {
            Futuristic = input.ReadBool();
            break;
          }
          case 64: {
            RootId = input.ReadInt32();
            break;
          }
          case 72: {
            VideoCount = input.ReadInt32();
            break;
          }
          case 80: {
            CarCount = input.ReadInt32();
            break;
          }
          case 90: {
            OriginalImgPath = input.ReadString();
            break;
          }
          case 96: {
            BodyStyleId = input.ReadInt32();
            break;
          }
          case 104: {
            SubSegmentId = input.ReadInt32();
            break;
          }
          case 112: {
            ModelPopularity = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCarModelSummary : pb::IMessage<GrpcCarModelSummary> {
    private static readonly pb::MessageParser<GrpcCarModelSummary> _parser = new pb::MessageParser<GrpcCarModelSummary>(() => new GrpcCarModelSummary());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCarModelSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelSummary(GrpcCarModelSummary other) : this() {
      modelName_ = other.modelName_;
      maskingName_ = other.maskingName_;
      modelRating_ = other.modelRating_;
      fuelEconomy_ = other.fuelEconomy_;
      valueForMoney_ = other.valueForMoney_;
      comfort_ = other.comfort_;
      performance_ = other.performance_;
      looks_ = other.looks_;
      reviewCount_ = other.reviewCount_;
      minPrice_ = other.minPrice_;
      maxPrice_ = other.maxPrice_;
      minAvgPrice_ = other.minAvgPrice_;
      modelImage_ = other.modelImage_;
      largeImage_ = other.largeImage_;
      xLargeImage_ = other.xLargeImage_;
      hostUrl_ = other.hostUrl_;
      originalImage_ = other.originalImage_;
      modelId_ = other.modelId_;
      new_ = other.new_;
      offerExists_ = other.offerExists_;
      makeId_ = other.makeId_;
      DiscountSummary = other.discountSummary_ != null ? other.DiscountSummary.Clone() : null;
      CarPriceOverview = other.carPriceOverview_ != null ? other.CarPriceOverview.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCarModelSummary Clone() {
      return new GrpcCarModelSummary(this);
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 1;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 2;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelRating" field.</summary>
    public const int ModelRatingFieldNumber = 3;
    private double modelRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ModelRating {
      get { return modelRating_; }
      set {
        modelRating_ = value;
      }
    }

    /// <summary>Field number for the "FuelEconomy" field.</summary>
    public const int FuelEconomyFieldNumber = 4;
    private double fuelEconomy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FuelEconomy {
      get { return fuelEconomy_; }
      set {
        fuelEconomy_ = value;
      }
    }

    /// <summary>Field number for the "ValueForMoney" field.</summary>
    public const int ValueForMoneyFieldNumber = 5;
    private double valueForMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ValueForMoney {
      get { return valueForMoney_; }
      set {
        valueForMoney_ = value;
      }
    }

    /// <summary>Field number for the "Comfort" field.</summary>
    public const int ComfortFieldNumber = 6;
    private double comfort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Comfort {
      get { return comfort_; }
      set {
        comfort_ = value;
      }
    }

    /// <summary>Field number for the "Performance" field.</summary>
    public const int PerformanceFieldNumber = 7;
    private double performance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Performance {
      get { return performance_; }
      set {
        performance_ = value;
      }
    }

    /// <summary>Field number for the "Looks" field.</summary>
    public const int LooksFieldNumber = 8;
    private double looks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Looks {
      get { return looks_; }
      set {
        looks_ = value;
      }
    }

    /// <summary>Field number for the "ReviewCount" field.</summary>
    public const int ReviewCountFieldNumber = 9;
    private int reviewCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReviewCount {
      get { return reviewCount_; }
      set {
        reviewCount_ = value;
      }
    }

    /// <summary>Field number for the "MinPrice" field.</summary>
    public const int MinPriceFieldNumber = 10;
    private double minPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinPrice {
      get { return minPrice_; }
      set {
        minPrice_ = value;
      }
    }

    /// <summary>Field number for the "MaxPrice" field.</summary>
    public const int MaxPriceFieldNumber = 11;
    private double maxPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxPrice {
      get { return maxPrice_; }
      set {
        maxPrice_ = value;
      }
    }

    /// <summary>Field number for the "MinAvgPrice" field.</summary>
    public const int MinAvgPriceFieldNumber = 12;
    private int minAvgPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinAvgPrice {
      get { return minAvgPrice_; }
      set {
        minAvgPrice_ = value;
      }
    }

    /// <summary>Field number for the "ModelImage" field.</summary>
    public const int ModelImageFieldNumber = 13;
    private string modelImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelImage {
      get { return modelImage_; }
      set {
        modelImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LargeImage" field.</summary>
    public const int LargeImageFieldNumber = 14;
    private string largeImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LargeImage {
      get { return largeImage_; }
      set {
        largeImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "XLargeImage" field.</summary>
    public const int XLargeImageFieldNumber = 15;
    private string xLargeImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XLargeImage {
      get { return xLargeImage_; }
      set {
        xLargeImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HostUrl" field.</summary>
    public const int HostUrlFieldNumber = 16;
    private string hostUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostUrl {
      get { return hostUrl_; }
      set {
        hostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalImage" field.</summary>
    public const int OriginalImageFieldNumber = 17;
    private string originalImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImage {
      get { return originalImage_; }
      set {
        originalImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 18;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "New" field.</summary>
    public const int NewFieldNumber = 19;
    private bool new_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool New {
      get { return new_; }
      set {
        new_ = value;
      }
    }

    /// <summary>Field number for the "OfferExists" field.</summary>
    public const int OfferExistsFieldNumber = 20;
    private bool offerExists_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OfferExists {
      get { return offerExists_; }
      set {
        offerExists_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 21;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "DiscountSummary" field.</summary>
    public const int DiscountSummaryFieldNumber = 22;
    private global::EditCMSWindowsService.Messages.GrpcDiscountSummary discountSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcDiscountSummary DiscountSummary {
      get { return discountSummary_; }
      set {
        discountSummary_ = value;
      }
    }

    /// <summary>Field number for the "CarPriceOverview" field.</summary>
    public const int CarPriceOverviewFieldNumber = 23;
    private global::EditCMSWindowsService.Messages.GrpcPriceOverview carPriceOverview_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcPriceOverview CarPriceOverview {
      get { return carPriceOverview_; }
      set {
        carPriceOverview_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCarModelSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCarModelSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelName != other.ModelName) return false;
      if (MaskingName != other.MaskingName) return false;
      if (ModelRating != other.ModelRating) return false;
      if (FuelEconomy != other.FuelEconomy) return false;
      if (ValueForMoney != other.ValueForMoney) return false;
      if (Comfort != other.Comfort) return false;
      if (Performance != other.Performance) return false;
      if (Looks != other.Looks) return false;
      if (ReviewCount != other.ReviewCount) return false;
      if (MinPrice != other.MinPrice) return false;
      if (MaxPrice != other.MaxPrice) return false;
      if (MinAvgPrice != other.MinAvgPrice) return false;
      if (ModelImage != other.ModelImage) return false;
      if (LargeImage != other.LargeImage) return false;
      if (XLargeImage != other.XLargeImage) return false;
      if (HostUrl != other.HostUrl) return false;
      if (OriginalImage != other.OriginalImage) return false;
      if (ModelId != other.ModelId) return false;
      if (New != other.New) return false;
      if (OfferExists != other.OfferExists) return false;
      if (MakeId != other.MakeId) return false;
      if (!object.Equals(DiscountSummary, other.DiscountSummary)) return false;
      if (!object.Equals(CarPriceOverview, other.CarPriceOverview)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (ModelRating != 0D) hash ^= ModelRating.GetHashCode();
      if (FuelEconomy != 0D) hash ^= FuelEconomy.GetHashCode();
      if (ValueForMoney != 0D) hash ^= ValueForMoney.GetHashCode();
      if (Comfort != 0D) hash ^= Comfort.GetHashCode();
      if (Performance != 0D) hash ^= Performance.GetHashCode();
      if (Looks != 0D) hash ^= Looks.GetHashCode();
      if (ReviewCount != 0) hash ^= ReviewCount.GetHashCode();
      if (MinPrice != 0D) hash ^= MinPrice.GetHashCode();
      if (MaxPrice != 0D) hash ^= MaxPrice.GetHashCode();
      if (MinAvgPrice != 0) hash ^= MinAvgPrice.GetHashCode();
      if (ModelImage.Length != 0) hash ^= ModelImage.GetHashCode();
      if (LargeImage.Length != 0) hash ^= LargeImage.GetHashCode();
      if (XLargeImage.Length != 0) hash ^= XLargeImage.GetHashCode();
      if (HostUrl.Length != 0) hash ^= HostUrl.GetHashCode();
      if (OriginalImage.Length != 0) hash ^= OriginalImage.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (New != false) hash ^= New.GetHashCode();
      if (OfferExists != false) hash ^= OfferExists.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (discountSummary_ != null) hash ^= DiscountSummary.GetHashCode();
      if (carPriceOverview_ != null) hash ^= CarPriceOverview.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MaskingName);
      }
      if (ModelRating != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ModelRating);
      }
      if (FuelEconomy != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(FuelEconomy);
      }
      if (ValueForMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ValueForMoney);
      }
      if (Comfort != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Comfort);
      }
      if (Performance != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Performance);
      }
      if (Looks != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Looks);
      }
      if (ReviewCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ReviewCount);
      }
      if (MinPrice != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(MinPrice);
      }
      if (MaxPrice != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(MaxPrice);
      }
      if (MinAvgPrice != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MinAvgPrice);
      }
      if (ModelImage.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModelImage);
      }
      if (LargeImage.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(LargeImage);
      }
      if (XLargeImage.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(XLargeImage);
      }
      if (HostUrl.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HostUrl);
      }
      if (OriginalImage.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(OriginalImage);
      }
      if (ModelId != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ModelId);
      }
      if (New != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(New);
      }
      if (OfferExists != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(OfferExists);
      }
      if (MakeId != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(MakeId);
      }
      if (discountSummary_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(DiscountSummary);
      }
      if (carPriceOverview_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CarPriceOverview);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (ModelRating != 0D) {
        size += 1 + 8;
      }
      if (FuelEconomy != 0D) {
        size += 1 + 8;
      }
      if (ValueForMoney != 0D) {
        size += 1 + 8;
      }
      if (Comfort != 0D) {
        size += 1 + 8;
      }
      if (Performance != 0D) {
        size += 1 + 8;
      }
      if (Looks != 0D) {
        size += 1 + 8;
      }
      if (ReviewCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReviewCount);
      }
      if (MinPrice != 0D) {
        size += 1 + 8;
      }
      if (MaxPrice != 0D) {
        size += 1 + 8;
      }
      if (MinAvgPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinAvgPrice);
      }
      if (ModelImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelImage);
      }
      if (LargeImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LargeImage);
      }
      if (XLargeImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XLargeImage);
      }
      if (HostUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HostUrl);
      }
      if (OriginalImage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OriginalImage);
      }
      if (ModelId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (New != false) {
        size += 2 + 1;
      }
      if (OfferExists != false) {
        size += 2 + 1;
      }
      if (MakeId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (discountSummary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DiscountSummary);
      }
      if (carPriceOverview_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CarPriceOverview);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCarModelSummary other) {
      if (other == null) {
        return;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.ModelRating != 0D) {
        ModelRating = other.ModelRating;
      }
      if (other.FuelEconomy != 0D) {
        FuelEconomy = other.FuelEconomy;
      }
      if (other.ValueForMoney != 0D) {
        ValueForMoney = other.ValueForMoney;
      }
      if (other.Comfort != 0D) {
        Comfort = other.Comfort;
      }
      if (other.Performance != 0D) {
        Performance = other.Performance;
      }
      if (other.Looks != 0D) {
        Looks = other.Looks;
      }
      if (other.ReviewCount != 0) {
        ReviewCount = other.ReviewCount;
      }
      if (other.MinPrice != 0D) {
        MinPrice = other.MinPrice;
      }
      if (other.MaxPrice != 0D) {
        MaxPrice = other.MaxPrice;
      }
      if (other.MinAvgPrice != 0) {
        MinAvgPrice = other.MinAvgPrice;
      }
      if (other.ModelImage.Length != 0) {
        ModelImage = other.ModelImage;
      }
      if (other.LargeImage.Length != 0) {
        LargeImage = other.LargeImage;
      }
      if (other.XLargeImage.Length != 0) {
        XLargeImage = other.XLargeImage;
      }
      if (other.HostUrl.Length != 0) {
        HostUrl = other.HostUrl;
      }
      if (other.OriginalImage.Length != 0) {
        OriginalImage = other.OriginalImage;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.New != false) {
        New = other.New;
      }
      if (other.OfferExists != false) {
        OfferExists = other.OfferExists;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.discountSummary_ != null) {
        if (discountSummary_ == null) {
          discountSummary_ = new global::EditCMSWindowsService.Messages.GrpcDiscountSummary();
        }
        DiscountSummary.MergeFrom(other.DiscountSummary);
      }
      if (other.carPriceOverview_ != null) {
        if (carPriceOverview_ == null) {
          carPriceOverview_ = new global::EditCMSWindowsService.Messages.GrpcPriceOverview();
        }
        CarPriceOverview.MergeFrom(other.CarPriceOverview);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 18: {
            MaskingName = input.ReadString();
            break;
          }
          case 25: {
            ModelRating = input.ReadDouble();
            break;
          }
          case 33: {
            FuelEconomy = input.ReadDouble();
            break;
          }
          case 41: {
            ValueForMoney = input.ReadDouble();
            break;
          }
          case 49: {
            Comfort = input.ReadDouble();
            break;
          }
          case 57: {
            Performance = input.ReadDouble();
            break;
          }
          case 65: {
            Looks = input.ReadDouble();
            break;
          }
          case 72: {
            ReviewCount = input.ReadInt32();
            break;
          }
          case 81: {
            MinPrice = input.ReadDouble();
            break;
          }
          case 89: {
            MaxPrice = input.ReadDouble();
            break;
          }
          case 96: {
            MinAvgPrice = input.ReadInt32();
            break;
          }
          case 106: {
            ModelImage = input.ReadString();
            break;
          }
          case 114: {
            LargeImage = input.ReadString();
            break;
          }
          case 122: {
            XLargeImage = input.ReadString();
            break;
          }
          case 130: {
            HostUrl = input.ReadString();
            break;
          }
          case 138: {
            OriginalImage = input.ReadString();
            break;
          }
          case 144: {
            ModelId = input.ReadInt32();
            break;
          }
          case 152: {
            New = input.ReadBool();
            break;
          }
          case 160: {
            OfferExists = input.ReadBool();
            break;
          }
          case 168: {
            MakeId = input.ReadInt32();
            break;
          }
          case 178: {
            if (discountSummary_ == null) {
              discountSummary_ = new global::EditCMSWindowsService.Messages.GrpcDiscountSummary();
            }
            input.ReadMessage(discountSummary_);
            break;
          }
          case 186: {
            if (carPriceOverview_ == null) {
              carPriceOverview_ = new global::EditCMSWindowsService.Messages.GrpcPriceOverview();
            }
            input.ReadMessage(carPriceOverview_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcDiscountSummary : pb::IMessage<GrpcDiscountSummary> {
    private static readonly pb::MessageParser<GrpcDiscountSummary> _parser = new pb::MessageParser<GrpcDiscountSummary>(() => new GrpcDiscountSummary());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDiscountSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDiscountSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDiscountSummary(GrpcDiscountSummary other) : this() {
      maxDiscount_ = other.maxDiscount_;
      maskingName_ = other.maskingName_;
      dealsCount_ = other.dealsCount_;
      cityId_ = other.cityId_;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      modelName_ = other.modelName_;
      offers_ = other.offers_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDiscountSummary Clone() {
      return new GrpcDiscountSummary(this);
    }

    /// <summary>Field number for the "MaxDiscount" field.</summary>
    public const int MaxDiscountFieldNumber = 1;
    private int maxDiscount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxDiscount {
      get { return maxDiscount_; }
      set {
        maxDiscount_ = value;
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 2;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DealsCount" field.</summary>
    public const int DealsCountFieldNumber = 3;
    private int dealsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealsCount {
      get { return dealsCount_; }
      set {
        dealsCount_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 4;
    private uint cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 5;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "VersionId" field.</summary>
    public const int VersionIdFieldNumber = 6;
    private int versionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionId {
      get { return versionId_; }
      set {
        versionId_ = value;
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 7;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Offers" field.</summary>
    public const int OffersFieldNumber = 8;
    private string offers_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Offers {
      get { return offers_; }
      set {
        offers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDiscountSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDiscountSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxDiscount != other.MaxDiscount) return false;
      if (MaskingName != other.MaskingName) return false;
      if (DealsCount != other.DealsCount) return false;
      if (CityId != other.CityId) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (ModelName != other.ModelName) return false;
      if (Offers != other.Offers) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxDiscount != 0) hash ^= MaxDiscount.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (DealsCount != 0) hash ^= DealsCount.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (VersionId != 0) hash ^= VersionId.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (Offers.Length != 0) hash ^= Offers.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxDiscount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxDiscount);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MaskingName);
      }
      if (DealsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DealsCount);
      }
      if (CityId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CityId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ModelId);
      }
      if (VersionId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VersionId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModelName);
      }
      if (Offers.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Offers);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxDiscount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDiscount);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (DealsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealsCount);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CityId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (VersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionId);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (Offers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Offers);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDiscountSummary other) {
      if (other == null) {
        return;
      }
      if (other.MaxDiscount != 0) {
        MaxDiscount = other.MaxDiscount;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.DealsCount != 0) {
        DealsCount = other.DealsCount;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId != 0) {
        VersionId = other.VersionId;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.Offers.Length != 0) {
        Offers = other.Offers;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MaxDiscount = input.ReadInt32();
            break;
          }
          case 18: {
            MaskingName = input.ReadString();
            break;
          }
          case 24: {
            DealsCount = input.ReadInt32();
            break;
          }
          case 32: {
            CityId = input.ReadUInt32();
            break;
          }
          case 40: {
            ModelId = input.ReadInt32();
            break;
          }
          case 48: {
            VersionId = input.ReadInt32();
            break;
          }
          case 58: {
            ModelName = input.ReadString();
            break;
          }
          case 66: {
            Offers = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPriceOverview : pb::IMessage<GrpcPriceOverview> {
    private static readonly pb::MessageParser<GrpcPriceOverview> _parser = new pb::MessageParser<GrpcPriceOverview>(() => new GrpcPriceOverview());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPriceOverview> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPriceOverview() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPriceOverview(GrpcPriceOverview other) : this() {
      price_ = other.price_;
      priceLabel_ = other.priceLabel_;
      priceVersionCount_ = other.priceVersionCount_;
      priceStatus_ = other.priceStatus_;
      reasonText_ = other.reasonText_;
      City = other.city_ != null ? other.City.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPriceOverview Clone() {
      return new GrpcPriceOverview(this);
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 1;
    private int price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "PriceLabel" field.</summary>
    public const int PriceLabelFieldNumber = 2;
    private string priceLabel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceLabel {
      get { return priceLabel_; }
      set {
        priceLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceVersionCount" field.</summary>
    public const int PriceVersionCountFieldNumber = 3;
    private int priceVersionCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PriceVersionCount {
      get { return priceVersionCount_; }
      set {
        priceVersionCount_ = value;
      }
    }

    /// <summary>Field number for the "PriceStatus" field.</summary>
    public const int PriceStatusFieldNumber = 4;
    private int priceStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PriceStatus {
      get { return priceStatus_; }
      set {
        priceStatus_ = value;
      }
    }

    /// <summary>Field number for the "ReasonText" field.</summary>
    public const int ReasonTextFieldNumber = 5;
    private string reasonText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReasonText {
      get { return reasonText_; }
      set {
        reasonText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 6;
    private global::EditCMSWindowsService.Messages.GrpcCity city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcCity City {
      get { return city_; }
      set {
        city_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPriceOverview);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPriceOverview other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Price != other.Price) return false;
      if (PriceLabel != other.PriceLabel) return false;
      if (PriceVersionCount != other.PriceVersionCount) return false;
      if (PriceStatus != other.PriceStatus) return false;
      if (ReasonText != other.ReasonText) return false;
      if (!object.Equals(City, other.City)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Price != 0) hash ^= Price.GetHashCode();
      if (PriceLabel.Length != 0) hash ^= PriceLabel.GetHashCode();
      if (PriceVersionCount != 0) hash ^= PriceVersionCount.GetHashCode();
      if (PriceStatus != 0) hash ^= PriceStatus.GetHashCode();
      if (ReasonText.Length != 0) hash ^= ReasonText.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Price != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Price);
      }
      if (PriceLabel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PriceLabel);
      }
      if (PriceVersionCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PriceVersionCount);
      }
      if (PriceStatus != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PriceStatus);
      }
      if (ReasonText.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ReasonText);
      }
      if (city_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(City);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (PriceLabel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceLabel);
      }
      if (PriceVersionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceVersionCount);
      }
      if (PriceStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceStatus);
      }
      if (ReasonText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReasonText);
      }
      if (city_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(City);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPriceOverview other) {
      if (other == null) {
        return;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.PriceLabel.Length != 0) {
        PriceLabel = other.PriceLabel;
      }
      if (other.PriceVersionCount != 0) {
        PriceVersionCount = other.PriceVersionCount;
      }
      if (other.PriceStatus != 0) {
        PriceStatus = other.PriceStatus;
      }
      if (other.ReasonText.Length != 0) {
        ReasonText = other.ReasonText;
      }
      if (other.city_ != null) {
        if (city_ == null) {
          city_ = new global::EditCMSWindowsService.Messages.GrpcCity();
        }
        City.MergeFrom(other.City);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Price = input.ReadInt32();
            break;
          }
          case 18: {
            PriceLabel = input.ReadString();
            break;
          }
          case 24: {
            PriceVersionCount = input.ReadInt32();
            break;
          }
          case 32: {
            PriceStatus = input.ReadInt32();
            break;
          }
          case 42: {
            ReasonText = input.ReadString();
            break;
          }
          case 50: {
            if (city_ == null) {
              city_ = new global::EditCMSWindowsService.Messages.GrpcCity();
            }
            input.ReadMessage(city_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCity : pb::IMessage<GrpcCity> {
    private static readonly pb::MessageParser<GrpcCity> _parser = new pb::MessageParser<GrpcCity>(() => new GrpcCity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCity(GrpcCity other) : this() {
      cityId_ = other.cityId_;
      cityName_ = other.cityName_;
      groupMasterId_ = other.groupMasterId_;
      groupName_ = other.groupName_;
      State = other.state_ != null ? other.State.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCity Clone() {
      return new GrpcCity(this);
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 1;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "CityName" field.</summary>
    public const int CityNameFieldNumber = 2;
    private string cityName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityName {
      get { return cityName_; }
      set {
        cityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupMasterId" field.</summary>
    public const int GroupMasterIdFieldNumber = 3;
    private int groupMasterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GroupMasterId {
      get { return groupMasterId_; }
      set {
        groupMasterId_ = value;
      }
    }

    /// <summary>Field number for the "GroupName" field.</summary>
    public const int GroupNameFieldNumber = 4;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 5;
    private global::EditCMSWindowsService.Messages.GrpcStates state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EditCMSWindowsService.Messages.GrpcStates State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (CityName != other.CityName) return false;
      if (GroupMasterId != other.GroupMasterId) return false;
      if (GroupName != other.GroupName) return false;
      if (!object.Equals(State, other.State)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (CityName.Length != 0) hash ^= CityName.GetHashCode();
      if (GroupMasterId != 0) hash ^= GroupMasterId.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CityId);
      }
      if (CityName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CityName);
      }
      if (GroupMasterId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GroupMasterId);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupName);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (CityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CityName);
      }
      if (GroupMasterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupMasterId);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCity other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.CityName.Length != 0) {
        CityName = other.CityName;
      }
      if (other.GroupMasterId != 0) {
        GroupMasterId = other.GroupMasterId;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          state_ = new global::EditCMSWindowsService.Messages.GrpcStates();
        }
        State.MergeFrom(other.State);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CityId = input.ReadInt32();
            break;
          }
          case 18: {
            CityName = input.ReadString();
            break;
          }
          case 24: {
            GroupMasterId = input.ReadInt32();
            break;
          }
          case 34: {
            GroupName = input.ReadString();
            break;
          }
          case 42: {
            if (state_ == null) {
              state_ = new global::EditCMSWindowsService.Messages.GrpcStates();
            }
            input.ReadMessage(state_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcStates : pb::IMessage<GrpcStates> {
    private static readonly pb::MessageParser<GrpcStates> _parser = new pb::MessageParser<GrpcStates>(() => new GrpcStates());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcStates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcStates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcStates(GrpcStates other) : this() {
      stateId_ = other.stateId_;
      stateName_ = other.stateName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcStates Clone() {
      return new GrpcStates(this);
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 1;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "StateName" field.</summary>
    public const int StateNameFieldNumber = 2;
    private string stateName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateName {
      get { return stateName_; }
      set {
        stateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcStates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcStates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StateId != other.StateId) return false;
      if (StateName != other.StateName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (StateName.Length != 0) hash ^= StateName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StateId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StateId);
      }
      if (StateName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StateName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (StateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcStates other) {
      if (other == null) {
        return;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.StateName.Length != 0) {
        StateName = other.StateName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StateId = input.ReadInt32();
            break;
          }
          case 18: {
            StateName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcRelatedArticles : pb::IMessage<GrpcRelatedArticles> {
    private static readonly pb::MessageParser<GrpcRelatedArticles> _parser = new pb::MessageParser<GrpcRelatedArticles>(() => new GrpcRelatedArticles());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcRelatedArticles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticles(GrpcRelatedArticles other) : this() {
      categoryId_ = other.categoryId_;
      categoryMaskingName_ = other.categoryMaskingName_;
      basicId_ = other.basicId_;
      parentCatId_ = other.parentCatId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticles Clone() {
      return new GrpcRelatedArticles(this);
    }

    /// <summary>Field number for the "CategoryId" field.</summary>
    public const int CategoryIdFieldNumber = 1;
    private int categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "CategoryMaskingName" field.</summary>
    public const int CategoryMaskingNameFieldNumber = 2;
    private string categoryMaskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryMaskingName {
      get { return categoryMaskingName_; }
      set {
        categoryMaskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 3;
    private int basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    /// <summary>Field number for the "ParentCatId" field.</summary>
    public const int ParentCatIdFieldNumber = 4;
    private int parentCatId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentCatId {
      get { return parentCatId_; }
      set {
        parentCatId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcRelatedArticles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcRelatedArticles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryId != other.CategoryId) return false;
      if (CategoryMaskingName != other.CategoryMaskingName) return false;
      if (BasicId != other.BasicId) return false;
      if (ParentCatId != other.ParentCatId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (CategoryMaskingName.Length != 0) hash ^= CategoryMaskingName.GetHashCode();
      if (BasicId != 0) hash ^= BasicId.GetHashCode();
      if (ParentCatId != 0) hash ^= ParentCatId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CategoryId);
      }
      if (CategoryMaskingName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CategoryMaskingName);
      }
      if (BasicId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BasicId);
      }
      if (ParentCatId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ParentCatId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (CategoryMaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryMaskingName);
      }
      if (BasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicId);
      }
      if (ParentCatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentCatId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcRelatedArticles other) {
      if (other == null) {
        return;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.CategoryMaskingName.Length != 0) {
        CategoryMaskingName = other.CategoryMaskingName;
      }
      if (other.BasicId != 0) {
        BasicId = other.BasicId;
      }
      if (other.ParentCatId != 0) {
        ParentCatId = other.ParentCatId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 18: {
            CategoryMaskingName = input.ReadString();
            break;
          }
          case 24: {
            BasicId = input.ReadInt32();
            break;
          }
          case 32: {
            ParentCatId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcAuthor : pb::IMessage<GrpcAuthor> {
    private static readonly pb::MessageParser<GrpcAuthor> _parser = new pb::MessageParser<GrpcAuthor>(() => new GrpcAuthor());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcAuthor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthor(GrpcAuthor other) : this() {
      authorName_ = other.authorName_;
      profileImage_ = other.profileImage_;
      designation_ = other.designation_;
      shortDescription_ = other.shortDescription_;
      maskingName_ = other.maskingName_;
      hostUrl_ = other.hostUrl_;
      imageName_ = other.imageName_;
      fullDescription_ = other.fullDescription_;
      emailId_ = other.emailId_;
      facebookProfile_ = other.facebookProfile_;
      googlePlusProfile_ = other.googlePlusProfile_;
      linkedInProfile_ = other.linkedInProfile_;
      twitterProfile_ = other.twitterProfile_;
      authorId_ = other.authorId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthor Clone() {
      return new GrpcAuthor(this);
    }

    /// <summary>Field number for the "AuthorName" field.</summary>
    public const int AuthorNameFieldNumber = 1;
    private string authorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorName {
      get { return authorName_; }
      set {
        authorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfileImage" field.</summary>
    public const int ProfileImageFieldNumber = 2;
    private string profileImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileImage {
      get { return profileImage_; }
      set {
        profileImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Designation" field.</summary>
    public const int DesignationFieldNumber = 3;
    private string designation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Designation {
      get { return designation_; }
      set {
        designation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShortDescription" field.</summary>
    public const int ShortDescriptionFieldNumber = 4;
    private string shortDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortDescription {
      get { return shortDescription_; }
      set {
        shortDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 5;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HostUrl" field.</summary>
    public const int HostUrlFieldNumber = 6;
    private string hostUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostUrl {
      get { return hostUrl_; }
      set {
        hostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImageName" field.</summary>
    public const int ImageNameFieldNumber = 7;
    private string imageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageName {
      get { return imageName_; }
      set {
        imageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FullDescription" field.</summary>
    public const int FullDescriptionFieldNumber = 8;
    private string fullDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullDescription {
      get { return fullDescription_; }
      set {
        fullDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EmailId" field.</summary>
    public const int EmailIdFieldNumber = 9;
    private string emailId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmailId {
      get { return emailId_; }
      set {
        emailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FacebookProfile" field.</summary>
    public const int FacebookProfileFieldNumber = 10;
    private string facebookProfile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookProfile {
      get { return facebookProfile_; }
      set {
        facebookProfile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GooglePlusProfile" field.</summary>
    public const int GooglePlusProfileFieldNumber = 11;
    private string googlePlusProfile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GooglePlusProfile {
      get { return googlePlusProfile_; }
      set {
        googlePlusProfile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkedInProfile" field.</summary>
    public const int LinkedInProfileFieldNumber = 12;
    private string linkedInProfile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkedInProfile {
      get { return linkedInProfile_; }
      set {
        linkedInProfile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TwitterProfile" field.</summary>
    public const int TwitterProfileFieldNumber = 13;
    private string twitterProfile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TwitterProfile {
      get { return twitterProfile_; }
      set {
        twitterProfile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AuthorId" field.</summary>
    public const int AuthorIdFieldNumber = 14;
    private uint authorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AuthorId {
      get { return authorId_; }
      set {
        authorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcAuthor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcAuthor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthorName != other.AuthorName) return false;
      if (ProfileImage != other.ProfileImage) return false;
      if (Designation != other.Designation) return false;
      if (ShortDescription != other.ShortDescription) return false;
      if (MaskingName != other.MaskingName) return false;
      if (HostUrl != other.HostUrl) return false;
      if (ImageName != other.ImageName) return false;
      if (FullDescription != other.FullDescription) return false;
      if (EmailId != other.EmailId) return false;
      if (FacebookProfile != other.FacebookProfile) return false;
      if (GooglePlusProfile != other.GooglePlusProfile) return false;
      if (LinkedInProfile != other.LinkedInProfile) return false;
      if (TwitterProfile != other.TwitterProfile) return false;
      if (AuthorId != other.AuthorId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthorName.Length != 0) hash ^= AuthorName.GetHashCode();
      if (ProfileImage.Length != 0) hash ^= ProfileImage.GetHashCode();
      if (Designation.Length != 0) hash ^= Designation.GetHashCode();
      if (ShortDescription.Length != 0) hash ^= ShortDescription.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (HostUrl.Length != 0) hash ^= HostUrl.GetHashCode();
      if (ImageName.Length != 0) hash ^= ImageName.GetHashCode();
      if (FullDescription.Length != 0) hash ^= FullDescription.GetHashCode();
      if (EmailId.Length != 0) hash ^= EmailId.GetHashCode();
      if (FacebookProfile.Length != 0) hash ^= FacebookProfile.GetHashCode();
      if (GooglePlusProfile.Length != 0) hash ^= GooglePlusProfile.GetHashCode();
      if (LinkedInProfile.Length != 0) hash ^= LinkedInProfile.GetHashCode();
      if (TwitterProfile.Length != 0) hash ^= TwitterProfile.GetHashCode();
      if (AuthorId != 0) hash ^= AuthorId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthorName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthorName);
      }
      if (ProfileImage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProfileImage);
      }
      if (Designation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Designation);
      }
      if (ShortDescription.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShortDescription);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MaskingName);
      }
      if (HostUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HostUrl);
      }
      if (ImageName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImageName);
      }
      if (FullDescription.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FullDescription);
      }
      if (EmailId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EmailId);
      }
      if (FacebookProfile.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(FacebookProfile);
      }
      if (GooglePlusProfile.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(GooglePlusProfile);
      }
      if (LinkedInProfile.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LinkedInProfile);
      }
      if (TwitterProfile.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TwitterProfile);
      }
      if (AuthorId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(AuthorId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorName);
      }
      if (ProfileImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileImage);
      }
      if (Designation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Designation);
      }
      if (ShortDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortDescription);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (HostUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostUrl);
      }
      if (ImageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageName);
      }
      if (FullDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullDescription);
      }
      if (EmailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailId);
      }
      if (FacebookProfile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookProfile);
      }
      if (GooglePlusProfile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GooglePlusProfile);
      }
      if (LinkedInProfile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkedInProfile);
      }
      if (TwitterProfile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TwitterProfile);
      }
      if (AuthorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuthorId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcAuthor other) {
      if (other == null) {
        return;
      }
      if (other.AuthorName.Length != 0) {
        AuthorName = other.AuthorName;
      }
      if (other.ProfileImage.Length != 0) {
        ProfileImage = other.ProfileImage;
      }
      if (other.Designation.Length != 0) {
        Designation = other.Designation;
      }
      if (other.ShortDescription.Length != 0) {
        ShortDescription = other.ShortDescription;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.HostUrl.Length != 0) {
        HostUrl = other.HostUrl;
      }
      if (other.ImageName.Length != 0) {
        ImageName = other.ImageName;
      }
      if (other.FullDescription.Length != 0) {
        FullDescription = other.FullDescription;
      }
      if (other.EmailId.Length != 0) {
        EmailId = other.EmailId;
      }
      if (other.FacebookProfile.Length != 0) {
        FacebookProfile = other.FacebookProfile;
      }
      if (other.GooglePlusProfile.Length != 0) {
        GooglePlusProfile = other.GooglePlusProfile;
      }
      if (other.LinkedInProfile.Length != 0) {
        LinkedInProfile = other.LinkedInProfile;
      }
      if (other.TwitterProfile.Length != 0) {
        TwitterProfile = other.TwitterProfile;
      }
      if (other.AuthorId != 0) {
        AuthorId = other.AuthorId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AuthorName = input.ReadString();
            break;
          }
          case 18: {
            ProfileImage = input.ReadString();
            break;
          }
          case 26: {
            Designation = input.ReadString();
            break;
          }
          case 34: {
            ShortDescription = input.ReadString();
            break;
          }
          case 42: {
            MaskingName = input.ReadString();
            break;
          }
          case 50: {
            HostUrl = input.ReadString();
            break;
          }
          case 58: {
            ImageName = input.ReadString();
            break;
          }
          case 66: {
            FullDescription = input.ReadString();
            break;
          }
          case 74: {
            EmailId = input.ReadString();
            break;
          }
          case 82: {
            FacebookProfile = input.ReadString();
            break;
          }
          case 90: {
            GooglePlusProfile = input.ReadString();
            break;
          }
          case 98: {
            LinkedInProfile = input.ReadString();
            break;
          }
          case 106: {
            TwitterProfile = input.ReadString();
            break;
          }
          case 112: {
            AuthorId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcAuthorList : pb::IMessage<GrpcAuthorList> {
    private static readonly pb::MessageParser<GrpcAuthorList> _parser = new pb::MessageParser<GrpcAuthorList>(() => new GrpcAuthorList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcAuthorList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorList(GrpcAuthorList other) : this() {
      lstGrpcAuthor_ = other.lstGrpcAuthor_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorList Clone() {
      return new GrpcAuthorList(this);
    }

    /// <summary>Field number for the "LstGrpcAuthor" field.</summary>
    public const int LstGrpcAuthorFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcAuthor> _repeated_lstGrpcAuthor_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcAuthor.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcAuthor> lstGrpcAuthor_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcAuthor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcAuthor> LstGrpcAuthor {
      get { return lstGrpcAuthor_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcAuthorList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcAuthorList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcAuthor_.Equals(other.lstGrpcAuthor_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcAuthor_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcAuthor_.WriteTo(output, _repeated_lstGrpcAuthor_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcAuthor_.CalculateSize(_repeated_lstGrpcAuthor_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcAuthorList other) {
      if (other == null) {
        return;
      }
      lstGrpcAuthor_.Add(other.lstGrpcAuthor_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcAuthor_.AddEntriesFrom(input, _repeated_lstGrpcAuthor_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelVideoList : pb::IMessage<GrpcModelVideoList> {
    private static readonly pb::MessageParser<GrpcModelVideoList> _parser = new pb::MessageParser<GrpcModelVideoList>(() => new GrpcModelVideoList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelVideoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelVideoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelVideoList(GrpcModelVideoList other) : this() {
      lstGrpcModelVideo_ = other.lstGrpcModelVideo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelVideoList Clone() {
      return new GrpcModelVideoList(this);
    }

    /// <summary>Field number for the "LstGrpcModelVideo" field.</summary>
    public const int LstGrpcModelVideoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcModelVideo> _repeated_lstGrpcModelVideo_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcModelVideo.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelVideo> lstGrpcModelVideo_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelVideo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelVideo> LstGrpcModelVideo {
      get { return lstGrpcModelVideo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelVideoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelVideoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcModelVideo_.Equals(other.lstGrpcModelVideo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcModelVideo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcModelVideo_.WriteTo(output, _repeated_lstGrpcModelVideo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcModelVideo_.CalculateSize(_repeated_lstGrpcModelVideo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelVideoList other) {
      if (other == null) {
        return;
      }
      lstGrpcModelVideo_.Add(other.lstGrpcModelVideo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcModelVideo_.AddEntriesFrom(input, _repeated_lstGrpcModelVideo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVideosEntityList : pb::IMessage<GrpcVideosEntityList> {
    private static readonly pb::MessageParser<GrpcVideosEntityList> _parser = new pb::MessageParser<GrpcVideosEntityList>(() => new GrpcVideosEntityList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVideosEntityList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosEntityList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosEntityList(GrpcVideosEntityList other) : this() {
      lstGrpcVideosEntity_ = other.lstGrpcVideosEntity_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVideosEntityList Clone() {
      return new GrpcVideosEntityList(this);
    }

    /// <summary>Field number for the "LstGrpcVideosEntity" field.</summary>
    public const int LstGrpcVideosEntityFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcVideosEntity> _repeated_lstGrpcVideosEntity_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcVideosEntity.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVideosEntity> lstGrpcVideosEntity_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVideosEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcVideosEntity> LstGrpcVideosEntity {
      get { return lstGrpcVideosEntity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVideosEntityList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVideosEntityList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcVideosEntity_.Equals(other.lstGrpcVideosEntity_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcVideosEntity_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcVideosEntity_.WriteTo(output, _repeated_lstGrpcVideosEntity_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcVideosEntity_.CalculateSize(_repeated_lstGrpcVideosEntity_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVideosEntityList other) {
      if (other == null) {
        return;
      }
      lstGrpcVideosEntity_.Add(other.lstGrpcVideosEntity_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcVideosEntity_.AddEntriesFrom(input, _repeated_lstGrpcVideosEntity_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCMSSubCategoryList : pb::IMessage<GrpcCMSSubCategoryList> {
    private static readonly pb::MessageParser<GrpcCMSSubCategoryList> _parser = new pb::MessageParser<GrpcCMSSubCategoryList>(() => new GrpcCMSSubCategoryList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCMSSubCategoryList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSSubCategoryList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSSubCategoryList(GrpcCMSSubCategoryList other) : this() {
      lstGrpcCMSSubCategory_ = other.lstGrpcCMSSubCategory_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCMSSubCategoryList Clone() {
      return new GrpcCMSSubCategoryList(this);
    }

    /// <summary>Field number for the "LstGrpcCMSSubCategory" field.</summary>
    public const int LstGrpcCMSSubCategoryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcCMSSubCategory> _repeated_lstGrpcCMSSubCategory_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcCMSSubCategory.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcCMSSubCategory> lstGrpcCMSSubCategory_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcCMSSubCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcCMSSubCategory> LstGrpcCMSSubCategory {
      get { return lstGrpcCMSSubCategory_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCMSSubCategoryList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCMSSubCategoryList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcCMSSubCategory_.Equals(other.lstGrpcCMSSubCategory_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcCMSSubCategory_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcCMSSubCategory_.WriteTo(output, _repeated_lstGrpcCMSSubCategory_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcCMSSubCategory_.CalculateSize(_repeated_lstGrpcCMSSubCategory_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCMSSubCategoryList other) {
      if (other == null) {
        return;
      }
      lstGrpcCMSSubCategory_.Add(other.lstGrpcCMSSubCategory_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcCMSSubCategory_.AddEntriesFrom(input, _repeated_lstGrpcCMSSubCategory_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcRelatedArticlesList : pb::IMessage<GrpcRelatedArticlesList> {
    private static readonly pb::MessageParser<GrpcRelatedArticlesList> _parser = new pb::MessageParser<GrpcRelatedArticlesList>(() => new GrpcRelatedArticlesList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcRelatedArticlesList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticlesList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticlesList(GrpcRelatedArticlesList other) : this() {
      lstGrpcRelatedArticles_ = other.lstGrpcRelatedArticles_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcRelatedArticlesList Clone() {
      return new GrpcRelatedArticlesList(this);
    }

    /// <summary>Field number for the "LstGrpcRelatedArticles" field.</summary>
    public const int LstGrpcRelatedArticlesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcRelatedArticles> _repeated_lstGrpcRelatedArticles_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcRelatedArticles.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcRelatedArticles> lstGrpcRelatedArticles_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcRelatedArticles>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcRelatedArticles> LstGrpcRelatedArticles {
      get { return lstGrpcRelatedArticles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcRelatedArticlesList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcRelatedArticlesList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcRelatedArticles_.Equals(other.lstGrpcRelatedArticles_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcRelatedArticles_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcRelatedArticles_.WriteTo(output, _repeated_lstGrpcRelatedArticles_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcRelatedArticles_.CalculateSize(_repeated_lstGrpcRelatedArticles_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcRelatedArticlesList other) {
      if (other == null) {
        return;
      }
      lstGrpcRelatedArticles_.Add(other.lstGrpcRelatedArticles_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcRelatedArticles_.AddEntriesFrom(input, _repeated_lstGrpcRelatedArticles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopularCarDataList : pb::IMessage<GrpcPopularCarDataList> {
    private static readonly pb::MessageParser<GrpcPopularCarDataList> _parser = new pb::MessageParser<GrpcPopularCarDataList>(() => new GrpcPopularCarDataList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopularCarDataList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularCarDataList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularCarDataList(GrpcPopularCarDataList other) : this() {
      lstGrpcPopularCarData_ = other.lstGrpcPopularCarData_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopularCarDataList Clone() {
      return new GrpcPopularCarDataList(this);
    }

    /// <summary>Field number for the "LstGrpcPopularCarData" field.</summary>
    public const int LstGrpcPopularCarDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcPopularCarData> _repeated_lstGrpcPopularCarData_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcPopularCarData.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcPopularCarData> lstGrpcPopularCarData_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcPopularCarData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcPopularCarData> LstGrpcPopularCarData {
      get { return lstGrpcPopularCarData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopularCarDataList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopularCarDataList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcPopularCarData_.Equals(other.lstGrpcPopularCarData_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcPopularCarData_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcPopularCarData_.WriteTo(output, _repeated_lstGrpcPopularCarData_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcPopularCarData_.CalculateSize(_repeated_lstGrpcPopularCarData_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopularCarDataList other) {
      if (other == null) {
        return;
      }
      lstGrpcPopularCarData_.Add(other.lstGrpcPopularCarData_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcPopularCarData_.AddEntriesFrom(input, _repeated_lstGrpcPopularCarData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcModelPhotosList : pb::IMessage<GrpcModelPhotosList> {
    private static readonly pb::MessageParser<GrpcModelPhotosList> _parser = new pb::MessageParser<GrpcModelPhotosList>(() => new GrpcModelPhotosList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcModelPhotosList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotosList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotosList(GrpcModelPhotosList other) : this() {
      lstGrpcModelPhotos_ = other.lstGrpcModelPhotos_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcModelPhotosList Clone() {
      return new GrpcModelPhotosList(this);
    }

    /// <summary>Field number for the "LstGrpcModelPhotos" field.</summary>
    public const int LstGrpcModelPhotosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcModelPhotos> _repeated_lstGrpcModelPhotos_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcModelPhotos.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelPhotos> lstGrpcModelPhotos_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelPhotos>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcModelPhotos> LstGrpcModelPhotos {
      get { return lstGrpcModelPhotos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcModelPhotosList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcModelPhotosList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcModelPhotos_.Equals(other.lstGrpcModelPhotos_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcModelPhotos_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcModelPhotos_.WriteTo(output, _repeated_lstGrpcModelPhotos_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcModelPhotos_.CalculateSize(_repeated_lstGrpcModelPhotos_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcModelPhotosList other) {
      if (other == null) {
        return;
      }
      lstGrpcModelPhotos_.Add(other.lstGrpcModelPhotos_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcModelPhotos_.AddEntriesFrom(input, _repeated_lstGrpcModelPhotos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcContentByAuthorURI : pb::IMessage<GrpcContentByAuthorURI> {
    private static readonly pb::MessageParser<GrpcContentByAuthorURI> _parser = new pb::MessageParser<GrpcContentByAuthorURI>(() => new GrpcContentByAuthorURI());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcContentByAuthorURI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentByAuthorURI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentByAuthorURI(GrpcContentByAuthorURI other) : this() {
      authorId_ = other.authorId_;
      applicationId_ = other.applicationId_;
      categoryids_ = other.categoryids_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcContentByAuthorURI Clone() {
      return new GrpcContentByAuthorURI(this);
    }

    /// <summary>Field number for the "AuthorId" field.</summary>
    public const int AuthorIdFieldNumber = 1;
    private int authorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AuthorId {
      get { return authorId_; }
      set {
        authorId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "Categoryids" field.</summary>
    public const int CategoryidsFieldNumber = 3;
    private string categoryids_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Categoryids {
      get { return categoryids_; }
      set {
        categoryids_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcContentByAuthorURI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcContentByAuthorURI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthorId != other.AuthorId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (Categoryids != other.Categoryids) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthorId != 0) hash ^= AuthorId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (Categoryids.Length != 0) hash ^= Categoryids.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AuthorId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
      if (Categoryids.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Categoryids);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthorId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (Categoryids.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Categoryids);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcContentByAuthorURI other) {
      if (other == null) {
        return;
      }
      if (other.AuthorId != 0) {
        AuthorId = other.AuthorId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Categoryids.Length != 0) {
        Categoryids = other.Categoryids;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AuthorId = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 26: {
            Categoryids = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcAuthorContentList : pb::IMessage<GrpcAuthorContentList> {
    private static readonly pb::MessageParser<GrpcAuthorContentList> _parser = new pb::MessageParser<GrpcAuthorContentList>(() => new GrpcAuthorContentList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcAuthorContentList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorContentList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorContentList(GrpcAuthorContentList other) : this() {
      lstGrpcAuthorContent_ = other.lstGrpcAuthorContent_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorContentList Clone() {
      return new GrpcAuthorContentList(this);
    }

    /// <summary>Field number for the "LstGrpcAuthorContent" field.</summary>
    public const int LstGrpcAuthorContentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EditCMSWindowsService.Messages.GrpcAuthorContent> _repeated_lstGrpcAuthorContent_codec
        = pb::FieldCodec.ForMessage(10, global::EditCMSWindowsService.Messages.GrpcAuthorContent.Parser);
    private readonly pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcAuthorContent> lstGrpcAuthorContent_ = new pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcAuthorContent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EditCMSWindowsService.Messages.GrpcAuthorContent> LstGrpcAuthorContent {
      get { return lstGrpcAuthorContent_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcAuthorContentList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcAuthorContentList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstGrpcAuthorContent_.Equals(other.lstGrpcAuthorContent_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstGrpcAuthorContent_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstGrpcAuthorContent_.WriteTo(output, _repeated_lstGrpcAuthorContent_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstGrpcAuthorContent_.CalculateSize(_repeated_lstGrpcAuthorContent_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcAuthorContentList other) {
      if (other == null) {
        return;
      }
      lstGrpcAuthorContent_.Add(other.lstGrpcAuthorContent_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstGrpcAuthorContent_.AddEntriesFrom(input, _repeated_lstGrpcAuthorContent_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcAuthorContent : pb::IMessage<GrpcAuthorContent> {
    private static readonly pb::MessageParser<GrpcAuthorContent> _parser = new pb::MessageParser<GrpcAuthorContent>(() => new GrpcAuthorContent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcAuthorContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EditCMSWindowsService.Messages.EditCmsReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorContent(GrpcAuthorContent other) : this() {
      title_ = other.title_;
      url_ = other.url_;
      maskingName_ = other.maskingName_;
      makeName_ = other.makeName_;
      categoryId_ = other.categoryId_;
      basicId_ = other.basicId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAuthorContent Clone() {
      return new GrpcAuthorContent(this);
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 3;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 4;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CategoryId" field.</summary>
    public const int CategoryIdFieldNumber = 5;
    private int categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "BasicId" field.</summary>
    public const int BasicIdFieldNumber = 6;
    private int basicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicId {
      get { return basicId_; }
      set {
        basicId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcAuthorContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcAuthorContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Url != other.Url) return false;
      if (MaskingName != other.MaskingName) return false;
      if (MakeName != other.MakeName) return false;
      if (CategoryId != other.CategoryId) return false;
      if (BasicId != other.BasicId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (BasicId != 0) hash ^= BasicId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MaskingName);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MakeName);
      }
      if (CategoryId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CategoryId);
      }
      if (BasicId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BasicId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (BasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcAuthorContent other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.BasicId != 0) {
        BasicId = other.BasicId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            MaskingName = input.ReadString();
            break;
          }
          case 34: {
            MakeName = input.ReadString();
            break;
          }
          case 40: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 48: {
            BasicId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
