//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Carwale.BL.RoyalSundaram {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoyalSundaram.RoyalServicesSoap")]
    public interface RoyalServicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeadValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLeadValues(
                    string ProductName, 
                    string ContactNo, 
                    string Email, 
                    string Contact, 
                    string Products, 
                    string SRCCookie, 
                    string MediumCookie, 
                    string SearchEngine, 
                    string ClientName, 
                    string Campaign, 
                    string AdGroup, 
                    string KeyWord, 
                    string SearchContent, 
                    string IpAddress, 
                    string ReferralUrl, 
                    string PolicyType, 
                    string PolicyExp, 
                    string City, 
                    string CarMake, 
                    string CarModel, 
                    string YearOfManufacture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeadValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLeadValuesAsync(
                    string ProductName, 
                    string ContactNo, 
                    string Email, 
                    string Contact, 
                    string Products, 
                    string SRCCookie, 
                    string MediumCookie, 
                    string SearchEngine, 
                    string ClientName, 
                    string Campaign, 
                    string AdGroup, 
                    string KeyWord, 
                    string SearchContent, 
                    string IpAddress, 
                    string ReferralUrl, 
                    string PolicyType, 
                    string PolicyExp, 
                    string City, 
                    string CarMake, 
                    string CarModel, 
                    string YearOfManufacture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServicesValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServicesValues(
                    string ServiceType, 
                    string Name, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string UploadFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServicesValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetServicesValuesAsync(
                    string ServiceType, 
                    string Name, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string UploadFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGrievanceValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetGrievanceValues(
                    string Name, 
                    string DOB, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string Statename, 
                    string Distname, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string ApproachEarlier, 
                    string ReferenceNo, 
                    string UploadFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGrievanceValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGrievanceValuesAsync(
                    string Name, 
                    string DOB, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string Statename, 
                    string Distname, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string ApproachEarlier, 
                    string ReferenceNo, 
                    string UploadFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHealthClaimValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetHealthClaimValues(string InsuredName, string AdmissionDate, string DischargeDate, string HospitalName, string HospitalPlace, string AilmentName, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHealthClaimValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetHealthClaimValuesAsync(string InsuredName, string AdmissionDate, string DischargeDate, string HospitalName, string HospitalPlace, string AilmentName, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHomeValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetHomeValues(string LossDate, string ClaimNature, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHomeValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetHomeValuesAsync(string LossDate, string ClaimNature, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMotorValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMotorValues(string InsuredName, string PolicyNo, string VehicleNo, string Model, string Email, string Mobile, string ResidentNo, string OfficeNo, string AccidentDate, string Address, string RepairName, string AccidentCause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMotorValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetMotorValuesAsync(string InsuredName, string PolicyNo, string VehicleNo, string Model, string Email, string Mobile, string ResidentNo, string OfficeNo, string AccidentDate, string Address, string RepairName, string AccidentCause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPersonalValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPersonalValues(string InsuredName, string PolicyNo, string ClaimName, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address, string AccidentDate, string AccidentPlace, string ClaimNature, string Others);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPersonalValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPersonalValuesAsync(string InsuredName, string PolicyNo, string ClaimName, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address, string AccidentDate, string AccidentPlace, string ClaimNature, string Others);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDNC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDNC(string FirstName, string LastName, string StdCode, string PhoneNumber, string Mobile, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDNC", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDNCAsync(string FirstName, string LastName, string StdCode, string PhoneNumber, string Mobile, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPolicyTerm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPolicyTerm(string Prodname, string EmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPolicyTerm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPolicyTermAsync(string Prodname, string EmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClaimForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClaimForm(string Prodname, string EmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClaimForm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClaimFormAsync(string Prodname, string EmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerEmail(string Title, string Name, string Email, string ContactNumber, string Mobile, string ExistingCustomer, string policyno, string comments, string city, string product, string datafrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerEmailAsync(string Title, string Name, string Email, string ContactNumber, string Mobile, string ExistingCustomer, string policyno, string comments, string city, string product, string datafrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Carwale.BL.RoyalSundaram.Branches LoadBranches(string BranchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadBranches", ReplyAction="*")]
        System.Threading.Tasks.Task<Carwale.BL.RoyalSundaram.Branches> LoadBranchesAsync(string BranchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadCashlessHospitalLists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LoadCashlessHospitalLists(string State, string City, string Category, string HospitalName, string Pincode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadCashlessHospitalLists", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadCashlessHospitalListsAsync(string State, string City, string Category, string HospitalName, string Pincode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LoadStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadStates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadCities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LoadCities(string StateName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadCities", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadCitiesAsync(string StateName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadHospitals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LoadHospitals(string StateName, string CityName, string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadHospitals", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadHospitalsAsync(string StateName, string CityName, string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Load_GStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Load_GStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Load_GStates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Load_GStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Load_GDistrict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Load_GDistrict(string StateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Load_GDistrict", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Load_GDistrictAsync(string StateId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Branches : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string branchNameField;
        
        private string branchAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string BranchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
                this.RaisePropertyChanged("BranchName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BranchAddress {
            get {
                return this.branchAddressField;
            }
            set {
                this.branchAddressField = value;
                this.RaisePropertyChanged("BranchAddress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RoyalServicesSoapChannel : Carwale.BL.RoyalSundaram.RoyalServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoyalServicesSoapClient : System.ServiceModel.ClientBase<Carwale.BL.RoyalSundaram.RoyalServicesSoap>, Carwale.BL.RoyalSundaram.RoyalServicesSoap {
        
        public RoyalServicesSoapClient() {
        }
        
        public RoyalServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoyalServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoyalServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoyalServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetLeadValues(
                    string ProductName, 
                    string ContactNo, 
                    string Email, 
                    string Contact, 
                    string Products, 
                    string SRCCookie, 
                    string MediumCookie, 
                    string SearchEngine, 
                    string ClientName, 
                    string Campaign, 
                    string AdGroup, 
                    string KeyWord, 
                    string SearchContent, 
                    string IpAddress, 
                    string ReferralUrl, 
                    string PolicyType, 
                    string PolicyExp, 
                    string City, 
                    string CarMake, 
                    string CarModel, 
                    string YearOfManufacture) {
            return base.Channel.GetLeadValues(ProductName, ContactNo, Email, Contact, Products, SRCCookie, MediumCookie, SearchEngine, ClientName, Campaign, AdGroup, KeyWord, SearchContent, IpAddress, ReferralUrl, PolicyType, PolicyExp, City, CarMake, CarModel, YearOfManufacture);
        }
        
        public System.Threading.Tasks.Task<string> GetLeadValuesAsync(
                    string ProductName, 
                    string ContactNo, 
                    string Email, 
                    string Contact, 
                    string Products, 
                    string SRCCookie, 
                    string MediumCookie, 
                    string SearchEngine, 
                    string ClientName, 
                    string Campaign, 
                    string AdGroup, 
                    string KeyWord, 
                    string SearchContent, 
                    string IpAddress, 
                    string ReferralUrl, 
                    string PolicyType, 
                    string PolicyExp, 
                    string City, 
                    string CarMake, 
                    string CarModel, 
                    string YearOfManufacture) {
            return base.Channel.GetLeadValuesAsync(ProductName, ContactNo, Email, Contact, Products, SRCCookie, MediumCookie, SearchEngine, ClientName, Campaign, AdGroup, KeyWord, SearchContent, IpAddress, ReferralUrl, PolicyType, PolicyExp, City, CarMake, CarModel, YearOfManufacture);
        }
        
        public string GetServicesValues(
                    string ServiceType, 
                    string Name, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string UploadFile) {
            return base.Channel.GetServicesValues(ServiceType, Name, PhoneNo, Mobile, Email, Address1, Address2, City, Pincode, AddInfo, Product, Others1, InterType, Others2, PolicyNo, UploadFile);
        }
        
        public System.Threading.Tasks.Task<string> GetServicesValuesAsync(
                    string ServiceType, 
                    string Name, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string UploadFile) {
            return base.Channel.GetServicesValuesAsync(ServiceType, Name, PhoneNo, Mobile, Email, Address1, Address2, City, Pincode, AddInfo, Product, Others1, InterType, Others2, PolicyNo, UploadFile);
        }
        
        public string GetGrievanceValues(
                    string Name, 
                    string DOB, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string Statename, 
                    string Distname, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string ApproachEarlier, 
                    string ReferenceNo, 
                    string UploadFile) {
            return base.Channel.GetGrievanceValues(Name, DOB, PhoneNo, Mobile, Email, Address1, Address2, Statename, Distname, Pincode, AddInfo, Product, Others1, InterType, Others2, PolicyNo, ApproachEarlier, ReferenceNo, UploadFile);
        }
        
        public System.Threading.Tasks.Task<string> GetGrievanceValuesAsync(
                    string Name, 
                    string DOB, 
                    string PhoneNo, 
                    string Mobile, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string Statename, 
                    string Distname, 
                    string Pincode, 
                    string AddInfo, 
                    string Product, 
                    string Others1, 
                    string InterType, 
                    string Others2, 
                    string PolicyNo, 
                    string ApproachEarlier, 
                    string ReferenceNo, 
                    string UploadFile) {
            return base.Channel.GetGrievanceValuesAsync(Name, DOB, PhoneNo, Mobile, Email, Address1, Address2, Statename, Distname, Pincode, AddInfo, Product, Others1, InterType, Others2, PolicyNo, ApproachEarlier, ReferenceNo, UploadFile);
        }
        
        public string GetHealthClaimValues(string InsuredName, string AdmissionDate, string DischargeDate, string HospitalName, string HospitalPlace, string AilmentName, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address) {
            return base.Channel.GetHealthClaimValues(InsuredName, AdmissionDate, DischargeDate, HospitalName, HospitalPlace, AilmentName, ClaimAmount, PolicyNo, Email, Mobile, ResidentNo, OfficeNo, Address);
        }
        
        public System.Threading.Tasks.Task<string> GetHealthClaimValuesAsync(string InsuredName, string AdmissionDate, string DischargeDate, string HospitalName, string HospitalPlace, string AilmentName, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address) {
            return base.Channel.GetHealthClaimValuesAsync(InsuredName, AdmissionDate, DischargeDate, HospitalName, HospitalPlace, AilmentName, ClaimAmount, PolicyNo, Email, Mobile, ResidentNo, OfficeNo, Address);
        }
        
        public string GetHomeValues(string LossDate, string ClaimNature, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address) {
            return base.Channel.GetHomeValues(LossDate, ClaimNature, ClaimAmount, PolicyNo, Email, Mobile, ResidentNo, OfficeNo, Address);
        }
        
        public System.Threading.Tasks.Task<string> GetHomeValuesAsync(string LossDate, string ClaimNature, double ClaimAmount, string PolicyNo, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address) {
            return base.Channel.GetHomeValuesAsync(LossDate, ClaimNature, ClaimAmount, PolicyNo, Email, Mobile, ResidentNo, OfficeNo, Address);
        }
        
        public string GetMotorValues(string InsuredName, string PolicyNo, string VehicleNo, string Model, string Email, string Mobile, string ResidentNo, string OfficeNo, string AccidentDate, string Address, string RepairName, string AccidentCause) {
            return base.Channel.GetMotorValues(InsuredName, PolicyNo, VehicleNo, Model, Email, Mobile, ResidentNo, OfficeNo, AccidentDate, Address, RepairName, AccidentCause);
        }
        
        public System.Threading.Tasks.Task<string> GetMotorValuesAsync(string InsuredName, string PolicyNo, string VehicleNo, string Model, string Email, string Mobile, string ResidentNo, string OfficeNo, string AccidentDate, string Address, string RepairName, string AccidentCause) {
            return base.Channel.GetMotorValuesAsync(InsuredName, PolicyNo, VehicleNo, Model, Email, Mobile, ResidentNo, OfficeNo, AccidentDate, Address, RepairName, AccidentCause);
        }
        
        public string GetPersonalValues(string InsuredName, string PolicyNo, string ClaimName, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address, string AccidentDate, string AccidentPlace, string ClaimNature, string Others) {
            return base.Channel.GetPersonalValues(InsuredName, PolicyNo, ClaimName, Email, Mobile, ResidentNo, OfficeNo, Address, AccidentDate, AccidentPlace, ClaimNature, Others);
        }
        
        public System.Threading.Tasks.Task<string> GetPersonalValuesAsync(string InsuredName, string PolicyNo, string ClaimName, string Email, string Mobile, string ResidentNo, string OfficeNo, string Address, string AccidentDate, string AccidentPlace, string ClaimNature, string Others) {
            return base.Channel.GetPersonalValuesAsync(InsuredName, PolicyNo, ClaimName, Email, Mobile, ResidentNo, OfficeNo, Address, AccidentDate, AccidentPlace, ClaimNature, Others);
        }
        
        public string GetDNC(string FirstName, string LastName, string StdCode, string PhoneNumber, string Mobile, string Email) {
            return base.Channel.GetDNC(FirstName, LastName, StdCode, PhoneNumber, Mobile, Email);
        }
        
        public System.Threading.Tasks.Task<string> GetDNCAsync(string FirstName, string LastName, string StdCode, string PhoneNumber, string Mobile, string Email) {
            return base.Channel.GetDNCAsync(FirstName, LastName, StdCode, PhoneNumber, Mobile, Email);
        }
        
        public string GetPolicyTerm(string Prodname, string EmailID) {
            return base.Channel.GetPolicyTerm(Prodname, EmailID);
        }
        
        public System.Threading.Tasks.Task<string> GetPolicyTermAsync(string Prodname, string EmailID) {
            return base.Channel.GetPolicyTermAsync(Prodname, EmailID);
        }
        
        public string GetClaimForm(string Prodname, string EmailID) {
            return base.Channel.GetClaimForm(Prodname, EmailID);
        }
        
        public System.Threading.Tasks.Task<string> GetClaimFormAsync(string Prodname, string EmailID) {
            return base.Channel.GetClaimFormAsync(Prodname, EmailID);
        }
        
        public string GetCustomerEmail(string Title, string Name, string Email, string ContactNumber, string Mobile, string ExistingCustomer, string policyno, string comments, string city, string product, string datafrom) {
            return base.Channel.GetCustomerEmail(Title, Name, Email, ContactNumber, Mobile, ExistingCustomer, policyno, comments, city, product, datafrom);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerEmailAsync(string Title, string Name, string Email, string ContactNumber, string Mobile, string ExistingCustomer, string policyno, string comments, string city, string product, string datafrom) {
            return base.Channel.GetCustomerEmailAsync(Title, Name, Email, ContactNumber, Mobile, ExistingCustomer, policyno, comments, city, product, datafrom);
        }
        
        public Carwale.BL.RoyalSundaram.Branches LoadBranches(string BranchName) {
            return base.Channel.LoadBranches(BranchName);
        }
        
        public System.Threading.Tasks.Task<Carwale.BL.RoyalSundaram.Branches> LoadBranchesAsync(string BranchName) {
            return base.Channel.LoadBranchesAsync(BranchName);
        }
        
        public System.Data.DataSet LoadCashlessHospitalLists(string State, string City, string Category, string HospitalName, string Pincode) {
            return base.Channel.LoadCashlessHospitalLists(State, City, Category, HospitalName, Pincode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadCashlessHospitalListsAsync(string State, string City, string Category, string HospitalName, string Pincode) {
            return base.Channel.LoadCashlessHospitalListsAsync(State, City, Category, HospitalName, Pincode);
        }
        
        public System.Data.DataSet LoadStates() {
            return base.Channel.LoadStates();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadStatesAsync() {
            return base.Channel.LoadStatesAsync();
        }
        
        public System.Data.DataSet LoadCities(string StateName) {
            return base.Channel.LoadCities(StateName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadCitiesAsync(string StateName) {
            return base.Channel.LoadCitiesAsync(StateName);
        }
        
        public System.Data.DataSet LoadHospitals(string StateName, string CityName, string Category) {
            return base.Channel.LoadHospitals(StateName, CityName, Category);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadHospitalsAsync(string StateName, string CityName, string Category) {
            return base.Channel.LoadHospitalsAsync(StateName, CityName, Category);
        }
        
        public System.Data.DataSet Load_GStates() {
            return base.Channel.Load_GStates();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Load_GStatesAsync() {
            return base.Channel.Load_GStatesAsync();
        }
        
        public System.Data.DataSet Load_GDistrict(string StateId) {
            return base.Channel.Load_GDistrict(StateId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Load_GDistrictAsync(string StateId) {
            return base.Channel.Load_GDistrictAsync(StateId);
        }
    }
}
