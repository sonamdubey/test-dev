// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offers.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Offers.Protos.ProtoFiles {

  /// <summary>Holder for reflection information generated from offers.proto</summary>
  public static partial class OffersReflection {

    #region Descriptor
    /// <summary>File descriptor for offers.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OffersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxvZmZlcnMucHJvdG8aE29mZmVyc19jb21tb24ucHJvdG8ipAEKCk9mZmVy",
            "R3JvdXASCgoCSWQYASABKAUSDAoETmFtZRgCIAEoCRIOCgZNYWtlSWQYAyAB",
            "KAUSFQoNQXBwbGljYXRpb25JZBgEIAEoBRIbChNIYXNPbGRSdW5uaW5nT2Zm",
            "ZXJzGAUgASgIEh0KFUhhc0N1cnJlbnRNb250aE9mZmVycxgGIAEoCBIZChFI",
            "YXNFeHRlbmRlZE9mZmVycxgHIAEoCCKtAQoFT2ZmZXISCgoCSWQYASABKAUS",
            "DwoHSGVhZGluZxgCIAEoCRIRCglTdGFydERhdGUYAyABKAkSDwoHRW5kRGF0",
            "ZRgEIAEoCRITCgtDYWxsT3V0TGluZRgFIAEoCRISCgpEaXNjbGFpbWVyGAYg",
            "ASgJEhAKCElzQWN0aXZlGAcgASgIEhQKDE9mZmVyR3JvdXBJZBgIIAEoBRIS",
            "CgpJc0V4dGVuZGVkGAkgASgIIjUKDk9mZmVyR3JvdXBMaXN0EiMKDkxpc3RP",
            "ZmZlckdyb3VwGAEgAygLMgsuT2ZmZXJHcm91cCImCglPZmZlckxpc3QSGQoJ",
            "TGlzdE9mZmVyGAEgAygLMgYuT2ZmZXIiXgoUT2ZmZXJDYXRlZ29yeU1hcHBp",
            "bmcSDwoHT2ZmZXJJZBgBIAEoBRISCgpDYXRlZ29yeUlkGAIgASgFEhEKCU9m",
            "ZmVyVGV4dBgDIAEoCRIOCgZBbW91bnQYBCABKAUiUwoYT2ZmZXJDYXRlZ29y",
            "eU1hcHBpbmdMaXN0EjcKGExpc3RPZmZlckNhdGVnb3J5TWFwcGluZxgBIAMo",
            "CzIVLk9mZmVyQ2F0ZWdvcnlNYXBwaW5nIlYKDkNhdGVnb3J5TWFzdGVyEgoK",
            "AklkGAEgASgFEgwKBE5hbWUYAiABKAkSEQoJU29ydE9yZGVyGAMgASgFEhcK",
            "D09yaWdpbmFsSW1nUGF0aBgEIAEoCSJBChJDYXRlZ29yeU1hc3Rlckxpc3QS",
            "KwoSTGlzdENhdGVnb3J5TWFzdGVyGAEgAygLMg8uQ2F0ZWdvcnlNYXN0ZXIi",
            "WQoEUnVsZRIKCgJJZBgBIAEoBRIVCg1Nb2R1bGVFbnRyeUlkGAIgASgFEhUK",
            "DUFwcGxpY2F0aW9uSWQYAyABKAUSFwoGTW9kdWxlGAQgASgOMgcuTW9kdWxl",
            "Ik8KCU1vZGVsUnVsZRIOCgZSdWxlSWQYASABKAUSDgoGTWFrZUlkGAIgASgF",
            "Eg8KB01vZGVsSWQYAyABKAUSEQoJVmVyc2lvbklkGAQgASgFIjMKDU1vZGVs",
            "UnVsZUxpc3QSIgoOTGlzdE1vZGVsUnVsZXMYASADKAsyCi5Nb2RlbFJ1bGUi",
            "OwoIQ2l0eVJ1bGUSDgoGUnVsZUlkGAEgASgFEg8KB1N0YXRlSWQYAiABKAUS",
            "DgoGQ2l0eUlkGAMgASgFIjAKDENpdHlSdWxlTGlzdBIgCg1MaXN0Q2l0eVJ1",
            "bGVzGAEgAygLMgkuQ2l0eVJ1bGUikQEKC09mZmVyRGV0YWlsEg8KB09mZmVy",
            "SWQYASABKAUSDwoHSGVhZGluZxgCIAEoCRITCgtDYWxsT3V0TGluZRgDIAEo",
            "CRIRCglTdGFydERhdGUYBCABKAkSDwoHRW5kRGF0ZRgFIAEoCRIXCg9PZmZl",
            "ckNhdGVnb3JpZXMYBiADKAkSDgoGUnVsZUlkGAcgASgFIjgKD09mZmVyRGV0",
            "YWlsTGlzdBIlCg9MaXN0T2ZmZXJEZXRhaWwYASADKAsyDC5PZmZlckRldGFp",
            "bCKwAQoJT2ZmZXJSdWxlEhsKC09mZmVyRGV0YWlsGAEgASgLMgYuT2ZmZXIS",
            "IgoKTW9kZWxSdWxlcxgCIAEoCzIOLk1vZGVsUnVsZUxpc3QSIAoJQ2l0eVJ1",
            "bGVzGAMgASgLMg0uQ2l0eVJ1bGVMaXN0Ei0KCkNhdGVnb3JpZXMYBCABKAsy",
            "GS5PZmZlckNhdGVnb3J5TWFwcGluZ0xpc3QSEQoJVXBkYXRlZEJ5GAUgASgJ",
            "IqIBChpPZmZlckNyZWF0aW9uU3VjY2Vzc1N0YXR1cxIUCgxPZmZlckNyZWF0",
            "ZWQYASABKAgSGQoRUnVsZU1hc3RlckNyZWF0ZWQYAiABKAgSGQoRTW9kZWxS",
            "dWxlc0NyZWF0ZWQYAyABKAgSGAoQQ2l0eVJ1bGVzQ3JlYXRlZBgEIAEoCBIe",
            "ChZDYXRlZ29yeU1hcHBpbmdDcmVhdGVkGAUgASgIImMKDkNhdGVnb3J5RGV0",
            "YWlsEiEKCENhdGVnb3J5GAEgASgLMg8uQ2F0ZWdvcnlNYXN0ZXISLgoPQ2F0",
            "ZWdvcnlNYXBwaW5nGAIgASgLMhUuT2ZmZXJDYXRlZ29yeU1hcHBpbmciYAoX",
            "T2ZmZXJXaXRoQ2F0ZWdvcnlEZXRhaWwSGwoLT2ZmZXJEZXRhaWwYASABKAsy",
            "Bi5PZmZlchIoCg9DYXRlZ29yeURldGFpbHMYAiADKAsyDy5DYXRlZ29yeURl",
            "dGFpbCJcChtPZmZlcldpdGhDYXRlZ29yeURldGFpbExpc3QSPQobTGlzdE9m",
            "ZmVyV2l0aENhdGVnb3J5RGV0YWlsGAEgAygLMhguT2ZmZXJXaXRoQ2F0ZWdv",
            "cnlEZXRhaWwifgoNT2ZmZXJDcml0ZXJpYRIbCghDaXR5UnVsZRgBIAEoCzIJ",
            "LkNpdHlSdWxlEh0KCU1vZGVsUnVsZRgCIAEoCzIKLk1vZGVsUnVsZRIVCg1B",
            "cHBsaWNhdGlvbklkGAMgASgFEhoKElJlcXVpcmVkT2ZmZXJDb3VudBgEIAEo",
            "BSI+ChFPZmZlckNyaXRlcmlhTGlzdBIpChFMaXN0T2ZmZXJDcml0ZXJpYRgB",
            "IAMoCzIOLk9mZmVyQ3JpdGVyaWEiGwoNVmVyc2lvbklkTGlzdBIKCgJJZBgB",
            "IAMoBSJrChdPZmZlckF2YWlsYWJpbHR5RGV0YWlscxIPCgdNb2RlbElkGAEg",
            "ASgFEg4KBkNpdHlJZBgCIAEoBRIYChBJc09mZmVyQXZhaWxhYmxlGAMgASgI",
            "EhUKDUFwcGxpY2F0aW9uSWQYBCABKAUiXAobT2ZmZXJBdmFpbGFiaWx0eURl",
            "dGFpbHNMaXN0Ej0KG0xpc3RPZmZlckF2YWlsYWJpbHR5RGV0YWlscxgBIAMo",
            "CzIYLk9mZmVyQXZhaWxhYmlsdHlEZXRhaWxzKhQKBk1vZHVsZRIKCgZPZmZl",
            "cnMQADLbBwoHSU9mZmVycxImChBDcmVhdGVPZmZlckdyb3VwEgsuT2ZmZXJH",
            "cm91cBoDLklkIgASLwoQVXBkYXRlT2ZmZXJHcm91cBILLk9mZmVyR3JvdXAa",
            "DC5Cb29sTWVzc2FnZSIAEi8KEERlbGV0ZU9mZmVyR3JvdXASCy5EZWxldGVJ",
            "dGVtGgwuQm9vbE1lc3NhZ2UiABIjCg1HZXRPZmZlckdyb3VwEgMuSWQaCy5P",
            "ZmZlckdyb3VwIgASMgoQR2V0QWxsT2ZmZXJHcm91cBILLkVtcHR5UGFyYW0a",
            "Dy5PZmZlckdyb3VwTGlzdCIAEj0KEENyZWF0ZU9mZmVyUnVsZXMSCi5PZmZl",
            "clJ1bGUaGy5PZmZlckNyZWF0aW9uU3VjY2Vzc1N0YXR1cyIAEj0KEFVwZGF0",
            "ZU9mZmVyUnVsZXMSCi5PZmZlclJ1bGUaGy5PZmZlckNyZWF0aW9uU3VjY2Vz",
            "c1N0YXR1cyIAEjgKHUdldE9mZmVyRGV0YWlsc0J5T2ZmZXJHcm91cElkEgMu",
            "SWQaEC5PZmZlckRldGFpbExpc3QiABIdCgxHZXRPZmZlckJ5SWQSAy5JZBoG",
            "Lk9mZmVyIgASKwoWR2V0T2ZmZXJCeU9mZmVyR3JvdXBJZBIDLklkGgouT2Zm",
            "ZXJMaXN0IgASRQoTR2V0T2ZmZXJzT25Dcml0ZXJpYRIOLk9mZmVyQ3JpdGVy",
            "aWEaHC5PZmZlcldpdGhDYXRlZ29yeURldGFpbExpc3QiABIqCgtEZWxldGVP",
            "ZmZlchILLkRlbGV0ZUl0ZW0aDC5Cb29sTWVzc2FnZSIAEkQKIEdldE9mZmVy",
            "Q2F0ZWdvcnlNYXBwaW5nQnlPZmZlcklkEgMuSWQaGS5PZmZlckNhdGVnb3J5",
            "TWFwcGluZ0xpc3QiABI6ChRHZXRBbGxDYXRlZ29yeU1hc3RlchILLkVtcHR5",
            "UGFyYW0aEy5DYXRlZ29yeU1hc3Rlckxpc3QiABIxChhHZXRBbGxNb2RlbFJ1",
            "bGVzQnlSdWxlSWQSAy5JZBoOLk1vZGVsUnVsZUxpc3QiABIvChdHZXRBbGxD",
            "aXR5UnVsZXNCeVJ1bGVJZBIDLklkGg0uQ2l0eVJ1bGVMaXN0IgASOQoVR2V0",
            "VmVyc2lvbnNXaXRoT2ZmZXJzEg4uT2ZmZXJDcml0ZXJpYRoOLlZlcnNpb25J",
            "ZExpc3QiABJVCh9DaGVja01vZGVsQ2l0eU9mZmVyQXZhaWxhYmlsaXR5EhIu",
            "T2ZmZXJDcml0ZXJpYUxpc3QaHC5PZmZlckF2YWlsYWJpbHR5RGV0YWlsc0xp",
            "c3QiAEIbqgIYT2ZmZXJzLlByb3Rvcy5Qcm90b0ZpbGVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Offers.Protos.ProtoFiles.OffersCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Offers.Protos.ProtoFiles.Module), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferGroup), global::Offers.Protos.ProtoFiles.OfferGroup.Parser, new[]{ "Id", "Name", "MakeId", "ApplicationId", "HasOldRunningOffers", "HasCurrentMonthOffers", "HasExtendedOffers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.Offer), global::Offers.Protos.ProtoFiles.Offer.Parser, new[]{ "Id", "Heading", "StartDate", "EndDate", "CallOutLine", "Disclaimer", "IsActive", "OfferGroupId", "IsExtended" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferGroupList), global::Offers.Protos.ProtoFiles.OfferGroupList.Parser, new[]{ "ListOfferGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferList), global::Offers.Protos.ProtoFiles.OfferList.Parser, new[]{ "ListOffer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferCategoryMapping), global::Offers.Protos.ProtoFiles.OfferCategoryMapping.Parser, new[]{ "OfferId", "CategoryId", "OfferText", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferCategoryMappingList), global::Offers.Protos.ProtoFiles.OfferCategoryMappingList.Parser, new[]{ "ListOfferCategoryMapping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.CategoryMaster), global::Offers.Protos.ProtoFiles.CategoryMaster.Parser, new[]{ "Id", "Name", "SortOrder", "OriginalImgPath" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.CategoryMasterList), global::Offers.Protos.ProtoFiles.CategoryMasterList.Parser, new[]{ "ListCategoryMaster" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.Rule), global::Offers.Protos.ProtoFiles.Rule.Parser, new[]{ "Id", "ModuleEntryId", "ApplicationId", "Module" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.ModelRule), global::Offers.Protos.ProtoFiles.ModelRule.Parser, new[]{ "RuleId", "MakeId", "ModelId", "VersionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.ModelRuleList), global::Offers.Protos.ProtoFiles.ModelRuleList.Parser, new[]{ "ListModelRules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.CityRule), global::Offers.Protos.ProtoFiles.CityRule.Parser, new[]{ "RuleId", "StateId", "CityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.CityRuleList), global::Offers.Protos.ProtoFiles.CityRuleList.Parser, new[]{ "ListCityRules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferDetail), global::Offers.Protos.ProtoFiles.OfferDetail.Parser, new[]{ "OfferId", "Heading", "CallOutLine", "StartDate", "EndDate", "OfferCategories", "RuleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferDetailList), global::Offers.Protos.ProtoFiles.OfferDetailList.Parser, new[]{ "ListOfferDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferRule), global::Offers.Protos.ProtoFiles.OfferRule.Parser, new[]{ "OfferDetail", "ModelRules", "CityRules", "Categories", "UpdatedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferCreationSuccessStatus), global::Offers.Protos.ProtoFiles.OfferCreationSuccessStatus.Parser, new[]{ "OfferCreated", "RuleMasterCreated", "ModelRulesCreated", "CityRulesCreated", "CategoryMappingCreated" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.CategoryDetail), global::Offers.Protos.ProtoFiles.CategoryDetail.Parser, new[]{ "Category", "CategoryMapping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferWithCategoryDetail), global::Offers.Protos.ProtoFiles.OfferWithCategoryDetail.Parser, new[]{ "OfferDetail", "CategoryDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferWithCategoryDetailList), global::Offers.Protos.ProtoFiles.OfferWithCategoryDetailList.Parser, new[]{ "ListOfferWithCategoryDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferCriteria), global::Offers.Protos.ProtoFiles.OfferCriteria.Parser, new[]{ "CityRule", "ModelRule", "ApplicationId", "RequiredOfferCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferCriteriaList), global::Offers.Protos.ProtoFiles.OfferCriteriaList.Parser, new[]{ "ListOfferCriteria" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.VersionIdList), global::Offers.Protos.ProtoFiles.VersionIdList.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetails), global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetails.Parser, new[]{ "ModelId", "CityId", "IsOfferAvailable", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetailsList), global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetailsList.Parser, new[]{ "ListOfferAvailabiltyDetails" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Module {
    [pbr::OriginalName("Offers")] Offers = 0,
  }

  #endregion

  #region Messages
  public sealed partial class OfferGroup : pb::IMessage<OfferGroup> {
    private static readonly pb::MessageParser<OfferGroup> _parser = new pb::MessageParser<OfferGroup>(() => new OfferGroup());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferGroup(OfferGroup other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      makeId_ = other.makeId_;
      applicationId_ = other.applicationId_;
      hasOldRunningOffers_ = other.hasOldRunningOffers_;
      hasCurrentMonthOffers_ = other.hasCurrentMonthOffers_;
      hasExtendedOffers_ = other.hasExtendedOffers_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferGroup Clone() {
      return new OfferGroup(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 3;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 4;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "HasOldRunningOffers" field.</summary>
    public const int HasOldRunningOffersFieldNumber = 5;
    private bool hasOldRunningOffers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOldRunningOffers {
      get { return hasOldRunningOffers_; }
      set {
        hasOldRunningOffers_ = value;
      }
    }

    /// <summary>Field number for the "HasCurrentMonthOffers" field.</summary>
    public const int HasCurrentMonthOffersFieldNumber = 6;
    private bool hasCurrentMonthOffers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrentMonthOffers {
      get { return hasCurrentMonthOffers_; }
      set {
        hasCurrentMonthOffers_ = value;
      }
    }

    /// <summary>Field number for the "HasExtendedOffers" field.</summary>
    public const int HasExtendedOffersFieldNumber = 7;
    private bool hasExtendedOffers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExtendedOffers {
      get { return hasExtendedOffers_; }
      set {
        hasExtendedOffers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (MakeId != other.MakeId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (HasOldRunningOffers != other.HasOldRunningOffers) return false;
      if (HasCurrentMonthOffers != other.HasCurrentMonthOffers) return false;
      if (HasExtendedOffers != other.HasExtendedOffers) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (HasOldRunningOffers != false) hash ^= HasOldRunningOffers.GetHashCode();
      if (HasCurrentMonthOffers != false) hash ^= HasCurrentMonthOffers.GetHashCode();
      if (HasExtendedOffers != false) hash ^= HasExtendedOffers.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (MakeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MakeId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ApplicationId);
      }
      if (HasOldRunningOffers != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasOldRunningOffers);
      }
      if (HasCurrentMonthOffers != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasCurrentMonthOffers);
      }
      if (HasExtendedOffers != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasExtendedOffers);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (HasOldRunningOffers != false) {
        size += 1 + 1;
      }
      if (HasCurrentMonthOffers != false) {
        size += 1 + 1;
      }
      if (HasExtendedOffers != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.HasOldRunningOffers != false) {
        HasOldRunningOffers = other.HasOldRunningOffers;
      }
      if (other.HasCurrentMonthOffers != false) {
        HasCurrentMonthOffers = other.HasCurrentMonthOffers;
      }
      if (other.HasExtendedOffers != false) {
        HasExtendedOffers = other.HasExtendedOffers;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            MakeId = input.ReadInt32();
            break;
          }
          case 32: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 40: {
            HasOldRunningOffers = input.ReadBool();
            break;
          }
          case 48: {
            HasCurrentMonthOffers = input.ReadBool();
            break;
          }
          case 56: {
            HasExtendedOffers = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Offer : pb::IMessage<Offer> {
    private static readonly pb::MessageParser<Offer> _parser = new pb::MessageParser<Offer>(() => new Offer());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Offer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer(Offer other) : this() {
      id_ = other.id_;
      heading_ = other.heading_;
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      callOutLine_ = other.callOutLine_;
      disclaimer_ = other.disclaimer_;
      isActive_ = other.isActive_;
      offerGroupId_ = other.offerGroupId_;
      isExtended_ = other.isExtended_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer Clone() {
      return new Offer(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Heading" field.</summary>
    public const int HeadingFieldNumber = 2;
    private string heading_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Heading {
      get { return heading_; }
      set {
        heading_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 3;
    private string startDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndDate" field.</summary>
    public const int EndDateFieldNumber = 4;
    private string endDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CallOutLine" field.</summary>
    public const int CallOutLineFieldNumber = 5;
    private string callOutLine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallOutLine {
      get { return callOutLine_; }
      set {
        callOutLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Disclaimer" field.</summary>
    public const int DisclaimerFieldNumber = 6;
    private string disclaimer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Disclaimer {
      get { return disclaimer_; }
      set {
        disclaimer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsActive" field.</summary>
    public const int IsActiveFieldNumber = 7;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "OfferGroupId" field.</summary>
    public const int OfferGroupIdFieldNumber = 8;
    private int offerGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferGroupId {
      get { return offerGroupId_; }
      set {
        offerGroupId_ = value;
      }
    }

    /// <summary>Field number for the "IsExtended" field.</summary>
    public const int IsExtendedFieldNumber = 9;
    private bool isExtended_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExtended {
      get { return isExtended_; }
      set {
        isExtended_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Offer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Offer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Heading != other.Heading) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if (CallOutLine != other.CallOutLine) return false;
      if (Disclaimer != other.Disclaimer) return false;
      if (IsActive != other.IsActive) return false;
      if (OfferGroupId != other.OfferGroupId) return false;
      if (IsExtended != other.IsExtended) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Heading.Length != 0) hash ^= Heading.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
      if (CallOutLine.Length != 0) hash ^= CallOutLine.GetHashCode();
      if (Disclaimer.Length != 0) hash ^= Disclaimer.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (OfferGroupId != 0) hash ^= OfferGroupId.GetHashCode();
      if (IsExtended != false) hash ^= IsExtended.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Heading.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Heading);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndDate);
      }
      if (CallOutLine.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CallOutLine);
      }
      if (Disclaimer.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Disclaimer);
      }
      if (IsActive != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsActive);
      }
      if (OfferGroupId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(OfferGroupId);
      }
      if (IsExtended != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsExtended);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Heading.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Heading);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (EndDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
      }
      if (CallOutLine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallOutLine);
      }
      if (Disclaimer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Disclaimer);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (OfferGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferGroupId);
      }
      if (IsExtended != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Offer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Heading.Length != 0) {
        Heading = other.Heading;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.EndDate.Length != 0) {
        EndDate = other.EndDate;
      }
      if (other.CallOutLine.Length != 0) {
        CallOutLine = other.CallOutLine;
      }
      if (other.Disclaimer.Length != 0) {
        Disclaimer = other.Disclaimer;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.OfferGroupId != 0) {
        OfferGroupId = other.OfferGroupId;
      }
      if (other.IsExtended != false) {
        IsExtended = other.IsExtended;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Heading = input.ReadString();
            break;
          }
          case 26: {
            StartDate = input.ReadString();
            break;
          }
          case 34: {
            EndDate = input.ReadString();
            break;
          }
          case 42: {
            CallOutLine = input.ReadString();
            break;
          }
          case 50: {
            Disclaimer = input.ReadString();
            break;
          }
          case 56: {
            IsActive = input.ReadBool();
            break;
          }
          case 64: {
            OfferGroupId = input.ReadInt32();
            break;
          }
          case 72: {
            IsExtended = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferGroupList : pb::IMessage<OfferGroupList> {
    private static readonly pb::MessageParser<OfferGroupList> _parser = new pb::MessageParser<OfferGroupList>(() => new OfferGroupList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferGroupList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferGroupList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferGroupList(OfferGroupList other) : this() {
      listOfferGroup_ = other.listOfferGroup_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferGroupList Clone() {
      return new OfferGroupList(this);
    }

    /// <summary>Field number for the "ListOfferGroup" field.</summary>
    public const int ListOfferGroupFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.OfferGroup> _repeated_listOfferGroup_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.OfferGroup.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferGroup> listOfferGroup_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferGroup> ListOfferGroup {
      get { return listOfferGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferGroupList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferGroupList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfferGroup_.Equals(other.listOfferGroup_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfferGroup_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listOfferGroup_.WriteTo(output, _repeated_listOfferGroup_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfferGroup_.CalculateSize(_repeated_listOfferGroup_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferGroupList other) {
      if (other == null) {
        return;
      }
      listOfferGroup_.Add(other.listOfferGroup_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listOfferGroup_.AddEntriesFrom(input, _repeated_listOfferGroup_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferList : pb::IMessage<OfferList> {
    private static readonly pb::MessageParser<OfferList> _parser = new pb::MessageParser<OfferList>(() => new OfferList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferList(OfferList other) : this() {
      listOffer_ = other.listOffer_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferList Clone() {
      return new OfferList(this);
    }

    /// <summary>Field number for the "ListOffer" field.</summary>
    public const int ListOfferFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.Offer> _repeated_listOffer_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.Offer.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.Offer> listOffer_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.Offer> ListOffer {
      get { return listOffer_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOffer_.Equals(other.listOffer_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOffer_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listOffer_.WriteTo(output, _repeated_listOffer_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOffer_.CalculateSize(_repeated_listOffer_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferList other) {
      if (other == null) {
        return;
      }
      listOffer_.Add(other.listOffer_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listOffer_.AddEntriesFrom(input, _repeated_listOffer_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferCategoryMapping : pb::IMessage<OfferCategoryMapping> {
    private static readonly pb::MessageParser<OfferCategoryMapping> _parser = new pb::MessageParser<OfferCategoryMapping>(() => new OfferCategoryMapping());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferCategoryMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCategoryMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCategoryMapping(OfferCategoryMapping other) : this() {
      offerId_ = other.offerId_;
      categoryId_ = other.categoryId_;
      offerText_ = other.offerText_;
      amount_ = other.amount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCategoryMapping Clone() {
      return new OfferCategoryMapping(this);
    }

    /// <summary>Field number for the "OfferId" field.</summary>
    public const int OfferIdFieldNumber = 1;
    private int offerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferId {
      get { return offerId_; }
      set {
        offerId_ = value;
      }
    }

    /// <summary>Field number for the "CategoryId" field.</summary>
    public const int CategoryIdFieldNumber = 2;
    private int categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "OfferText" field.</summary>
    public const int OfferTextFieldNumber = 3;
    private string offerText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferText {
      get { return offerText_; }
      set {
        offerText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferCategoryMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferCategoryMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferId != other.OfferId) return false;
      if (CategoryId != other.CategoryId) return false;
      if (OfferText != other.OfferText) return false;
      if (Amount != other.Amount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferId != 0) hash ^= OfferId.GetHashCode();
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (OfferText.Length != 0) hash ^= OfferText.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OfferId);
      }
      if (CategoryId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CategoryId);
      }
      if (OfferText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OfferText);
      }
      if (Amount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferId);
      }
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (OfferText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferText);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferCategoryMapping other) {
      if (other == null) {
        return;
      }
      if (other.OfferId != 0) {
        OfferId = other.OfferId;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.OfferText.Length != 0) {
        OfferText = other.OfferText;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OfferId = input.ReadInt32();
            break;
          }
          case 16: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 26: {
            OfferText = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferCategoryMappingList : pb::IMessage<OfferCategoryMappingList> {
    private static readonly pb::MessageParser<OfferCategoryMappingList> _parser = new pb::MessageParser<OfferCategoryMappingList>(() => new OfferCategoryMappingList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferCategoryMappingList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCategoryMappingList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCategoryMappingList(OfferCategoryMappingList other) : this() {
      listOfferCategoryMapping_ = other.listOfferCategoryMapping_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCategoryMappingList Clone() {
      return new OfferCategoryMappingList(this);
    }

    /// <summary>Field number for the "ListOfferCategoryMapping" field.</summary>
    public const int ListOfferCategoryMappingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.OfferCategoryMapping> _repeated_listOfferCategoryMapping_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.OfferCategoryMapping.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferCategoryMapping> listOfferCategoryMapping_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferCategoryMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferCategoryMapping> ListOfferCategoryMapping {
      get { return listOfferCategoryMapping_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferCategoryMappingList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferCategoryMappingList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfferCategoryMapping_.Equals(other.listOfferCategoryMapping_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfferCategoryMapping_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listOfferCategoryMapping_.WriteTo(output, _repeated_listOfferCategoryMapping_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfferCategoryMapping_.CalculateSize(_repeated_listOfferCategoryMapping_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferCategoryMappingList other) {
      if (other == null) {
        return;
      }
      listOfferCategoryMapping_.Add(other.listOfferCategoryMapping_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listOfferCategoryMapping_.AddEntriesFrom(input, _repeated_listOfferCategoryMapping_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryMaster : pb::IMessage<CategoryMaster> {
    private static readonly pb::MessageParser<CategoryMaster> _parser = new pb::MessageParser<CategoryMaster>(() => new CategoryMaster());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryMaster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMaster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMaster(CategoryMaster other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      sortOrder_ = other.sortOrder_;
      originalImgPath_ = other.originalImgPath_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMaster Clone() {
      return new CategoryMaster(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SortOrder" field.</summary>
    public const int SortOrderFieldNumber = 3;
    private int sortOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SortOrder {
      get { return sortOrder_; }
      set {
        sortOrder_ = value;
      }
    }

    /// <summary>Field number for the "OriginalImgPath" field.</summary>
    public const int OriginalImgPathFieldNumber = 4;
    private string originalImgPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalImgPath {
      get { return originalImgPath_; }
      set {
        originalImgPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryMaster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryMaster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (SortOrder != other.SortOrder) return false;
      if (OriginalImgPath != other.OriginalImgPath) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SortOrder != 0) hash ^= SortOrder.GetHashCode();
      if (OriginalImgPath.Length != 0) hash ^= OriginalImgPath.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (SortOrder != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SortOrder);
      }
      if (OriginalImgPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OriginalImgPath);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SortOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SortOrder);
      }
      if (OriginalImgPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalImgPath);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryMaster other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SortOrder != 0) {
        SortOrder = other.SortOrder;
      }
      if (other.OriginalImgPath.Length != 0) {
        OriginalImgPath = other.OriginalImgPath;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            SortOrder = input.ReadInt32();
            break;
          }
          case 34: {
            OriginalImgPath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryMasterList : pb::IMessage<CategoryMasterList> {
    private static readonly pb::MessageParser<CategoryMasterList> _parser = new pb::MessageParser<CategoryMasterList>(() => new CategoryMasterList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryMasterList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMasterList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMasterList(CategoryMasterList other) : this() {
      listCategoryMaster_ = other.listCategoryMaster_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMasterList Clone() {
      return new CategoryMasterList(this);
    }

    /// <summary>Field number for the "ListCategoryMaster" field.</summary>
    public const int ListCategoryMasterFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.CategoryMaster> _repeated_listCategoryMaster_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.CategoryMaster.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CategoryMaster> listCategoryMaster_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CategoryMaster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CategoryMaster> ListCategoryMaster {
      get { return listCategoryMaster_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryMasterList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryMasterList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listCategoryMaster_.Equals(other.listCategoryMaster_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listCategoryMaster_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listCategoryMaster_.WriteTo(output, _repeated_listCategoryMaster_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listCategoryMaster_.CalculateSize(_repeated_listCategoryMaster_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryMasterList other) {
      if (other == null) {
        return;
      }
      listCategoryMaster_.Add(other.listCategoryMaster_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listCategoryMaster_.AddEntriesFrom(input, _repeated_listCategoryMaster_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rule : pb::IMessage<Rule> {
    private static readonly pb::MessageParser<Rule> _parser = new pb::MessageParser<Rule>(() => new Rule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule(Rule other) : this() {
      id_ = other.id_;
      moduleEntryId_ = other.moduleEntryId_;
      applicationId_ = other.applicationId_;
      module_ = other.module_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule Clone() {
      return new Rule(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ModuleEntryId" field.</summary>
    public const int ModuleEntryIdFieldNumber = 2;
    private int moduleEntryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModuleEntryId {
      get { return moduleEntryId_; }
      set {
        moduleEntryId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "Module" field.</summary>
    public const int ModuleFieldNumber = 4;
    private global::Offers.Protos.ProtoFiles.Module module_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.Module Module {
      get { return module_; }
      set {
        module_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ModuleEntryId != other.ModuleEntryId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (Module != other.Module) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ModuleEntryId != 0) hash ^= ModuleEntryId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (Module != 0) hash ^= Module.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ModuleEntryId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModuleEntryId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApplicationId);
      }
      if (Module != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Module);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ModuleEntryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModuleEntryId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (Module != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Module);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rule other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ModuleEntryId != 0) {
        ModuleEntryId = other.ModuleEntryId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Module != 0) {
        Module = other.Module;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ModuleEntryId = input.ReadInt32();
            break;
          }
          case 24: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 32: {
            module_ = (global::Offers.Protos.ProtoFiles.Module) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelRule : pb::IMessage<ModelRule> {
    private static readonly pb::MessageParser<ModelRule> _parser = new pb::MessageParser<ModelRule>(() => new ModelRule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRule(ModelRule other) : this() {
      ruleId_ = other.ruleId_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRule Clone() {
      return new ModelRule(this);
    }

    /// <summary>Field number for the "RuleId" field.</summary>
    public const int RuleIdFieldNumber = 1;
    private int ruleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuleId {
      get { return ruleId_; }
      set {
        ruleId_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 2;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 3;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "VersionId" field.</summary>
    public const int VersionIdFieldNumber = 4;
    private int versionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionId {
      get { return versionId_; }
      set {
        versionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RuleId != other.RuleId) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RuleId != 0) hash ^= RuleId.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (VersionId != 0) hash ^= VersionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RuleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RuleId);
      }
      if (MakeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ModelId);
      }
      if (VersionId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(VersionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RuleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RuleId);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (VersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelRule other) {
      if (other == null) {
        return;
      }
      if (other.RuleId != 0) {
        RuleId = other.RuleId;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId != 0) {
        VersionId = other.VersionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RuleId = input.ReadInt32();
            break;
          }
          case 16: {
            MakeId = input.ReadInt32();
            break;
          }
          case 24: {
            ModelId = input.ReadInt32();
            break;
          }
          case 32: {
            VersionId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelRuleList : pb::IMessage<ModelRuleList> {
    private static readonly pb::MessageParser<ModelRuleList> _parser = new pb::MessageParser<ModelRuleList>(() => new ModelRuleList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelRuleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRuleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRuleList(ModelRuleList other) : this() {
      listModelRules_ = other.listModelRules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRuleList Clone() {
      return new ModelRuleList(this);
    }

    /// <summary>Field number for the "ListModelRules" field.</summary>
    public const int ListModelRulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.ModelRule> _repeated_listModelRules_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.ModelRule.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.ModelRule> listModelRules_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.ModelRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.ModelRule> ListModelRules {
      get { return listModelRules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelRuleList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelRuleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listModelRules_.Equals(other.listModelRules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listModelRules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listModelRules_.WriteTo(output, _repeated_listModelRules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listModelRules_.CalculateSize(_repeated_listModelRules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelRuleList other) {
      if (other == null) {
        return;
      }
      listModelRules_.Add(other.listModelRules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listModelRules_.AddEntriesFrom(input, _repeated_listModelRules_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CityRule : pb::IMessage<CityRule> {
    private static readonly pb::MessageParser<CityRule> _parser = new pb::MessageParser<CityRule>(() => new CityRule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CityRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityRule(CityRule other) : this() {
      ruleId_ = other.ruleId_;
      stateId_ = other.stateId_;
      cityId_ = other.cityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityRule Clone() {
      return new CityRule(this);
    }

    /// <summary>Field number for the "RuleId" field.</summary>
    public const int RuleIdFieldNumber = 1;
    private int ruleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuleId {
      get { return ruleId_; }
      set {
        ruleId_ = value;
      }
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 2;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 3;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CityRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CityRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RuleId != other.RuleId) return false;
      if (StateId != other.StateId) return false;
      if (CityId != other.CityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RuleId != 0) hash ^= RuleId.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RuleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RuleId);
      }
      if (StateId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StateId);
      }
      if (CityId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RuleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RuleId);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CityRule other) {
      if (other == null) {
        return;
      }
      if (other.RuleId != 0) {
        RuleId = other.RuleId;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RuleId = input.ReadInt32();
            break;
          }
          case 16: {
            StateId = input.ReadInt32();
            break;
          }
          case 24: {
            CityId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CityRuleList : pb::IMessage<CityRuleList> {
    private static readonly pb::MessageParser<CityRuleList> _parser = new pb::MessageParser<CityRuleList>(() => new CityRuleList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CityRuleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityRuleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityRuleList(CityRuleList other) : this() {
      listCityRules_ = other.listCityRules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityRuleList Clone() {
      return new CityRuleList(this);
    }

    /// <summary>Field number for the "ListCityRules" field.</summary>
    public const int ListCityRulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.CityRule> _repeated_listCityRules_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.CityRule.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CityRule> listCityRules_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CityRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CityRule> ListCityRules {
      get { return listCityRules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CityRuleList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CityRuleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listCityRules_.Equals(other.listCityRules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listCityRules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listCityRules_.WriteTo(output, _repeated_listCityRules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listCityRules_.CalculateSize(_repeated_listCityRules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CityRuleList other) {
      if (other == null) {
        return;
      }
      listCityRules_.Add(other.listCityRules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listCityRules_.AddEntriesFrom(input, _repeated_listCityRules_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferDetail : pb::IMessage<OfferDetail> {
    private static readonly pb::MessageParser<OfferDetail> _parser = new pb::MessageParser<OfferDetail>(() => new OfferDetail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferDetail(OfferDetail other) : this() {
      offerId_ = other.offerId_;
      heading_ = other.heading_;
      callOutLine_ = other.callOutLine_;
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      offerCategories_ = other.offerCategories_.Clone();
      ruleId_ = other.ruleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferDetail Clone() {
      return new OfferDetail(this);
    }

    /// <summary>Field number for the "OfferId" field.</summary>
    public const int OfferIdFieldNumber = 1;
    private int offerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferId {
      get { return offerId_; }
      set {
        offerId_ = value;
      }
    }

    /// <summary>Field number for the "Heading" field.</summary>
    public const int HeadingFieldNumber = 2;
    private string heading_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Heading {
      get { return heading_; }
      set {
        heading_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CallOutLine" field.</summary>
    public const int CallOutLineFieldNumber = 3;
    private string callOutLine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallOutLine {
      get { return callOutLine_; }
      set {
        callOutLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 4;
    private string startDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndDate" field.</summary>
    public const int EndDateFieldNumber = 5;
    private string endDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferCategories" field.</summary>
    public const int OfferCategoriesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_offerCategories_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> offerCategories_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OfferCategories {
      get { return offerCategories_; }
    }

    /// <summary>Field number for the "RuleId" field.</summary>
    public const int RuleIdFieldNumber = 7;
    private int ruleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuleId {
      get { return ruleId_; }
      set {
        ruleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferId != other.OfferId) return false;
      if (Heading != other.Heading) return false;
      if (CallOutLine != other.CallOutLine) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if(!offerCategories_.Equals(other.offerCategories_)) return false;
      if (RuleId != other.RuleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferId != 0) hash ^= OfferId.GetHashCode();
      if (Heading.Length != 0) hash ^= Heading.GetHashCode();
      if (CallOutLine.Length != 0) hash ^= CallOutLine.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
      hash ^= offerCategories_.GetHashCode();
      if (RuleId != 0) hash ^= RuleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OfferId);
      }
      if (Heading.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Heading);
      }
      if (CallOutLine.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CallOutLine);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EndDate);
      }
      offerCategories_.WriteTo(output, _repeated_offerCategories_codec);
      if (RuleId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RuleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferId);
      }
      if (Heading.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Heading);
      }
      if (CallOutLine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallOutLine);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (EndDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
      }
      size += offerCategories_.CalculateSize(_repeated_offerCategories_codec);
      if (RuleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RuleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferDetail other) {
      if (other == null) {
        return;
      }
      if (other.OfferId != 0) {
        OfferId = other.OfferId;
      }
      if (other.Heading.Length != 0) {
        Heading = other.Heading;
      }
      if (other.CallOutLine.Length != 0) {
        CallOutLine = other.CallOutLine;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.EndDate.Length != 0) {
        EndDate = other.EndDate;
      }
      offerCategories_.Add(other.offerCategories_);
      if (other.RuleId != 0) {
        RuleId = other.RuleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OfferId = input.ReadInt32();
            break;
          }
          case 18: {
            Heading = input.ReadString();
            break;
          }
          case 26: {
            CallOutLine = input.ReadString();
            break;
          }
          case 34: {
            StartDate = input.ReadString();
            break;
          }
          case 42: {
            EndDate = input.ReadString();
            break;
          }
          case 50: {
            offerCategories_.AddEntriesFrom(input, _repeated_offerCategories_codec);
            break;
          }
          case 56: {
            RuleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferDetailList : pb::IMessage<OfferDetailList> {
    private static readonly pb::MessageParser<OfferDetailList> _parser = new pb::MessageParser<OfferDetailList>(() => new OfferDetailList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferDetailList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferDetailList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferDetailList(OfferDetailList other) : this() {
      listOfferDetail_ = other.listOfferDetail_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferDetailList Clone() {
      return new OfferDetailList(this);
    }

    /// <summary>Field number for the "ListOfferDetail" field.</summary>
    public const int ListOfferDetailFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.OfferDetail> _repeated_listOfferDetail_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.OfferDetail.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferDetail> listOfferDetail_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferDetail> ListOfferDetail {
      get { return listOfferDetail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferDetailList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferDetailList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfferDetail_.Equals(other.listOfferDetail_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfferDetail_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listOfferDetail_.WriteTo(output, _repeated_listOfferDetail_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfferDetail_.CalculateSize(_repeated_listOfferDetail_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferDetailList other) {
      if (other == null) {
        return;
      }
      listOfferDetail_.Add(other.listOfferDetail_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listOfferDetail_.AddEntriesFrom(input, _repeated_listOfferDetail_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferRule : pb::IMessage<OfferRule> {
    private static readonly pb::MessageParser<OfferRule> _parser = new pb::MessageParser<OfferRule>(() => new OfferRule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferRule(OfferRule other) : this() {
      OfferDetail = other.offerDetail_ != null ? other.OfferDetail.Clone() : null;
      ModelRules = other.modelRules_ != null ? other.ModelRules.Clone() : null;
      CityRules = other.cityRules_ != null ? other.CityRules.Clone() : null;
      Categories = other.categories_ != null ? other.Categories.Clone() : null;
      updatedBy_ = other.updatedBy_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferRule Clone() {
      return new OfferRule(this);
    }

    /// <summary>Field number for the "OfferDetail" field.</summary>
    public const int OfferDetailFieldNumber = 1;
    private global::Offers.Protos.ProtoFiles.Offer offerDetail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.Offer OfferDetail {
      get { return offerDetail_; }
      set {
        offerDetail_ = value;
      }
    }

    /// <summary>Field number for the "ModelRules" field.</summary>
    public const int ModelRulesFieldNumber = 2;
    private global::Offers.Protos.ProtoFiles.ModelRuleList modelRules_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.ModelRuleList ModelRules {
      get { return modelRules_; }
      set {
        modelRules_ = value;
      }
    }

    /// <summary>Field number for the "CityRules" field.</summary>
    public const int CityRulesFieldNumber = 3;
    private global::Offers.Protos.ProtoFiles.CityRuleList cityRules_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.CityRuleList CityRules {
      get { return cityRules_; }
      set {
        cityRules_ = value;
      }
    }

    /// <summary>Field number for the "Categories" field.</summary>
    public const int CategoriesFieldNumber = 4;
    private global::Offers.Protos.ProtoFiles.OfferCategoryMappingList categories_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.OfferCategoryMappingList Categories {
      get { return categories_; }
      set {
        categories_ = value;
      }
    }

    /// <summary>Field number for the "UpdatedBy" field.</summary>
    public const int UpdatedByFieldNumber = 5;
    private string updatedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedBy {
      get { return updatedBy_; }
      set {
        updatedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OfferDetail, other.OfferDetail)) return false;
      if (!object.Equals(ModelRules, other.ModelRules)) return false;
      if (!object.Equals(CityRules, other.CityRules)) return false;
      if (!object.Equals(Categories, other.Categories)) return false;
      if (UpdatedBy != other.UpdatedBy) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (offerDetail_ != null) hash ^= OfferDetail.GetHashCode();
      if (modelRules_ != null) hash ^= ModelRules.GetHashCode();
      if (cityRules_ != null) hash ^= CityRules.GetHashCode();
      if (categories_ != null) hash ^= Categories.GetHashCode();
      if (UpdatedBy.Length != 0) hash ^= UpdatedBy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (offerDetail_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OfferDetail);
      }
      if (modelRules_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModelRules);
      }
      if (cityRules_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CityRules);
      }
      if (categories_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Categories);
      }
      if (UpdatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UpdatedBy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (offerDetail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OfferDetail);
      }
      if (modelRules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelRules);
      }
      if (cityRules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CityRules);
      }
      if (categories_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Categories);
      }
      if (UpdatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedBy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferRule other) {
      if (other == null) {
        return;
      }
      if (other.offerDetail_ != null) {
        if (offerDetail_ == null) {
          offerDetail_ = new global::Offers.Protos.ProtoFiles.Offer();
        }
        OfferDetail.MergeFrom(other.OfferDetail);
      }
      if (other.modelRules_ != null) {
        if (modelRules_ == null) {
          modelRules_ = new global::Offers.Protos.ProtoFiles.ModelRuleList();
        }
        ModelRules.MergeFrom(other.ModelRules);
      }
      if (other.cityRules_ != null) {
        if (cityRules_ == null) {
          cityRules_ = new global::Offers.Protos.ProtoFiles.CityRuleList();
        }
        CityRules.MergeFrom(other.CityRules);
      }
      if (other.categories_ != null) {
        if (categories_ == null) {
          categories_ = new global::Offers.Protos.ProtoFiles.OfferCategoryMappingList();
        }
        Categories.MergeFrom(other.Categories);
      }
      if (other.UpdatedBy.Length != 0) {
        UpdatedBy = other.UpdatedBy;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (offerDetail_ == null) {
              offerDetail_ = new global::Offers.Protos.ProtoFiles.Offer();
            }
            input.ReadMessage(offerDetail_);
            break;
          }
          case 18: {
            if (modelRules_ == null) {
              modelRules_ = new global::Offers.Protos.ProtoFiles.ModelRuleList();
            }
            input.ReadMessage(modelRules_);
            break;
          }
          case 26: {
            if (cityRules_ == null) {
              cityRules_ = new global::Offers.Protos.ProtoFiles.CityRuleList();
            }
            input.ReadMessage(cityRules_);
            break;
          }
          case 34: {
            if (categories_ == null) {
              categories_ = new global::Offers.Protos.ProtoFiles.OfferCategoryMappingList();
            }
            input.ReadMessage(categories_);
            break;
          }
          case 42: {
            UpdatedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferCreationSuccessStatus : pb::IMessage<OfferCreationSuccessStatus> {
    private static readonly pb::MessageParser<OfferCreationSuccessStatus> _parser = new pb::MessageParser<OfferCreationSuccessStatus>(() => new OfferCreationSuccessStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferCreationSuccessStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCreationSuccessStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCreationSuccessStatus(OfferCreationSuccessStatus other) : this() {
      offerCreated_ = other.offerCreated_;
      ruleMasterCreated_ = other.ruleMasterCreated_;
      modelRulesCreated_ = other.modelRulesCreated_;
      cityRulesCreated_ = other.cityRulesCreated_;
      categoryMappingCreated_ = other.categoryMappingCreated_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCreationSuccessStatus Clone() {
      return new OfferCreationSuccessStatus(this);
    }

    /// <summary>Field number for the "OfferCreated" field.</summary>
    public const int OfferCreatedFieldNumber = 1;
    private bool offerCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OfferCreated {
      get { return offerCreated_; }
      set {
        offerCreated_ = value;
      }
    }

    /// <summary>Field number for the "RuleMasterCreated" field.</summary>
    public const int RuleMasterCreatedFieldNumber = 2;
    private bool ruleMasterCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RuleMasterCreated {
      get { return ruleMasterCreated_; }
      set {
        ruleMasterCreated_ = value;
      }
    }

    /// <summary>Field number for the "ModelRulesCreated" field.</summary>
    public const int ModelRulesCreatedFieldNumber = 3;
    private bool modelRulesCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ModelRulesCreated {
      get { return modelRulesCreated_; }
      set {
        modelRulesCreated_ = value;
      }
    }

    /// <summary>Field number for the "CityRulesCreated" field.</summary>
    public const int CityRulesCreatedFieldNumber = 4;
    private bool cityRulesCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CityRulesCreated {
      get { return cityRulesCreated_; }
      set {
        cityRulesCreated_ = value;
      }
    }

    /// <summary>Field number for the "CategoryMappingCreated" field.</summary>
    public const int CategoryMappingCreatedFieldNumber = 5;
    private bool categoryMappingCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CategoryMappingCreated {
      get { return categoryMappingCreated_; }
      set {
        categoryMappingCreated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferCreationSuccessStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferCreationSuccessStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferCreated != other.OfferCreated) return false;
      if (RuleMasterCreated != other.RuleMasterCreated) return false;
      if (ModelRulesCreated != other.ModelRulesCreated) return false;
      if (CityRulesCreated != other.CityRulesCreated) return false;
      if (CategoryMappingCreated != other.CategoryMappingCreated) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferCreated != false) hash ^= OfferCreated.GetHashCode();
      if (RuleMasterCreated != false) hash ^= RuleMasterCreated.GetHashCode();
      if (ModelRulesCreated != false) hash ^= ModelRulesCreated.GetHashCode();
      if (CityRulesCreated != false) hash ^= CityRulesCreated.GetHashCode();
      if (CategoryMappingCreated != false) hash ^= CategoryMappingCreated.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferCreated != false) {
        output.WriteRawTag(8);
        output.WriteBool(OfferCreated);
      }
      if (RuleMasterCreated != false) {
        output.WriteRawTag(16);
        output.WriteBool(RuleMasterCreated);
      }
      if (ModelRulesCreated != false) {
        output.WriteRawTag(24);
        output.WriteBool(ModelRulesCreated);
      }
      if (CityRulesCreated != false) {
        output.WriteRawTag(32);
        output.WriteBool(CityRulesCreated);
      }
      if (CategoryMappingCreated != false) {
        output.WriteRawTag(40);
        output.WriteBool(CategoryMappingCreated);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferCreated != false) {
        size += 1 + 1;
      }
      if (RuleMasterCreated != false) {
        size += 1 + 1;
      }
      if (ModelRulesCreated != false) {
        size += 1 + 1;
      }
      if (CityRulesCreated != false) {
        size += 1 + 1;
      }
      if (CategoryMappingCreated != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferCreationSuccessStatus other) {
      if (other == null) {
        return;
      }
      if (other.OfferCreated != false) {
        OfferCreated = other.OfferCreated;
      }
      if (other.RuleMasterCreated != false) {
        RuleMasterCreated = other.RuleMasterCreated;
      }
      if (other.ModelRulesCreated != false) {
        ModelRulesCreated = other.ModelRulesCreated;
      }
      if (other.CityRulesCreated != false) {
        CityRulesCreated = other.CityRulesCreated;
      }
      if (other.CategoryMappingCreated != false) {
        CategoryMappingCreated = other.CategoryMappingCreated;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OfferCreated = input.ReadBool();
            break;
          }
          case 16: {
            RuleMasterCreated = input.ReadBool();
            break;
          }
          case 24: {
            ModelRulesCreated = input.ReadBool();
            break;
          }
          case 32: {
            CityRulesCreated = input.ReadBool();
            break;
          }
          case 40: {
            CategoryMappingCreated = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryDetail : pb::IMessage<CategoryDetail> {
    private static readonly pb::MessageParser<CategoryDetail> _parser = new pb::MessageParser<CategoryDetail>(() => new CategoryDetail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryDetail(CategoryDetail other) : this() {
      Category = other.category_ != null ? other.Category.Clone() : null;
      CategoryMapping = other.categoryMapping_ != null ? other.CategoryMapping.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryDetail Clone() {
      return new CategoryDetail(this);
    }

    /// <summary>Field number for the "Category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private global::Offers.Protos.ProtoFiles.CategoryMaster category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.CategoryMaster Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "CategoryMapping" field.</summary>
    public const int CategoryMappingFieldNumber = 2;
    private global::Offers.Protos.ProtoFiles.OfferCategoryMapping categoryMapping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.OfferCategoryMapping CategoryMapping {
      get { return categoryMapping_; }
      set {
        categoryMapping_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Category, other.Category)) return false;
      if (!object.Equals(CategoryMapping, other.CategoryMapping)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (category_ != null) hash ^= Category.GetHashCode();
      if (categoryMapping_ != null) hash ^= CategoryMapping.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (category_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Category);
      }
      if (categoryMapping_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CategoryMapping);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (category_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Category);
      }
      if (categoryMapping_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CategoryMapping);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryDetail other) {
      if (other == null) {
        return;
      }
      if (other.category_ != null) {
        if (category_ == null) {
          category_ = new global::Offers.Protos.ProtoFiles.CategoryMaster();
        }
        Category.MergeFrom(other.Category);
      }
      if (other.categoryMapping_ != null) {
        if (categoryMapping_ == null) {
          categoryMapping_ = new global::Offers.Protos.ProtoFiles.OfferCategoryMapping();
        }
        CategoryMapping.MergeFrom(other.CategoryMapping);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (category_ == null) {
              category_ = new global::Offers.Protos.ProtoFiles.CategoryMaster();
            }
            input.ReadMessage(category_);
            break;
          }
          case 18: {
            if (categoryMapping_ == null) {
              categoryMapping_ = new global::Offers.Protos.ProtoFiles.OfferCategoryMapping();
            }
            input.ReadMessage(categoryMapping_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferWithCategoryDetail : pb::IMessage<OfferWithCategoryDetail> {
    private static readonly pb::MessageParser<OfferWithCategoryDetail> _parser = new pb::MessageParser<OfferWithCategoryDetail>(() => new OfferWithCategoryDetail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferWithCategoryDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferWithCategoryDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferWithCategoryDetail(OfferWithCategoryDetail other) : this() {
      OfferDetail = other.offerDetail_ != null ? other.OfferDetail.Clone() : null;
      categoryDetails_ = other.categoryDetails_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferWithCategoryDetail Clone() {
      return new OfferWithCategoryDetail(this);
    }

    /// <summary>Field number for the "OfferDetail" field.</summary>
    public const int OfferDetailFieldNumber = 1;
    private global::Offers.Protos.ProtoFiles.Offer offerDetail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.Offer OfferDetail {
      get { return offerDetail_; }
      set {
        offerDetail_ = value;
      }
    }

    /// <summary>Field number for the "CategoryDetails" field.</summary>
    public const int CategoryDetailsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.CategoryDetail> _repeated_categoryDetails_codec
        = pb::FieldCodec.ForMessage(18, global::Offers.Protos.ProtoFiles.CategoryDetail.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CategoryDetail> categoryDetails_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CategoryDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.CategoryDetail> CategoryDetails {
      get { return categoryDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferWithCategoryDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferWithCategoryDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OfferDetail, other.OfferDetail)) return false;
      if(!categoryDetails_.Equals(other.categoryDetails_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (offerDetail_ != null) hash ^= OfferDetail.GetHashCode();
      hash ^= categoryDetails_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (offerDetail_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OfferDetail);
      }
      categoryDetails_.WriteTo(output, _repeated_categoryDetails_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (offerDetail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OfferDetail);
      }
      size += categoryDetails_.CalculateSize(_repeated_categoryDetails_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferWithCategoryDetail other) {
      if (other == null) {
        return;
      }
      if (other.offerDetail_ != null) {
        if (offerDetail_ == null) {
          offerDetail_ = new global::Offers.Protos.ProtoFiles.Offer();
        }
        OfferDetail.MergeFrom(other.OfferDetail);
      }
      categoryDetails_.Add(other.categoryDetails_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (offerDetail_ == null) {
              offerDetail_ = new global::Offers.Protos.ProtoFiles.Offer();
            }
            input.ReadMessage(offerDetail_);
            break;
          }
          case 18: {
            categoryDetails_.AddEntriesFrom(input, _repeated_categoryDetails_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferWithCategoryDetailList : pb::IMessage<OfferWithCategoryDetailList> {
    private static readonly pb::MessageParser<OfferWithCategoryDetailList> _parser = new pb::MessageParser<OfferWithCategoryDetailList>(() => new OfferWithCategoryDetailList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferWithCategoryDetailList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferWithCategoryDetailList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferWithCategoryDetailList(OfferWithCategoryDetailList other) : this() {
      listOfferWithCategoryDetail_ = other.listOfferWithCategoryDetail_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferWithCategoryDetailList Clone() {
      return new OfferWithCategoryDetailList(this);
    }

    /// <summary>Field number for the "ListOfferWithCategoryDetail" field.</summary>
    public const int ListOfferWithCategoryDetailFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.OfferWithCategoryDetail> _repeated_listOfferWithCategoryDetail_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.OfferWithCategoryDetail.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferWithCategoryDetail> listOfferWithCategoryDetail_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferWithCategoryDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferWithCategoryDetail> ListOfferWithCategoryDetail {
      get { return listOfferWithCategoryDetail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferWithCategoryDetailList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferWithCategoryDetailList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfferWithCategoryDetail_.Equals(other.listOfferWithCategoryDetail_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfferWithCategoryDetail_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listOfferWithCategoryDetail_.WriteTo(output, _repeated_listOfferWithCategoryDetail_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfferWithCategoryDetail_.CalculateSize(_repeated_listOfferWithCategoryDetail_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferWithCategoryDetailList other) {
      if (other == null) {
        return;
      }
      listOfferWithCategoryDetail_.Add(other.listOfferWithCategoryDetail_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listOfferWithCategoryDetail_.AddEntriesFrom(input, _repeated_listOfferWithCategoryDetail_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferCriteria : pb::IMessage<OfferCriteria> {
    private static readonly pb::MessageParser<OfferCriteria> _parser = new pb::MessageParser<OfferCriteria>(() => new OfferCriteria());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferCriteria> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCriteria() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCriteria(OfferCriteria other) : this() {
      CityRule = other.cityRule_ != null ? other.CityRule.Clone() : null;
      ModelRule = other.modelRule_ != null ? other.ModelRule.Clone() : null;
      applicationId_ = other.applicationId_;
      requiredOfferCount_ = other.requiredOfferCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCriteria Clone() {
      return new OfferCriteria(this);
    }

    /// <summary>Field number for the "CityRule" field.</summary>
    public const int CityRuleFieldNumber = 1;
    private global::Offers.Protos.ProtoFiles.CityRule cityRule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.CityRule CityRule {
      get { return cityRule_; }
      set {
        cityRule_ = value;
      }
    }

    /// <summary>Field number for the "ModelRule" field.</summary>
    public const int ModelRuleFieldNumber = 2;
    private global::Offers.Protos.ProtoFiles.ModelRule modelRule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Offers.Protos.ProtoFiles.ModelRule ModelRule {
      get { return modelRule_; }
      set {
        modelRule_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "RequiredOfferCount" field.</summary>
    public const int RequiredOfferCountFieldNumber = 4;
    private int requiredOfferCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequiredOfferCount {
      get { return requiredOfferCount_; }
      set {
        requiredOfferCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferCriteria);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferCriteria other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CityRule, other.CityRule)) return false;
      if (!object.Equals(ModelRule, other.ModelRule)) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (RequiredOfferCount != other.RequiredOfferCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cityRule_ != null) hash ^= CityRule.GetHashCode();
      if (modelRule_ != null) hash ^= ModelRule.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (RequiredOfferCount != 0) hash ^= RequiredOfferCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cityRule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CityRule);
      }
      if (modelRule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModelRule);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApplicationId);
      }
      if (RequiredOfferCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RequiredOfferCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cityRule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CityRule);
      }
      if (modelRule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelRule);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (RequiredOfferCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredOfferCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferCriteria other) {
      if (other == null) {
        return;
      }
      if (other.cityRule_ != null) {
        if (cityRule_ == null) {
          cityRule_ = new global::Offers.Protos.ProtoFiles.CityRule();
        }
        CityRule.MergeFrom(other.CityRule);
      }
      if (other.modelRule_ != null) {
        if (modelRule_ == null) {
          modelRule_ = new global::Offers.Protos.ProtoFiles.ModelRule();
        }
        ModelRule.MergeFrom(other.ModelRule);
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.RequiredOfferCount != 0) {
        RequiredOfferCount = other.RequiredOfferCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (cityRule_ == null) {
              cityRule_ = new global::Offers.Protos.ProtoFiles.CityRule();
            }
            input.ReadMessage(cityRule_);
            break;
          }
          case 18: {
            if (modelRule_ == null) {
              modelRule_ = new global::Offers.Protos.ProtoFiles.ModelRule();
            }
            input.ReadMessage(modelRule_);
            break;
          }
          case 24: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 32: {
            RequiredOfferCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferCriteriaList : pb::IMessage<OfferCriteriaList> {
    private static readonly pb::MessageParser<OfferCriteriaList> _parser = new pb::MessageParser<OfferCriteriaList>(() => new OfferCriteriaList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferCriteriaList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCriteriaList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCriteriaList(OfferCriteriaList other) : this() {
      listOfferCriteria_ = other.listOfferCriteria_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferCriteriaList Clone() {
      return new OfferCriteriaList(this);
    }

    /// <summary>Field number for the "ListOfferCriteria" field.</summary>
    public const int ListOfferCriteriaFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.OfferCriteria> _repeated_listOfferCriteria_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.OfferCriteria.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferCriteria> listOfferCriteria_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferCriteria>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferCriteria> ListOfferCriteria {
      get { return listOfferCriteria_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferCriteriaList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferCriteriaList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfferCriteria_.Equals(other.listOfferCriteria_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfferCriteria_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listOfferCriteria_.WriteTo(output, _repeated_listOfferCriteria_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfferCriteria_.CalculateSize(_repeated_listOfferCriteria_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferCriteriaList other) {
      if (other == null) {
        return;
      }
      listOfferCriteria_.Add(other.listOfferCriteria_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listOfferCriteria_.AddEntriesFrom(input, _repeated_listOfferCriteria_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VersionIdList : pb::IMessage<VersionIdList> {
    private static readonly pb::MessageParser<VersionIdList> _parser = new pb::MessageParser<VersionIdList>(() => new VersionIdList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionIdList(VersionIdList other) : this() {
      id_ = other.id_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionIdList Clone() {
      return new VersionIdList(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_id_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> id_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Id {
      get { return id_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!id_.Equals(other.id_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= id_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      id_.WriteTo(output, _repeated_id_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += id_.CalculateSize(_repeated_id_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionIdList other) {
      if (other == null) {
        return;
      }
      id_.Add(other.id_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            id_.AddEntriesFrom(input, _repeated_id_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferAvailabiltyDetails : pb::IMessage<OfferAvailabiltyDetails> {
    private static readonly pb::MessageParser<OfferAvailabiltyDetails> _parser = new pb::MessageParser<OfferAvailabiltyDetails>(() => new OfferAvailabiltyDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferAvailabiltyDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferAvailabiltyDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferAvailabiltyDetails(OfferAvailabiltyDetails other) : this() {
      modelId_ = other.modelId_;
      cityId_ = other.cityId_;
      isOfferAvailable_ = other.isOfferAvailable_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferAvailabiltyDetails Clone() {
      return new OfferAvailabiltyDetails(this);
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 1;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 2;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "IsOfferAvailable" field.</summary>
    public const int IsOfferAvailableFieldNumber = 3;
    private bool isOfferAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOfferAvailable {
      get { return isOfferAvailable_; }
      set {
        isOfferAvailable_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 4;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferAvailabiltyDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferAvailabiltyDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelId != other.ModelId) return false;
      if (CityId != other.CityId) return false;
      if (IsOfferAvailable != other.IsOfferAvailable) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (IsOfferAvailable != false) hash ^= IsOfferAvailable.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ModelId);
      }
      if (CityId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CityId);
      }
      if (IsOfferAvailable != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOfferAvailable);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (IsOfferAvailable != false) {
        size += 1 + 1;
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferAvailabiltyDetails other) {
      if (other == null) {
        return;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.IsOfferAvailable != false) {
        IsOfferAvailable = other.IsOfferAvailable;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ModelId = input.ReadInt32();
            break;
          }
          case 16: {
            CityId = input.ReadInt32();
            break;
          }
          case 24: {
            IsOfferAvailable = input.ReadBool();
            break;
          }
          case 32: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferAvailabiltyDetailsList : pb::IMessage<OfferAvailabiltyDetailsList> {
    private static readonly pb::MessageParser<OfferAvailabiltyDetailsList> _parser = new pb::MessageParser<OfferAvailabiltyDetailsList>(() => new OfferAvailabiltyDetailsList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferAvailabiltyDetailsList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Offers.Protos.ProtoFiles.OffersReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferAvailabiltyDetailsList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferAvailabiltyDetailsList(OfferAvailabiltyDetailsList other) : this() {
      listOfferAvailabiltyDetails_ = other.listOfferAvailabiltyDetails_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferAvailabiltyDetailsList Clone() {
      return new OfferAvailabiltyDetailsList(this);
    }

    /// <summary>Field number for the "ListOfferAvailabiltyDetails" field.</summary>
    public const int ListOfferAvailabiltyDetailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetails> _repeated_listOfferAvailabiltyDetails_codec
        = pb::FieldCodec.ForMessage(10, global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetails.Parser);
    private readonly pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetails> listOfferAvailabiltyDetails_ = new pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetails>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Offers.Protos.ProtoFiles.OfferAvailabiltyDetails> ListOfferAvailabiltyDetails {
      get { return listOfferAvailabiltyDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferAvailabiltyDetailsList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferAvailabiltyDetailsList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfferAvailabiltyDetails_.Equals(other.listOfferAvailabiltyDetails_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfferAvailabiltyDetails_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listOfferAvailabiltyDetails_.WriteTo(output, _repeated_listOfferAvailabiltyDetails_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfferAvailabiltyDetails_.CalculateSize(_repeated_listOfferAvailabiltyDetails_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferAvailabiltyDetailsList other) {
      if (other == null) {
        return;
      }
      listOfferAvailabiltyDetails_.Add(other.listOfferAvailabiltyDetails_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            listOfferAvailabiltyDetails_.AddEntriesFrom(input, _repeated_listOfferAvailabiltyDetails_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
