// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Campaign.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoBufClass.Campaigns {

  /// <summary>Holder for reflection information generated from Campaign.proto</summary>
  public static partial class CampaignReflection {

    #region Descriptor
    /// <summary>File descriptor for Campaign.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CampaignReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5DYW1wYWlnbi5wcm90bxoMQ29tbW9uLnByb3RvGgxIZWFsdGgucHJvdG8i",
            "TwoKQ2FtcGFpZ25JZBIKCgJJZBgBIAEoBRIeCghVc2VDYWNoZRgCIAEoCzIM",
            "LkJvb2xNZXNzYWdlEhUKDUFwcGxpY2F0aW9uSWQYAyABKAUiqggKCENhbXBh",
            "aWduEhcKAklkGAEgASgLMgsuQ2FtcGFpZ25JZBIQCghEZWFsZXJJZBgCIAEo",
            "BRIZChFDYW1wYWlnbkJlaGF2aW91chgDIAEoBRITCgtEaXNwbGF5TmFtZRgE",
            "IAEoCRIQCghMaW5rVGV4dBgFIAEoCRIQCghJc0FjdGl2ZRgGIAEoCBIRCglJ",
            "c1J1bm5pbmcYByABKAUSEgoKUGF1c2VkRGF0ZRgIIAEoCRIbChNOb3RpZmlj",
            "YXRpb25FbWFpbElkGAkgASgJEhoKEk5vdGlmaWNhdGlvbk1vYmlsZRgKIAEo",
            "CRIQCghQcmlvcml0eRgLIAEoBRIRCglMZWFkUGFuZWwYDCABKAUSEQoJSXNE",
            "ZXNrdG9wGA0gASgIEhAKCElzTW9iaWxlGA4gASgIEhEKCUlzQW5kcm9pZBgP",
            "IAEoCBIQCghJc0lQaG9uZRgQIAEoCBIXCg9FbmFibGVVc2VyRW1haWwYESAB",
            "KAgSFQoNRW5hYmxlVXNlclNNUxgSIAEoCBIZChFFbmFibGVEZWFsZXJFbWFp",
            "bBgTIAEoCBIXCg9FbmFibGVEZWFsZXJTTVMYFCABKAgSFwoPSXNEZWZhdWx0",
            "TnVtYmVyGBUgASgFEhwKFElzVGhpcmRQYXJ0eUNhbXBhaWduGBYgASgIEhkK",
            "EUlzRmVhdHVyZWRFbmFibGVkGBcgASgIEhEKCVNob3dFbWFpbBgYIAEoCBIc",
            "ChRTaG93SW5SZWNvbW1lbmRhdGlvbhgZIAEoCBIRCglVcGRhdGVkT24YGiAB",
            "KAkSEQoJVXBkYXRlZEJ5GBsgASgJEhUKDUFwcGxpY2F0aW9uSWQYHCABKAUS",
            "FQoNSXNQcVJ1bGVFeGlzdBgdIAEoCBIcChRJc0Nyb3NzU2VsbFJ1bGVFeGlz",
            "dBgeIAEoCBIgChhJc0RlYWxlckxvY2F0b3JSdWxlRXhpc3QYHyABKAgSDQoF",
            "SXNDVkwYICABKAgSDgoGWm9uZUlkGCEgASgFEhcKD0xlYWREdXBsaWNhdGlv",
            "bhgiIAEoCBITCgtQaG9uZU51bWJlchgjIAEoCRISCgpJc0NhclRyYWRlGCQg",
            "ASgIEhEKCUlzQ2FyV2FsZRglIAEoCBIaChJBc3NpZ25lZFRlbXBsYXRlSWQY",
            "JiABKAUSFwoPQXNzaWduZWRHcm91cElkGCcgASgFEhMKC0NUQUxpbmtUZXh0",
            "GCggASgJEhcKD1Nob3dXaXRob3V0Q2l0eRgpIAEoCBIWCg5DaXRpZXNMaXN0",
            "VHlwZRgqIAEoBRISCgpJc0Jpa2VXYWxlGCsgASgIEhQKDENhbXBhaWduVHlw",
            "ZRgsIAEoBRIQCghEaXN0YW5jZRgtIAEoBRITCgtNdXR1YWxMZWFkcxguIAEo",
            "CBIVCg1EZWFsZXJBZG1pbklkGC8gASgFIpsCChJGZWF0dXJlZEFkQ2FtcGFp",
            "Z24SFwoIQ2FtcGFpZ24YASABKAsyBS5JdGVtEhEKCVN0YXJ0RGF0ZRgCIAEo",
            "CRIPCgdFbmREYXRlGAMgASgJEhAKCElzQWN0aXZlGAQgASgJEhMKBFVzZXIY",
            "BSABKAsyBS5JdGVtEhEKCVVwZGF0ZWRPbhgGIAEoCRIfChBDYW1wYWlnbkNh",
            "dGVnb3J5GAcgASgLMgUuSXRlbRIYChBFeHRlcm5hbExpbmtUZXh0GAggASgJ",
            "EhgKEExpbmtDbGlja1RyYWNrZXIYCSABKAkSGwoTQ2FyTmFtZUNsaWNrVHJh",
            "Y2tlchgKIAEoCRIcChRDYXJJbWFnZUNsaWNrVHJhY2tlchgLIAEoCSKZAwoG",
            "UFFSdWxlEgoKAklkGAEgASgFEh8KCkNhbXBhaWduSWQYAiABKAsyCy5DYW1w",
            "YWlnbklkEhMKBE1ha2UYAyABKAsyBS5JdGVtEhQKBU1vZGVsGAQgASgLMgUu",
            "SXRlbRIUCgVTdGF0ZRgFIAEoCzIFLkl0ZW0SEwoEQ2l0eRgGIAEoCzIFLkl0",
            "ZW0SEwoEWm9uZRgHIAEoCzIFLkl0ZW0SEwoEVXNlchgIIAEoCzIFLkl0ZW0S",
            "EwoLTGlzdE1vZGVsSWQYCSABKAkSEgoKTGlzdENpdHlJZBgKIAEoCRIXCghQ",
            "bGF0Zm9ybRgLIAEoCzIFLkl0ZW0SFQoNQXBwbGljYXRpb25JZBgMIAEoBRIN",
            "CgVDb3VudBgNIAEoBRISCgpMaXN0Wm9uZUlkGA4gASgJEhkKBFBhZ2UYDyAB",
            "KAsyCy5QYWdpbmF0aW9uEh4KFnNob3dDb21wbGV0ZWRDYW1wYWlnbnMYECAB",
            "KAgSFAoMTm9ab25lRmlsdGVyGBEgASgIEhUKDWRlYWxlckxvY2F0b3IYEiAB",
            "KAgiKAoKUFFSdWxlTGlzdBIaCglMc3RQUVJ1bGUYASADKAsyBy5QUVJ1bGUi",
            "5AEKEFBRVGVtcGxhdGVTdGF0dXMSFwoCSWQYASABKAsyCy5DYW1wYWlnbklk",
            "EhEKCUlzRGVza3RvcBgCIAEoCBIQCghJc01vYmlsZRgDIAEoCBIRCglJc0Fu",
            "ZHJvaWQYBCABKAgSEAoISXNJUGhvbmUYBSABKAgSEwoLRGlzcGxheU5hbWUY",
            "BiABKAkSEAoITGlua1RleHQYByABKAkSEwoEVXNlchgIIAEoCzIFLkl0ZW0S",
            "EwoLQ1RBTGlua1RleHQYCSABKAkSHAoUU2hvd0luUmVjb21tZW5kYXRpb24Y",
            "CiABKAgikQIKEVBRVGVtcGxhdGVNYXBwaW5nEhcKAklkGAEgASgLMgsuQ2Ft",
            "cGFpZ25JZBIXCg9Bc3NpZ25lZEdyb3VwSWQYAiABKAUSGgoSQXNzaWduZWRU",
            "ZW1wbGF0ZUlkGAMgASgFEhIKClBsYXRmb3JtSWQYBCABKAUSFQoNQXBwbGlj",
            "YXRpb25JZBgFIAEoBRIOCgZQYWdlSWQYBiABKAUSEgoKUHJvcGVydHlJZBgH",
            "IAEoBRIQCghQbGF0Zm9ybRgIIAEoCRITCgtBcHBsaWNhdGlvbhgJIAEoCRIQ",
            "CghQYWdlTmFtZRgKIAEoCRIQCghQcm9wZXJ0eRgLIAEoCRIUCgxUZW1wbGF0",
            "ZU5hbWUYDCABKAki6wIKDkZlYXR1cmVkQWRSdWxlEgoKAklkGAEgASgFEhkK",
            "CkZlYXR1cmVkQWQYAiABKAsyBS5JdGVtEhkKClRhcmdldE1ha2UYAyABKAsy",
            "BS5JdGVtEhoKC1RhcmdldE1vZGVsGAQgASgLMgUuSXRlbRIcCg1UYXJnZXRW",
            "ZXJzaW9uGAUgASgLMgUuSXRlbRIbCgxGZWF0dXJlZE1ha2UYBiABKAsyBS5J",
            "dGVtEhwKDUZlYXR1cmVkTW9kZWwYByABKAsyBS5JdGVtEh4KD0ZlYXR1cmVk",
            "VmVyc2lvbhgIIAEoCzIFLkl0ZW0SFAoFU3RhdGUYCSABKAsyBS5JdGVtEhMK",
            "BENpdHkYCiABKAsyBS5JdGVtEhMKBFpvbmUYCyABKAsyBS5JdGVtEhwKFENh",
            "ckltcHJlc3Npb25UcmFja2VyGAwgASgJEhMKBFVzZXIYDSABKAsyBS5JdGVt",
            "Eg8KB0FkZGVkT24YDiABKAkiRQoRRmVhdHVyZWRSdWxlSW5wdXQSFwoIQ2Ft",
            "cGFpZ24YASABKAsyBS5JdGVtEhcKCENhdGVnb3J5GAIgASgLMgUuSXRlbSJA",
            "ChJGZWF0dXJlZEFkUnVsZUxpc3QSKgoRTHN0RmVhdHVyZWRBZFJ1bGUYASAD",
            "KAsyDy5GZWF0dXJlZEFkUnVsZSI/ChZGZWF0dXJlZEFkQ2FtcGFpZ25MaXN0",
            "EiUKCENhbXBhaWduGAEgAygLMhMuRmVhdHVyZWRBZENhbXBhaWduImgKFkNy",
            "b3NzU2VsbENhbXBhaWduSW5wdXQSDgoGQ2l0eUlkGAEgASgFEg4KBlpvbmVJ",
            "ZBgCIAEoBRIXCg9UYXJnZXRWZXJzaW9uSWQYAyABKAUSFQoNQXBwbGljYXRp",
            "b25JZBgEIAEoBSIvChRGZWF0dXJlZFZlcnNpb25zTGlzdBIXCghWZXJzaW9u",
            "cxgBIAMoCzIFLkl0ZW0idgoRQ3Jvc3NTZWxsQ2FtcGFpZ24SEgoKQ2FtcGFp",
            "Z25JZBgBIAEoBRIWCgdWZXJzaW9uGAIgASgLMgUuSXRlbRIOCgZab25lSWQY",
            "AyABKAUSEQoJSXNDYXJ3YWxlGAQgASgIEhIKCklzQ2FyVHJhZGUYBSABKAgi",
            "PwoQQ2FtcGFpZ25QbGF0Zm9ybRIXCgJJZBgBIAEoCzILLkNhbXBhaWduSWQS",
            "EgoKUGxhdGZvcm1JZBgCIAEoBSJHChVQUVRlbXBsYXRlTWFwcGluZ0xpc3QS",
            "LgoSVGVtcGxhdGVNYXBEZXRhaWxzGAEgAygLMhIuUFFUZW1wbGF0ZU1hcHBp",
            "bmciFgoHUnVsZUlkcxILCgNJZHMYASABKAkiMgoOQ2FtcGFpZ25JZExpc3QS",
            "IAoLQ2FtcGFpZ25JZHMYASADKAsyCy5DYW1wYWlnbklkIiwKDENhbXBhaWdu",
            "TGlzdBIcCglDYW1wYWlnbnMYASADKAsyCS5DYW1wYWlnbiJGChVDcm9zc1Nl",
            "bGxDYW1wYWlnbkxpc3QSLQoRQ3Jvc3NTZWxsQ2FtcGFpZ24YASADKAsyEi5D",
            "cm9zc1NlbGxDYW1wYWlnbiJ0Ch5EZWFsZXJMb2NhdG9yQ29uZmlndXJhdGlv",
            "blJ1bGUSCgoCSWQYASABKAUSHwoKQ2FtcGFpZ25JZBgCIAEoCzILLkNhbXBh",
            "aWduSWQSEAoIRGVhbGVySWQYAyABKAUSEwoEVXNlchgEIAEoCzIFLkl0ZW0i",
            "aQoiRGVhbGVyTG9jYXRvckNvbmZpZ3VyYXRpb25SdWxlTGlzdBJDChpEZWFs",
            "ZXJMb2NhdG9yQ29uZmlndXJhdGlvbhgBIAMoCzIfLkRlYWxlckxvY2F0b3JD",
            "b25maWd1cmF0aW9uUnVsZSLVAQoXR2xvYmFsU2VhcmNoRmVhdHVyZWRDYXIS",
            "DgoGTWFrZUlkGAEgASgFEhAKCE1ha2VOYW1lGAIgASgJEg8KB01vZGVsSWQY",
            "AyABKAUSEQoJTW9kZWxOYW1lGAQgASgJEg4KBlJvb3RJZBgFIAEoBRIQCghS",
            "b290TmFtZRgGIAEoCRISCgpJc1VwY29taW5nGAcgASgIEhMKC01hc2tpbmdO",
            "YW1lGAggASgJEhIKCk91dHB1dE5hbWUYCSABKAkSFQoNVGFyZ2V0TW9kZWxJ",
            "ZBgKIAEoBSJACg9GZWF0dXJlZENhckxpc3QSLQoLRmVhdHVyZWRDYXIYASAD",
            "KAsyGC5HbG9iYWxTZWFyY2hGZWF0dXJlZENhciIzCg5DYW1wYWlnblN0YXR1",
            "cxIKCgJJZBgBIAEoBRIVCg1SdW5uaW5nU3RhdHVzGAIgASgFIugECgZEZWFs",
            "ZXISFQoGRGVhbGVyGAEgASgLMgUuSXRlbRIPCgdBZGRyZXNzGAIgASgJEg8K",
            "B0VtYWlsSWQYAyABKAkSDwoHUGluQ29kZRgEIAEoCRINCgVGYXhObxgFIAEo",
            "CRISCgpXZWJzaXRlVXJsGAYgASgJEhAKCE1vYmlsZU5vGAcgASgJEhIKCkxh",
            "bmRMaW5lTm8YCCABKAkSEwoETWFrZRgJIAEoCzIFLkl0ZW0SFAoFU3RhdGUY",
            "CiABKAsyBS5JdGVtEhMKBENpdHkYCyABKAsyBS5JdGVtEhAKCExhdGl0dWRl",
            "GAwgASgJEhEKCUxvbmdpdHVkZRgNIAEoCRIXCg9Jc0xvY2F0b3JBY3RpdmUY",
            "DiABKAgSJAocRGVhbGVyTG9jYXRvckNvbmZpZ3VyYXRpb25JZBgPIAEoBRIR",
            "CglTdGFydFRpbWUYECABKAkSDwoHRW5kVGltZRgRIAEoCRIRCglGaXJzdE5h",
            "bWUYEiABKAkSEAoITGFzdE5hbWUYEyABKAkSFAoMTGFuZGxpbmVDb2RlGBQg",
            "ASgJEhsKE1Byb2ZpbGVQaG90b0hvc3RVcmwYFSABKAkSFwoPUHJvZmlsZVBo",
            "b3RvVXJsGBYgASgJEh8KCkNhbXBhaWduSWQYFyABKAsyCy5DYW1wYWlnbklk",
            "EhUKDUNvbnRhY3ROdW1iZXIYGCABKAkSGQoRQ2FtcGFpZ25Jc1J1bm5pbmcY",
            "GSABKAUSGAoQQ2FtcGFpZ25Jc0FjdGl2ZRgaIAEoCBIRCglJc0NhcndhbGUY",
            "GyABKAgSEgoKSXNDYXJUcmFkZRgcIAEoCCItCgtEZWFsZXJzTGlzdBIeCg1E",
            "ZWFsZXJEZXRhaWxzGAEgAygLMgcuRGVhbGVyImEKCE1ha2VDaXR5EhMKBE1h",
            "a2UYASABKAsyBS5JdGVtEhMKBENpdHkYAiABKAsyBS5JdGVtEhQKBVN0YXRl",
            "GAMgASgLMgUuSXRlbRIVCg1BcHBsaWNhdGlvbklkGAQgASgFIjQKCERlYWxl",
            "cklkEhEKAklkGAEgASgLMgUuSXRlbRIVCg1BcHBsaWNhdGlvbklkGAIgASgF",
            "IlgKGFNwb25zb3JlZENvbXBhcmlzb25JbnB1dBISCgpWZXJzaW9uSWRzGAEg",
            "ASgJEhgKEENhbXBhaWduQ2F0ZWdvcnkYAiABKAUSDgoGQ2l0eUlkGAMgASgF",
            "IuABChpTcG9uc29yZWRDYXJDb21wYXJpc29uRGF0YRIYChBFeHRlcm5hbExp",
            "bmtUZXh0GAEgASgJEhsKE0V4dGVybmFsTGlua1RyYWNrZXIYAiABKAkSGwoT",
            "Q2FyTmFtZUNsaWNrVHJhY2tlchgDIAEoCRIcChRDYXJJbWFnZUNsaWNrVHJh",
            "Y2tlchgEIAEoCRIcChRDYXJJbXByZXNzaW9uVHJhY2tlchgFIAEoCRIZChFG",
            "ZWF0dXJlZFZlcnNpb25JZBgGIAEoBRIXCg9UYXJnZXRWZXJzaW9uSWQYByAB",
            "KAUiWQoQQ2FtcGFpZ25Dcml0ZXJpYRIQCghEZWFsZXJJZBgBIAEoBRIeCghV",
            "c2VDYWNoZRgCIAEoCzIMLkJvb2xNZXNzYWdlEhMKC0NhbXBhaWduSWRzGAMg",
            "ASgJImQKH0RlYWxlckxvY2F0b3JDb25maWd1cmF0aW9uQ2FjaGUSDwoHU3Rh",
            "dGVJZBgBIAEoBRIOCgZDaXR5SWQYAiABKAUSDgoGTWFrZUlkGAMgASgFEhAK",
            "CERlYWxlcklkGAQgASgFIpMBChpDYW1wYWlnbkNvbmZpZ3VyYXRpb25DYWNo",
            "ZRIPCgdTdGF0ZUlkGAEgASgFEg4KBkNpdHlJZBgCIAEoBRIOCgZab25lSWQY",
            "AyABKAUSDgoGTWFrZUlkGAQgASgFEg8KB01vZGVsSWQYBSABKAUSEQoJVmVy",
            "c2lvbklkGAYgASgFEhAKCERlYWxlcklkGAcgASgFImgKI0RlYWxlckxvY2F0",
            "b3JDb25maWd1cmF0aW9uQ2FjaGVMaXN0EkEKF0RlYWxlckxvY2F0b3JDb25m",
            "aWdMaXN0GAEgAygLMiAuRGVhbGVyTG9jYXRvckNvbmZpZ3VyYXRpb25DYWNo",
            "ZSJYCh5DYW1wYWlnbkNvbmZpZ3VyYXRpb25DYWNoZUxpc3QSNgoRQ2FtcGFp",
            "Z25Db25maWdMc3QYASADKAsyGy5DYW1wYWlnbkNvbmZpZ3VyYXRpb25DYWNo",
            "ZSJYChVSZXBsYWNpbmdNb2RlbERldGFpbHMSEgoKTmV3TW9kZWxJZBgBIAEo",
            "BRIYChBSZXBsYWNpbmdNb2RlbElkGAIgASgFEhEKCVVwZGF0ZWRCeRgDIAEo",
            "CSJLChJDYW1wYWlnbnNXaXRoQ291bnQSIAoJQ2FtcGFpZ25zGAEgASgLMg0u",
            "Q2FtcGFpZ25MaXN0EhMKC0RlYWxlckNvdW50GAIgASgFIloKE0NhbXBhaWdu",
            "Q2l0aWVzSW5wdXQSEgoKQ2FtcGFpZ25JZBgBIAEoBRIPCgdNb2RlbElkGAIg",
            "ASgFEh4KCFVzZUNhY2hlGAMgASgLMgwuQm9vbE1lc3NhZ2UiNQoOQ2FtcGFp",
            "Z25DaXRpZXMSDAoEVHlwZRgBIAEoBRIVCgZDaXRpZXMYAiADKAsyBS5JdGVt",
            "IiAKB01vZGVsSWQSFQoNVGFyZ2V0TW9kZWxJZBgBIAEoBSI5ChNHbG9iYWxT",
            "ZWFyY2hNb2RlbElkEiIKEFRhcmdldENhck1vZGVsSWQYASADKAsyCC5Nb2Rl",
            "bElkInsKDVRlbXBsYXRlSW5wdXQSEgoKUGxhdGZvcm1JZBgBIAEoBRIVCg1B",
            "cHBsaWNhdGlvbklkGAIgASgFEg4KBlBhZ2VJZBgDIAEoBRIOCgZNYWtlSWQY",
            "BCABKAUSDwoHTW9kZWxJZBgFIAEoBRIOCgZDaXR5SWQYBiABKAUiXAoMUGFn",
            "ZVRlbXBsYXRlEhIKClRlbXBsYXRlSWQYASABKAUSEgoKUHJvcGVydHlJZBgC",
            "IAEoBRIQCghQcmlvcml0eRgDIAEoBRISCgpDYW1wYWlnbklkGAQgASgFIk8K",
            "DFRlbXBsYXRlTGlzdBIkCg1QYWdlVGVtcGxhdGVzGAEgAygLMg0uUGFnZVRl",
            "bXBsYXRlEhkKCVJ1bGVzTGlzdBgCIAMoCzIGLlJ1bGVzIkwKBVJ1bGVzEg4K",
            "Bk1ha2VJZBgBIAEoBRIPCgdNb2RlbElkGAIgASgFEg4KBkNpdHlJZBgDIAEo",
            "BRISCgpDYW1wYWlnbklkGAQgASgFIjkKEVByb3BlcnR5VGVtcGxhdGVzEiQK",
            "DVBhZ2VUZW1wbGF0ZXMYASADKAsyDS5QYWdlVGVtcGxhdGUiTgoLR2VvTG9j",
            "YXRpb24SDgoGQ2l0eUlkGAEgASgFEg4KBlpvbmVJZBgCIAEoBRIOCgZBcmVh",
            "SWQYAyABKAUSDwoHU3RhdGVJZBgEIAEoBSLzAQoPQ2FtcGFpZ25SZXF1ZXN0",
            "EiIKDFVzZXJMb2NhdGlvbhgBIAEoCzIMLkdlb0xvY2F0aW9uEg0KBU1vZGVs",
            "GAIgASgFEgwKBE1ha2UYAyABKAUSEgoKQ2FtcGFpZ25JZBgEIAEoBRIQCghQ",
            "bGF0Zm9ybRgFIAEoBRIVCg1BcHBsaWNhdGlvbklkGAYgASgFEhoKElNob3dS",
            "ZWNvbW1lbmRhdGlvbhgHIAEoCBIUCgxOb1pvbmVGaWx0ZXIYCCABKAgSFQoN",
            "RGVhbGVyTG9jYXRvchgJIAEoCBIZChFEZWFsZXJBZG1pbkZpbHRlchgKIAEo",
            "CDLJIwoJQ2FtcGFpZ25zEjIKFkdldENhbXBhaWduRGV0YWlsc0J5SWQSCy5D",
            "YW1wYWlnbklkGgkuQ2FtcGFpZ24iABI5Ch1HZXRSdW5uaW5nQ2FtcGFpZ25E",
            "ZXRhaWxzQnlJZBILLkNhbXBhaWduSWQaCS5DYW1wYWlnbiIAEi0KDkNyZWF0",
            "ZUNhbXBhaWduEgkuQ2FtcGFpZ24aDi5SZXF1ZXN0U3RhdHVzIgASLQoOVXBk",
            "YXRlQ2FtcGFpZ24SCS5DYW1wYWlnbhoOLlJlcXVlc3RTdGF0dXMiABI8ChRV",
            "cGRhdGVDYW1wYWlnblN0YXR1cxIULlVwZGF0ZVN0YXR1c1JlcXVlc3QaDC5C",
            "b29sTWVzc2FnZSIAEj4KG1VwZGF0ZUNhbXBhaWduUnVubmluZ1N0YXR1cxIP",
            "LkNhbXBhaWduU3RhdHVzGgwuQm9vbE1lc3NhZ2UiABIyChVHZXRBbGxDYW1w",
            "YWlnbkRldGFpbHMSCC5Ob0lucHV0Gg0uQ2FtcGFpZ25MaXN0IgASOwofR2V0",
            "Q2FtcGFpZ25zT25Nb2RlbENpdHlQbGF0Zm9ybRIHLlBRUnVsZRoNLkNhbXBh",
            "aWduTGlzdCIAEjUKGEdldEFjdGl2ZUNhbXBhaWduRGV0YWlscxIILk5vSW5w",
            "dXQaDS5DYW1wYWlnbkxpc3QiABJCChxHZXRDYW1wYWlnbkRldGFpbHNCeUNy",
            "aXRlcmlhEhEuQ2FtcGFpZ25Dcml0ZXJpYRoNLkNhbXBhaWduTGlzdCIAEjIK",
            "FlNldFJ1bm5pbmdTdGF0dXNBY3RpdmUSCC5Ob0lucHV0GgwuQm9vbE1lc3Nh",
            "Z2UiABJAChpHZXRNdWx0aXBsZUNhbXBhaWduRGV0YWlscxIRLkNhbXBhaWdu",
            "Q3JpdGVyaWEaDS5DYW1wYWlnbkxpc3QiABI2ChRGaW5kQ2FtcGFpZ25CeVBx",
            "UnVsZRIHLlBRUnVsZRoTLkNhbXBhaWduc1dpdGhDb3VudCIAEjwKEUdldENh",
            "bXBhaWduQ2l0aWVzEhQuQ2FtcGFpZ25DaXRpZXNJbnB1dBoPLkNhbXBhaWdu",
            "Q2l0aWVzIgASLgoTSXNDYW1wYWlnbkF2YWlsYWJsZRIHLlBRUnVsZRoMLkJv",
            "b2xNZXNzYWdlIgASLAoLR2V0Q2FtcGFpZ24SEC5DYW1wYWlnblJlcXVlc3Qa",
            "CS5DYW1wYWlnbiIAEjsKFkdldEFsbFJ1bm5pbmdDYW1wYWlnbnMSEC5DYW1w",
            "YWlnblJlcXVlc3QaDS5DYW1wYWlnbkxpc3QiABI9ChVHZXRBbGxUZW1wbGF0",
            "ZXNCeVBhZ2USDi5UZW1wbGF0ZUlucHV0GhIuUHJvcGVydHlUZW1wbGF0ZXMi",
            "ABIoCgpHZXRQUVJ1bGVzEgsuQ2FtcGFpZ25JZBoLLlBRUnVsZUxpc3QiABIu",
            "ChRHZXRQUVJ1bGVzQnlDcml0ZXJpYRIHLlBRUnVsZRoLLlBRUnVsZUxpc3Qi",
            "ABInCgxDcmVhdGVQUVJ1bGUSBy5QUVJ1bGUaDC5Cb29sTWVzc2FnZSIAEjQK",
            "DERlbGV0ZVBRUnVsZRIULkxvZ2dlZERlbGV0ZVJlcXVlc3QaDC5Cb29sTWVz",
            "c2FnZSIAEi8KFEdldFBRUnVsZVRvQmVEZWxldGVkEgguUnVsZUlkcxoLLlBR",
            "UnVsZUxpc3QiABIuChNHZXRBbGxDYW1wYWlnbnNSdWxlEgguTm9JbnB1dBoL",
            "LlBRUnVsZUxpc3QiABJAChZVcGRhdGVQUVJ1bGVzQnlNb2RlbElkEhYuUmVw",
            "bGFjaW5nTW9kZWxEZXRhaWxzGgwuQm9vbE1lc3NhZ2UiABI+ChdHZXRBbGxG",
            "ZWF0dXJlZENhbXBhaWducxIILk5vSW5wdXQaFy5GZWF0dXJlZEFkQ2FtcGFp",
            "Z25MaXN0IgASQQoYQ3JlYXRlRmVhdHVyZWRBZENhbXBhaWduEhMuRmVhdHVy",
            "ZWRBZENhbXBhaWduGg4uUmVxdWVzdFN0YXR1cyIAEj8KGFVwZGF0ZUZlYXR1",
            "cmVkQWRDYW1wYWlnbhITLkZlYXR1cmVkQWRDYW1wYWlnbhoMLkJvb2xNZXNz",
            "YWdlIgASPgoWVXBkYXRlRmVhdHVyZWRBZFN0YXR1cxIULlVwZGF0ZVN0YXR1",
            "c1JlcXVlc3QaDC5Cb29sTWVzc2FnZSIAEjgKF0NoZWNrTW9kZWxJZEZvckNh",
            "bXBhaWduEhQuQ2FtcGFpZ25DaXRpZXNJbnB1dBoFLkl0ZW0iABIxChFHZXRB",
            "bGxGZWF0dXJlZENhchIILk5vSW5wdXQaEC5GZWF0dXJlZENhckxpc3QiABJA",
            "ChhHZXRTcG9uc29yZWRHbG9iYWxTZWFyY2gSCC5Nb2RlbElkGhguR2xvYmFs",
            "U2VhcmNoRmVhdHVyZWRDYXIiABI3ChBHZXRUYXJnZXRNb2RlbElkEgsuQ2Ft",
            "cGFpZ25JZBoULkdsb2JhbFNlYXJjaE1vZGVsSWQiABI0ChVGZWF0dXJlZENh",
            "bXBhaWduRXhpc3QSCy5DYW1wYWlnbklkGgwuQm9vbE1lc3NhZ2UiABI3ChNH",
            "ZXRGZWF0dXJlZE1vZGVsSWRzEgguTm9JbnB1dBoULkdsb2JhbFNlYXJjaE1v",
            "ZGVsSWQiABI0ChFBZGRGZWF0dXJlZEFkUnVsZRIPLkZlYXR1cmVkQWRSdWxl",
            "GgwuQm9vbE1lc3NhZ2UiABI9ChVEZWxldGVGZWF0dXJlZEFkUnVsZXMSFC5M",
            "b2dnZWREZWxldGVSZXF1ZXN0GgwuQm9vbE1lc3NhZ2UiABI/ChJHZXRGZWF0",
            "dXJlZEFkUnVsZXMSEi5GZWF0dXJlZFJ1bGVJbnB1dBoTLkZlYXR1cmVkQWRS",
            "dWxlTGlzdCIAElUKIEdldFBhaWRDcm9zc1NlbGxDYW1wYWlnblBhbkluZGlh",
            "EhcuQ3Jvc3NTZWxsQ2FtcGFpZ25JbnB1dBoWLkNyb3NzU2VsbENhbXBhaWdu",
            "TGlzdCIAElsKJkdldFBhaWRDcm9zc1NlbGxDYW1wYWlnbkZvclZlcnNpb25D",
            "aXR5EhcuQ3Jvc3NTZWxsQ2FtcGFpZ25JbnB1dBoWLkNyb3NzU2VsbENhbXBh",
            "aWduTGlzdCIAEk0KGUdldEhvdXNlQ3Jvc3NTZWxsVmVyc2lvbnMSFy5Dcm9z",
            "c1NlbGxDYW1wYWlnbklucHV0GhUuRmVhdHVyZWRWZXJzaW9uc0xpc3QiABJV",
            "CiFHZXRIb3VzZUNyb3NzU2VsbFZlcnNpb25zUGFuSW5kaWESFy5Dcm9zc1Nl",
            "bGxDYW1wYWlnbklucHV0GhUuRmVhdHVyZWRWZXJzaW9uc0xpc3QiABJNChhH",
            "ZXRQYWlkQ3Jvc3NTZWxsQ2FtcGFpZ24SFy5Dcm9zc1NlbGxDYW1wYWlnbklu",
            "cHV0GhYuQ3Jvc3NTZWxsQ2FtcGFpZ25MaXN0IgASTgoaR2V0SG91c2VDcm9z",
            "c1NlbGxDYW1wYWlnbnMSFy5Dcm9zc1NlbGxDYW1wYWlnbklucHV0GhUuRmVh",
            "dHVyZWRWZXJzaW9uc0xpc3QiABJWChpHZXRTcG9uc29yZWRDYXJDb21wYXJp",
            "c2lvbhIZLlNwb25zb3JlZENvbXBhcmlzb25JbnB1dBobLlNwb25zb3JlZENh",
            "ckNvbXBhcmlzb25EYXRhIgASQQoVR2V0Q2FtcGFpZ25UZW1wbGF0ZUlkEhIu",
            "UFFUZW1wbGF0ZU1hcHBpbmcaEi5QUVRlbXBsYXRlTWFwcGluZyIAEkEKHFVw",
            "ZGF0ZUNhbXBhaWduVGVtcGxhdGVTdGF0dXMSES5QUVRlbXBsYXRlU3RhdHVz",
            "GgwuQm9vbE1lc3NhZ2UiABI7ChVTYXZlUFFUZW1wbGF0ZU1hcHBpbmcSEi5Q",
            "UVRlbXBsYXRlTWFwcGluZxoMLkJvb2xNZXNzYWdlIgASQgoZR2V0VGVtcGxh",
            "dGVNYXBwaW5nRGV0YWlscxILLkNhbXBhaWduSWQaFi5QUVRlbXBsYXRlTWFw",
            "cGluZ0xpc3QiABI0ChVEZWxldGVUZW1wbGF0ZU1hcHBpbmcSCy5DYW1wYWln",
            "bklkGgwuQm9vbE1lc3NhZ2UiABJDCh1VcGRhdGVDYW1wYWlnblRlbXBsYXRl",
            "TWFwcGluZxISLlBRVGVtcGxhdGVNYXBwaW5nGgwuQm9vbE1lc3NhZ2UiABJD",
            "Ch1EZWxldGVDYW1wYWlnblRlbXBsYXRlTWFwcGluZxISLlBRVGVtcGxhdGVN",
            "YXBwaW5nGgwuQm9vbE1lc3NhZ2UiABJmCjBHZXREZWFsZXJMb2NhdG9yQ29u",
            "ZmlndXJhdGlvbkRldGFpbHNCeUNhbXBhaWduSWQSCy5DYW1wYWlnbklkGiMu",
            "RGVhbGVyTG9jYXRvckNvbmZpZ3VyYXRpb25SdWxlTGlzdCIAElkKJENyZWF0",
            "ZURlYWxlckxvY2F0b3JDb25maWd1cmF0aW9uUnVsZRIfLkRlYWxlckxvY2F0",
            "b3JDb25maWd1cmF0aW9uUnVsZRoOLlJlcXVlc3RTdGF0dXMiABJTCiBEZWxl",
            "dGVEZWFsZXJMb2NhdG9yQ29uZmlndXJhdGlvbhIfLkRlYWxlckxvY2F0b3JD",
            "b25maWd1cmF0aW9uUnVsZRoMLkJvb2xNZXNzYWdlIgASMQoUR2V0RGVhbGVy",
            "c09uTWFrZUNpdHkSCS5NYWtlQ2l0eRoMLkRlYWxlcnNMaXN0IgASLwoXR2V0",
            "UHJlbWl1bURlYWxlckRldGFpbHMSCS5EZWFsZXJJZBoHLkRlYWxlciIAEjkK",
            "HEdldERlYWxlckRldGFpbHNCeUNhbXBhaWduSWQSCy5DYW1wYWlnbklkGgwu",
            "RGVhbGVyc0xpc3QSOgokR2V0RGVhbGVyTG9jYXRvckNhbXBhaWduSWRPbkRl",
            "YWxlcklkEgkuRGVhbGVySWQaBS5JdGVtIgASNQoWQ2xlYXJDYW1wYWlnbkNh",
            "Y2hlQnlJZBILLkNhbXBhaWduSWQaDC5Cb29sTWVzc2FnZSIAEjYKF0NoZWNr",
            "Q2xlYXJDYW1wYWlnbkNhY2hlEgsuQ2FtcGFpZ25JZBoMLkJvb2xNZXNzYWdl",
            "IgASNgoXQ2xlYXJBbGxDYWNoZU9uQ2FtcGFpZ24SCy5DYW1wYWlnbklkGgwu",
            "Qm9vbE1lc3NhZ2UiABJACiFDbGVhckNhbXBhaWduQ2FjaGVPbkNvbmZpZ3Vy",
            "YXRpb24SCy5QUVJ1bGVMaXN0GgwuQm9vbE1lc3NhZ2UiABIxChJDbGVhckNh",
            "bXBhaWduQ2FjaGUSCy5DYW1wYWlnbklkGgwuQm9vbE1lc3NhZ2UiABI0ChdD",
            "bGVhckFsbENhY2hlT25EZWFsZXJJZBIJLkRlYWxlcklkGgwuQm9vbE1lc3Nh",
            "Z2UiABI3ChpDbGVhckRlYWxlckNhY2hlQnlEZWFsZXJJZBIJLkRlYWxlcklk",
            "GgwuQm9vbE1lc3NhZ2UiABI7ChxDbGVhckRlYWxlckNhY2hlQnlDYW1wYWln",
            "bklkEgsuQ2FtcGFpZ25JZBoMLkJvb2xNZXNzYWdlIgASTwoXQ2xlYXJEZWFs",
            "ZXJDYWNoZUJ5UnVsZXMSJC5EZWFsZXJMb2NhdG9yQ29uZmlndXJhdGlvbkNh",
            "Y2hlTGlzdBoMLkJvb2xNZXNzYWdlIgASNgoXQ2xlYXJQYWlkQ3Jvc3NTZWxs",
            "Q2FjaGUSCy5DYW1wYWlnbklkGgwuQm9vbE1lc3NhZ2UiABJRCh5DbGVhclBh",
            "aWRDcm9zc1NlbGxDYWNoZUJ5UnVsZXMSHy5DYW1wYWlnbkNvbmZpZ3VyYXRp",
            "b25DYWNoZUxpc3QaDC5Cb29sTWVzc2FnZSIAEjUKFkNsZWFyTGlua0NhbXBh",
            "aWduQ2FjaGUSCy5DYW1wYWlnbklkGgwuQm9vbE1lc3NhZ2UiABJDCh1DbGVh",
            "ckxpbmtDYW1wYWlnbkNhY2hlRm9yUGFnZRISLlBRVGVtcGxhdGVNYXBwaW5n",
            "GgwuQm9vbE1lc3NhZ2UiABInCgVDaGVjaxIILk5vSW5wdXQaFC5IZWFsdGhD",
            "aGVja1Jlc3BvbnNlQhqqAhdQcm90b0J1ZkNsYXNzLkNhbXBhaWduc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtoBufClass.Common.CommonReflection.Descriptor, global::ProtoBufClass.Health.HealthReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignId), global::ProtoBufClass.Campaigns.CampaignId.Parser, new[]{ "Id", "UseCache", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.Campaign), global::ProtoBufClass.Campaigns.Campaign.Parser, new[]{ "Id", "DealerId", "CampaignBehaviour", "DisplayName", "LinkText", "IsActive", "IsRunning", "PausedDate", "NotificationEmailId", "NotificationMobile", "Priority", "LeadPanel", "IsDesktop", "IsMobile", "IsAndroid", "IsIPhone", "EnableUserEmail", "EnableUserSMS", "EnableDealerEmail", "EnableDealerSMS", "IsDefaultNumber", "IsThirdPartyCampaign", "IsFeaturedEnabled", "ShowEmail", "ShowInRecommendation", "UpdatedOn", "UpdatedBy", "ApplicationId", "IsPqRuleExist", "IsCrossSellRuleExist", "IsDealerLocatorRuleExist", "IsCVL", "ZoneId", "LeadDuplication", "PhoneNumber", "IsCarTrade", "IsCarWale", "AssignedTemplateId", "AssignedGroupId", "CTALinkText", "ShowWithoutCity", "CitiesListType", "IsBikeWale", "CampaignType", "Distance", "MutualLeads", "DealerAdminId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.FeaturedAdCampaign), global::ProtoBufClass.Campaigns.FeaturedAdCampaign.Parser, new[]{ "Campaign", "StartDate", "EndDate", "IsActive", "User", "UpdatedOn", "CampaignCategory", "ExternalLinkText", "LinkClickTracker", "CarNameClickTracker", "CarImageClickTracker" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.PQRule), global::ProtoBufClass.Campaigns.PQRule.Parser, new[]{ "Id", "CampaignId", "Make", "Model", "State", "City", "Zone", "User", "ListModelId", "ListCityId", "Platform", "ApplicationId", "Count", "ListZoneId", "Page", "ShowCompletedCampaigns", "NoZoneFilter", "DealerLocator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.PQRuleList), global::ProtoBufClass.Campaigns.PQRuleList.Parser, new[]{ "LstPQRule" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.PQTemplateStatus), global::ProtoBufClass.Campaigns.PQTemplateStatus.Parser, new[]{ "Id", "IsDesktop", "IsMobile", "IsAndroid", "IsIPhone", "DisplayName", "LinkText", "User", "CTALinkText", "ShowInRecommendation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.PQTemplateMapping), global::ProtoBufClass.Campaigns.PQTemplateMapping.Parser, new[]{ "Id", "AssignedGroupId", "AssignedTemplateId", "PlatformId", "ApplicationId", "PageId", "PropertyId", "Platform", "Application", "PageName", "Property", "TemplateName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.FeaturedAdRule), global::ProtoBufClass.Campaigns.FeaturedAdRule.Parser, new[]{ "Id", "FeaturedAd", "TargetMake", "TargetModel", "TargetVersion", "FeaturedMake", "FeaturedModel", "FeaturedVersion", "State", "City", "Zone", "CarImpressionTracker", "User", "AddedOn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.FeaturedRuleInput), global::ProtoBufClass.Campaigns.FeaturedRuleInput.Parser, new[]{ "Campaign", "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.FeaturedAdRuleList), global::ProtoBufClass.Campaigns.FeaturedAdRuleList.Parser, new[]{ "LstFeaturedAdRule" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.FeaturedAdCampaignList), global::ProtoBufClass.Campaigns.FeaturedAdCampaignList.Parser, new[]{ "Campaign" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CrossSellCampaignInput), global::ProtoBufClass.Campaigns.CrossSellCampaignInput.Parser, new[]{ "CityId", "ZoneId", "TargetVersionId", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.FeaturedVersionsList), global::ProtoBufClass.Campaigns.FeaturedVersionsList.Parser, new[]{ "Versions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CrossSellCampaign), global::ProtoBufClass.Campaigns.CrossSellCampaign.Parser, new[]{ "CampaignId", "Version", "ZoneId", "IsCarwale", "IsCarTrade" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignPlatform), global::ProtoBufClass.Campaigns.CampaignPlatform.Parser, new[]{ "Id", "PlatformId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.PQTemplateMappingList), global::ProtoBufClass.Campaigns.PQTemplateMappingList.Parser, new[]{ "TemplateMapDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.RuleIds), global::ProtoBufClass.Campaigns.RuleIds.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignIdList), global::ProtoBufClass.Campaigns.CampaignIdList.Parser, new[]{ "CampaignIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignList), global::ProtoBufClass.Campaigns.CampaignList.Parser, new[]{ "Campaigns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CrossSellCampaignList), global::ProtoBufClass.Campaigns.CrossSellCampaignList.Parser, new[]{ "CrossSellCampaign" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRule), global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRule.Parser, new[]{ "Id", "CampaignId", "DealerId", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRuleList), global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRuleList.Parser, new[]{ "DealerLocatorConfiguration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.GlobalSearchFeaturedCar), global::ProtoBufClass.Campaigns.GlobalSearchFeaturedCar.Parser, new[]{ "MakeId", "MakeName", "ModelId", "ModelName", "RootId", "RootName", "IsUpcoming", "MaskingName", "OutputName", "TargetModelId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.FeaturedCarList), global::ProtoBufClass.Campaigns.FeaturedCarList.Parser, new[]{ "FeaturedCar" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignStatus), global::ProtoBufClass.Campaigns.CampaignStatus.Parser, new[]{ "Id", "RunningStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.Dealer), global::ProtoBufClass.Campaigns.Dealer.Parser, new[]{ "Dealer_", "Address", "EmailId", "PinCode", "FaxNo", "WebsiteUrl", "MobileNo", "LandLineNo", "Make", "State", "City", "Latitude", "Longitude", "IsLocatorActive", "DealerLocatorConfigurationId", "StartTime", "EndTime", "FirstName", "LastName", "LandlineCode", "ProfilePhotoHostUrl", "ProfilePhotoUrl", "CampaignId", "ContactNumber", "CampaignIsRunning", "CampaignIsActive", "IsCarwale", "IsCarTrade" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.DealersList), global::ProtoBufClass.Campaigns.DealersList.Parser, new[]{ "DealerDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.MakeCity), global::ProtoBufClass.Campaigns.MakeCity.Parser, new[]{ "Make", "City", "State", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.DealerId), global::ProtoBufClass.Campaigns.DealerId.Parser, new[]{ "Id", "ApplicationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.SponsoredComparisonInput), global::ProtoBufClass.Campaigns.SponsoredComparisonInput.Parser, new[]{ "VersionIds", "CampaignCategory", "CityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.SponsoredCarComparisonData), global::ProtoBufClass.Campaigns.SponsoredCarComparisonData.Parser, new[]{ "ExternalLinkText", "ExternalLinkTracker", "CarNameClickTracker", "CarImageClickTracker", "CarImpressionTracker", "FeaturedVersionId", "TargetVersionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignCriteria), global::ProtoBufClass.Campaigns.CampaignCriteria.Parser, new[]{ "DealerId", "UseCache", "CampaignIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCache), global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCache.Parser, new[]{ "StateId", "CityId", "MakeId", "DealerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignConfigurationCache), global::ProtoBufClass.Campaigns.CampaignConfigurationCache.Parser, new[]{ "StateId", "CityId", "ZoneId", "MakeId", "ModelId", "VersionId", "DealerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCacheList), global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCacheList.Parser, new[]{ "DealerLocatorConfigList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignConfigurationCacheList), global::ProtoBufClass.Campaigns.CampaignConfigurationCacheList.Parser, new[]{ "CampaignConfigLst" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.ReplacingModelDetails), global::ProtoBufClass.Campaigns.ReplacingModelDetails.Parser, new[]{ "NewModelId", "ReplacingModelId", "UpdatedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignsWithCount), global::ProtoBufClass.Campaigns.CampaignsWithCount.Parser, new[]{ "Campaigns", "DealerCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignCitiesInput), global::ProtoBufClass.Campaigns.CampaignCitiesInput.Parser, new[]{ "CampaignId", "ModelId", "UseCache" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignCities), global::ProtoBufClass.Campaigns.CampaignCities.Parser, new[]{ "Type", "Cities" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.ModelId), global::ProtoBufClass.Campaigns.ModelId.Parser, new[]{ "TargetModelId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.GlobalSearchModelId), global::ProtoBufClass.Campaigns.GlobalSearchModelId.Parser, new[]{ "TargetCarModelId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.TemplateInput), global::ProtoBufClass.Campaigns.TemplateInput.Parser, new[]{ "PlatformId", "ApplicationId", "PageId", "MakeId", "ModelId", "CityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.PageTemplate), global::ProtoBufClass.Campaigns.PageTemplate.Parser, new[]{ "TemplateId", "PropertyId", "Priority", "CampaignId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.TemplateList), global::ProtoBufClass.Campaigns.TemplateList.Parser, new[]{ "PageTemplates", "RulesList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.Rules), global::ProtoBufClass.Campaigns.Rules.Parser, new[]{ "MakeId", "ModelId", "CityId", "CampaignId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.PropertyTemplates), global::ProtoBufClass.Campaigns.PropertyTemplates.Parser, new[]{ "PageTemplates" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.GeoLocation), global::ProtoBufClass.Campaigns.GeoLocation.Parser, new[]{ "CityId", "ZoneId", "AreaId", "StateId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoBufClass.Campaigns.CampaignRequest), global::ProtoBufClass.Campaigns.CampaignRequest.Parser, new[]{ "UserLocation", "Model", "Make", "CampaignId", "Platform", "ApplicationId", "ShowRecommendation", "NoZoneFilter", "DealerLocator", "DealerAdminFilter" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CampaignId : pb::IMessage<CampaignId> {
    private static readonly pb::MessageParser<CampaignId> _parser = new pb::MessageParser<CampaignId>(() => new CampaignId());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignId(CampaignId other) : this() {
      id_ = other.id_;
      UseCache = other.useCache_ != null ? other.UseCache.Clone() : null;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignId Clone() {
      return new CampaignId(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "UseCache" field.</summary>
    public const int UseCacheFieldNumber = 2;
    private global::ProtoBufClass.Common.BoolMessage useCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.BoolMessage UseCache {
      get { return useCache_; }
      set {
        useCache_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(UseCache, other.UseCache)) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (useCache_ != null) hash ^= UseCache.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (useCache_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UseCache);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (useCache_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UseCache);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.useCache_ != null) {
        if (useCache_ == null) {
          useCache_ = new global::ProtoBufClass.Common.BoolMessage();
        }
        UseCache.MergeFrom(other.UseCache);
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (useCache_ == null) {
              useCache_ = new global::ProtoBufClass.Common.BoolMessage();
            }
            input.ReadMessage(useCache_);
            break;
          }
          case 24: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Campaign : pb::IMessage<Campaign> {
    private static readonly pb::MessageParser<Campaign> _parser = new pb::MessageParser<Campaign>(() => new Campaign());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Campaign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Campaign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Campaign(Campaign other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      dealerId_ = other.dealerId_;
      campaignBehaviour_ = other.campaignBehaviour_;
      displayName_ = other.displayName_;
      linkText_ = other.linkText_;
      isActive_ = other.isActive_;
      isRunning_ = other.isRunning_;
      pausedDate_ = other.pausedDate_;
      notificationEmailId_ = other.notificationEmailId_;
      notificationMobile_ = other.notificationMobile_;
      priority_ = other.priority_;
      leadPanel_ = other.leadPanel_;
      isDesktop_ = other.isDesktop_;
      isMobile_ = other.isMobile_;
      isAndroid_ = other.isAndroid_;
      isIPhone_ = other.isIPhone_;
      enableUserEmail_ = other.enableUserEmail_;
      enableUserSMS_ = other.enableUserSMS_;
      enableDealerEmail_ = other.enableDealerEmail_;
      enableDealerSMS_ = other.enableDealerSMS_;
      isDefaultNumber_ = other.isDefaultNumber_;
      isThirdPartyCampaign_ = other.isThirdPartyCampaign_;
      isFeaturedEnabled_ = other.isFeaturedEnabled_;
      showEmail_ = other.showEmail_;
      showInRecommendation_ = other.showInRecommendation_;
      updatedOn_ = other.updatedOn_;
      updatedBy_ = other.updatedBy_;
      applicationId_ = other.applicationId_;
      isPqRuleExist_ = other.isPqRuleExist_;
      isCrossSellRuleExist_ = other.isCrossSellRuleExist_;
      isDealerLocatorRuleExist_ = other.isDealerLocatorRuleExist_;
      isCVL_ = other.isCVL_;
      zoneId_ = other.zoneId_;
      leadDuplication_ = other.leadDuplication_;
      phoneNumber_ = other.phoneNumber_;
      isCarTrade_ = other.isCarTrade_;
      isCarWale_ = other.isCarWale_;
      assignedTemplateId_ = other.assignedTemplateId_;
      assignedGroupId_ = other.assignedGroupId_;
      cTALinkText_ = other.cTALinkText_;
      showWithoutCity_ = other.showWithoutCity_;
      citiesListType_ = other.citiesListType_;
      isBikeWale_ = other.isBikeWale_;
      campaignType_ = other.campaignType_;
      distance_ = other.distance_;
      mutualLeads_ = other.mutualLeads_;
      dealerAdminId_ = other.dealerAdminId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Campaign Clone() {
      return new Campaign(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::ProtoBufClass.Campaigns.CampaignId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "DealerId" field.</summary>
    public const int DealerIdFieldNumber = 2;
    private int dealerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerId {
      get { return dealerId_; }
      set {
        dealerId_ = value;
      }
    }

    /// <summary>Field number for the "CampaignBehaviour" field.</summary>
    public const int CampaignBehaviourFieldNumber = 3;
    private int campaignBehaviour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignBehaviour {
      get { return campaignBehaviour_; }
      set {
        campaignBehaviour_ = value;
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkText" field.</summary>
    public const int LinkTextFieldNumber = 5;
    private string linkText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkText {
      get { return linkText_; }
      set {
        linkText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsActive" field.</summary>
    public const int IsActiveFieldNumber = 6;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "IsRunning" field.</summary>
    public const int IsRunningFieldNumber = 7;
    private int isRunning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsRunning {
      get { return isRunning_; }
      set {
        isRunning_ = value;
      }
    }

    /// <summary>Field number for the "PausedDate" field.</summary>
    public const int PausedDateFieldNumber = 8;
    private string pausedDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PausedDate {
      get { return pausedDate_; }
      set {
        pausedDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NotificationEmailId" field.</summary>
    public const int NotificationEmailIdFieldNumber = 9;
    private string notificationEmailId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationEmailId {
      get { return notificationEmailId_; }
      set {
        notificationEmailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NotificationMobile" field.</summary>
    public const int NotificationMobileFieldNumber = 10;
    private string notificationMobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationMobile {
      get { return notificationMobile_; }
      set {
        notificationMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 11;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "LeadPanel" field.</summary>
    public const int LeadPanelFieldNumber = 12;
    private int leadPanel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeadPanel {
      get { return leadPanel_; }
      set {
        leadPanel_ = value;
      }
    }

    /// <summary>Field number for the "IsDesktop" field.</summary>
    public const int IsDesktopFieldNumber = 13;
    private bool isDesktop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDesktop {
      get { return isDesktop_; }
      set {
        isDesktop_ = value;
      }
    }

    /// <summary>Field number for the "IsMobile" field.</summary>
    public const int IsMobileFieldNumber = 14;
    private bool isMobile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMobile {
      get { return isMobile_; }
      set {
        isMobile_ = value;
      }
    }

    /// <summary>Field number for the "IsAndroid" field.</summary>
    public const int IsAndroidFieldNumber = 15;
    private bool isAndroid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAndroid {
      get { return isAndroid_; }
      set {
        isAndroid_ = value;
      }
    }

    /// <summary>Field number for the "IsIPhone" field.</summary>
    public const int IsIPhoneFieldNumber = 16;
    private bool isIPhone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIPhone {
      get { return isIPhone_; }
      set {
        isIPhone_ = value;
      }
    }

    /// <summary>Field number for the "EnableUserEmail" field.</summary>
    public const int EnableUserEmailFieldNumber = 17;
    private bool enableUserEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableUserEmail {
      get { return enableUserEmail_; }
      set {
        enableUserEmail_ = value;
      }
    }

    /// <summary>Field number for the "EnableUserSMS" field.</summary>
    public const int EnableUserSMSFieldNumber = 18;
    private bool enableUserSMS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableUserSMS {
      get { return enableUserSMS_; }
      set {
        enableUserSMS_ = value;
      }
    }

    /// <summary>Field number for the "EnableDealerEmail" field.</summary>
    public const int EnableDealerEmailFieldNumber = 19;
    private bool enableDealerEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableDealerEmail {
      get { return enableDealerEmail_; }
      set {
        enableDealerEmail_ = value;
      }
    }

    /// <summary>Field number for the "EnableDealerSMS" field.</summary>
    public const int EnableDealerSMSFieldNumber = 20;
    private bool enableDealerSMS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableDealerSMS {
      get { return enableDealerSMS_; }
      set {
        enableDealerSMS_ = value;
      }
    }

    /// <summary>Field number for the "IsDefaultNumber" field.</summary>
    public const int IsDefaultNumberFieldNumber = 21;
    private int isDefaultNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsDefaultNumber {
      get { return isDefaultNumber_; }
      set {
        isDefaultNumber_ = value;
      }
    }

    /// <summary>Field number for the "IsThirdPartyCampaign" field.</summary>
    public const int IsThirdPartyCampaignFieldNumber = 22;
    private bool isThirdPartyCampaign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsThirdPartyCampaign {
      get { return isThirdPartyCampaign_; }
      set {
        isThirdPartyCampaign_ = value;
      }
    }

    /// <summary>Field number for the "IsFeaturedEnabled" field.</summary>
    public const int IsFeaturedEnabledFieldNumber = 23;
    private bool isFeaturedEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFeaturedEnabled {
      get { return isFeaturedEnabled_; }
      set {
        isFeaturedEnabled_ = value;
      }
    }

    /// <summary>Field number for the "ShowEmail" field.</summary>
    public const int ShowEmailFieldNumber = 24;
    private bool showEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowEmail {
      get { return showEmail_; }
      set {
        showEmail_ = value;
      }
    }

    /// <summary>Field number for the "ShowInRecommendation" field.</summary>
    public const int ShowInRecommendationFieldNumber = 25;
    private bool showInRecommendation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowInRecommendation {
      get { return showInRecommendation_; }
      set {
        showInRecommendation_ = value;
      }
    }

    /// <summary>Field number for the "UpdatedOn" field.</summary>
    public const int UpdatedOnFieldNumber = 26;
    private string updatedOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedOn {
      get { return updatedOn_; }
      set {
        updatedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UpdatedBy" field.</summary>
    public const int UpdatedByFieldNumber = 27;
    private string updatedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedBy {
      get { return updatedBy_; }
      set {
        updatedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 28;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "IsPqRuleExist" field.</summary>
    public const int IsPqRuleExistFieldNumber = 29;
    private bool isPqRuleExist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPqRuleExist {
      get { return isPqRuleExist_; }
      set {
        isPqRuleExist_ = value;
      }
    }

    /// <summary>Field number for the "IsCrossSellRuleExist" field.</summary>
    public const int IsCrossSellRuleExistFieldNumber = 30;
    private bool isCrossSellRuleExist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCrossSellRuleExist {
      get { return isCrossSellRuleExist_; }
      set {
        isCrossSellRuleExist_ = value;
      }
    }

    /// <summary>Field number for the "IsDealerLocatorRuleExist" field.</summary>
    public const int IsDealerLocatorRuleExistFieldNumber = 31;
    private bool isDealerLocatorRuleExist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDealerLocatorRuleExist {
      get { return isDealerLocatorRuleExist_; }
      set {
        isDealerLocatorRuleExist_ = value;
      }
    }

    /// <summary>Field number for the "IsCVL" field.</summary>
    public const int IsCVLFieldNumber = 32;
    private bool isCVL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCVL {
      get { return isCVL_; }
      set {
        isCVL_ = value;
      }
    }

    /// <summary>Field number for the "ZoneId" field.</summary>
    public const int ZoneIdFieldNumber = 33;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "LeadDuplication" field.</summary>
    public const int LeadDuplicationFieldNumber = 34;
    private bool leadDuplication_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LeadDuplication {
      get { return leadDuplication_; }
      set {
        leadDuplication_ = value;
      }
    }

    /// <summary>Field number for the "PhoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 35;
    private string phoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCarTrade" field.</summary>
    public const int IsCarTradeFieldNumber = 36;
    private bool isCarTrade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCarTrade {
      get { return isCarTrade_; }
      set {
        isCarTrade_ = value;
      }
    }

    /// <summary>Field number for the "IsCarWale" field.</summary>
    public const int IsCarWaleFieldNumber = 37;
    private bool isCarWale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCarWale {
      get { return isCarWale_; }
      set {
        isCarWale_ = value;
      }
    }

    /// <summary>Field number for the "AssignedTemplateId" field.</summary>
    public const int AssignedTemplateIdFieldNumber = 38;
    private int assignedTemplateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AssignedTemplateId {
      get { return assignedTemplateId_; }
      set {
        assignedTemplateId_ = value;
      }
    }

    /// <summary>Field number for the "AssignedGroupId" field.</summary>
    public const int AssignedGroupIdFieldNumber = 39;
    private int assignedGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AssignedGroupId {
      get { return assignedGroupId_; }
      set {
        assignedGroupId_ = value;
      }
    }

    /// <summary>Field number for the "CTALinkText" field.</summary>
    public const int CTALinkTextFieldNumber = 40;
    private string cTALinkText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTALinkText {
      get { return cTALinkText_; }
      set {
        cTALinkText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowWithoutCity" field.</summary>
    public const int ShowWithoutCityFieldNumber = 41;
    private bool showWithoutCity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowWithoutCity {
      get { return showWithoutCity_; }
      set {
        showWithoutCity_ = value;
      }
    }

    /// <summary>Field number for the "CitiesListType" field.</summary>
    public const int CitiesListTypeFieldNumber = 42;
    private int citiesListType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CitiesListType {
      get { return citiesListType_; }
      set {
        citiesListType_ = value;
      }
    }

    /// <summary>Field number for the "IsBikeWale" field.</summary>
    public const int IsBikeWaleFieldNumber = 43;
    private bool isBikeWale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBikeWale {
      get { return isBikeWale_; }
      set {
        isBikeWale_ = value;
      }
    }

    /// <summary>Field number for the "CampaignType" field.</summary>
    public const int CampaignTypeFieldNumber = 44;
    private int campaignType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignType {
      get { return campaignType_; }
      set {
        campaignType_ = value;
      }
    }

    /// <summary>Field number for the "Distance" field.</summary>
    public const int DistanceFieldNumber = 45;
    private int distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "MutualLeads" field.</summary>
    public const int MutualLeadsFieldNumber = 46;
    private bool mutualLeads_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MutualLeads {
      get { return mutualLeads_; }
      set {
        mutualLeads_ = value;
      }
    }

    /// <summary>Field number for the "DealerAdminId" field.</summary>
    public const int DealerAdminIdFieldNumber = 47;
    private int dealerAdminId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerAdminId {
      get { return dealerAdminId_; }
      set {
        dealerAdminId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Campaign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Campaign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (DealerId != other.DealerId) return false;
      if (CampaignBehaviour != other.CampaignBehaviour) return false;
      if (DisplayName != other.DisplayName) return false;
      if (LinkText != other.LinkText) return false;
      if (IsActive != other.IsActive) return false;
      if (IsRunning != other.IsRunning) return false;
      if (PausedDate != other.PausedDate) return false;
      if (NotificationEmailId != other.NotificationEmailId) return false;
      if (NotificationMobile != other.NotificationMobile) return false;
      if (Priority != other.Priority) return false;
      if (LeadPanel != other.LeadPanel) return false;
      if (IsDesktop != other.IsDesktop) return false;
      if (IsMobile != other.IsMobile) return false;
      if (IsAndroid != other.IsAndroid) return false;
      if (IsIPhone != other.IsIPhone) return false;
      if (EnableUserEmail != other.EnableUserEmail) return false;
      if (EnableUserSMS != other.EnableUserSMS) return false;
      if (EnableDealerEmail != other.EnableDealerEmail) return false;
      if (EnableDealerSMS != other.EnableDealerSMS) return false;
      if (IsDefaultNumber != other.IsDefaultNumber) return false;
      if (IsThirdPartyCampaign != other.IsThirdPartyCampaign) return false;
      if (IsFeaturedEnabled != other.IsFeaturedEnabled) return false;
      if (ShowEmail != other.ShowEmail) return false;
      if (ShowInRecommendation != other.ShowInRecommendation) return false;
      if (UpdatedOn != other.UpdatedOn) return false;
      if (UpdatedBy != other.UpdatedBy) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (IsPqRuleExist != other.IsPqRuleExist) return false;
      if (IsCrossSellRuleExist != other.IsCrossSellRuleExist) return false;
      if (IsDealerLocatorRuleExist != other.IsDealerLocatorRuleExist) return false;
      if (IsCVL != other.IsCVL) return false;
      if (ZoneId != other.ZoneId) return false;
      if (LeadDuplication != other.LeadDuplication) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (IsCarTrade != other.IsCarTrade) return false;
      if (IsCarWale != other.IsCarWale) return false;
      if (AssignedTemplateId != other.AssignedTemplateId) return false;
      if (AssignedGroupId != other.AssignedGroupId) return false;
      if (CTALinkText != other.CTALinkText) return false;
      if (ShowWithoutCity != other.ShowWithoutCity) return false;
      if (CitiesListType != other.CitiesListType) return false;
      if (IsBikeWale != other.IsBikeWale) return false;
      if (CampaignType != other.CampaignType) return false;
      if (Distance != other.Distance) return false;
      if (MutualLeads != other.MutualLeads) return false;
      if (DealerAdminId != other.DealerAdminId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (DealerId != 0) hash ^= DealerId.GetHashCode();
      if (CampaignBehaviour != 0) hash ^= CampaignBehaviour.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (LinkText.Length != 0) hash ^= LinkText.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (IsRunning != 0) hash ^= IsRunning.GetHashCode();
      if (PausedDate.Length != 0) hash ^= PausedDate.GetHashCode();
      if (NotificationEmailId.Length != 0) hash ^= NotificationEmailId.GetHashCode();
      if (NotificationMobile.Length != 0) hash ^= NotificationMobile.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (LeadPanel != 0) hash ^= LeadPanel.GetHashCode();
      if (IsDesktop != false) hash ^= IsDesktop.GetHashCode();
      if (IsMobile != false) hash ^= IsMobile.GetHashCode();
      if (IsAndroid != false) hash ^= IsAndroid.GetHashCode();
      if (IsIPhone != false) hash ^= IsIPhone.GetHashCode();
      if (EnableUserEmail != false) hash ^= EnableUserEmail.GetHashCode();
      if (EnableUserSMS != false) hash ^= EnableUserSMS.GetHashCode();
      if (EnableDealerEmail != false) hash ^= EnableDealerEmail.GetHashCode();
      if (EnableDealerSMS != false) hash ^= EnableDealerSMS.GetHashCode();
      if (IsDefaultNumber != 0) hash ^= IsDefaultNumber.GetHashCode();
      if (IsThirdPartyCampaign != false) hash ^= IsThirdPartyCampaign.GetHashCode();
      if (IsFeaturedEnabled != false) hash ^= IsFeaturedEnabled.GetHashCode();
      if (ShowEmail != false) hash ^= ShowEmail.GetHashCode();
      if (ShowInRecommendation != false) hash ^= ShowInRecommendation.GetHashCode();
      if (UpdatedOn.Length != 0) hash ^= UpdatedOn.GetHashCode();
      if (UpdatedBy.Length != 0) hash ^= UpdatedBy.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (IsPqRuleExist != false) hash ^= IsPqRuleExist.GetHashCode();
      if (IsCrossSellRuleExist != false) hash ^= IsCrossSellRuleExist.GetHashCode();
      if (IsDealerLocatorRuleExist != false) hash ^= IsDealerLocatorRuleExist.GetHashCode();
      if (IsCVL != false) hash ^= IsCVL.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (LeadDuplication != false) hash ^= LeadDuplication.GetHashCode();
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (IsCarTrade != false) hash ^= IsCarTrade.GetHashCode();
      if (IsCarWale != false) hash ^= IsCarWale.GetHashCode();
      if (AssignedTemplateId != 0) hash ^= AssignedTemplateId.GetHashCode();
      if (AssignedGroupId != 0) hash ^= AssignedGroupId.GetHashCode();
      if (CTALinkText.Length != 0) hash ^= CTALinkText.GetHashCode();
      if (ShowWithoutCity != false) hash ^= ShowWithoutCity.GetHashCode();
      if (CitiesListType != 0) hash ^= CitiesListType.GetHashCode();
      if (IsBikeWale != false) hash ^= IsBikeWale.GetHashCode();
      if (CampaignType != 0) hash ^= CampaignType.GetHashCode();
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (MutualLeads != false) hash ^= MutualLeads.GetHashCode();
      if (DealerAdminId != 0) hash ^= DealerAdminId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (DealerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DealerId);
      }
      if (CampaignBehaviour != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CampaignBehaviour);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (LinkText.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LinkText);
      }
      if (IsActive != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsActive);
      }
      if (IsRunning != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(IsRunning);
      }
      if (PausedDate.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PausedDate);
      }
      if (NotificationEmailId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NotificationEmailId);
      }
      if (NotificationMobile.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NotificationMobile);
      }
      if (Priority != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Priority);
      }
      if (LeadPanel != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LeadPanel);
      }
      if (IsDesktop != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsDesktop);
      }
      if (IsMobile != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsMobile);
      }
      if (IsAndroid != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsAndroid);
      }
      if (IsIPhone != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsIPhone);
      }
      if (EnableUserEmail != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(EnableUserEmail);
      }
      if (EnableUserSMS != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(EnableUserSMS);
      }
      if (EnableDealerEmail != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(EnableDealerEmail);
      }
      if (EnableDealerSMS != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(EnableDealerSMS);
      }
      if (IsDefaultNumber != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(IsDefaultNumber);
      }
      if (IsThirdPartyCampaign != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsThirdPartyCampaign);
      }
      if (IsFeaturedEnabled != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsFeaturedEnabled);
      }
      if (ShowEmail != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(ShowEmail);
      }
      if (ShowInRecommendation != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(ShowInRecommendation);
      }
      if (UpdatedOn.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(UpdatedOn);
      }
      if (UpdatedBy.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(UpdatedBy);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(ApplicationId);
      }
      if (IsPqRuleExist != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IsPqRuleExist);
      }
      if (IsCrossSellRuleExist != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsCrossSellRuleExist);
      }
      if (IsDealerLocatorRuleExist != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(IsDealerLocatorRuleExist);
      }
      if (IsCVL != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(IsCVL);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(ZoneId);
      }
      if (LeadDuplication != false) {
        output.WriteRawTag(144, 2);
        output.WriteBool(LeadDuplication);
      }
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(PhoneNumber);
      }
      if (IsCarTrade != false) {
        output.WriteRawTag(160, 2);
        output.WriteBool(IsCarTrade);
      }
      if (IsCarWale != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(IsCarWale);
      }
      if (AssignedTemplateId != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(AssignedTemplateId);
      }
      if (AssignedGroupId != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(AssignedGroupId);
      }
      if (CTALinkText.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(CTALinkText);
      }
      if (ShowWithoutCity != false) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ShowWithoutCity);
      }
      if (CitiesListType != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(CitiesListType);
      }
      if (IsBikeWale != false) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsBikeWale);
      }
      if (CampaignType != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(CampaignType);
      }
      if (Distance != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(Distance);
      }
      if (MutualLeads != false) {
        output.WriteRawTag(240, 2);
        output.WriteBool(MutualLeads);
      }
      if (DealerAdminId != 0) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(DealerAdminId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (DealerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerId);
      }
      if (CampaignBehaviour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CampaignBehaviour);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (LinkText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkText);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (IsRunning != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsRunning);
      }
      if (PausedDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PausedDate);
      }
      if (NotificationEmailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationEmailId);
      }
      if (NotificationMobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationMobile);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (LeadPanel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeadPanel);
      }
      if (IsDesktop != false) {
        size += 1 + 1;
      }
      if (IsMobile != false) {
        size += 1 + 1;
      }
      if (IsAndroid != false) {
        size += 1 + 1;
      }
      if (IsIPhone != false) {
        size += 2 + 1;
      }
      if (EnableUserEmail != false) {
        size += 2 + 1;
      }
      if (EnableUserSMS != false) {
        size += 2 + 1;
      }
      if (EnableDealerEmail != false) {
        size += 2 + 1;
      }
      if (EnableDealerSMS != false) {
        size += 2 + 1;
      }
      if (IsDefaultNumber != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IsDefaultNumber);
      }
      if (IsThirdPartyCampaign != false) {
        size += 2 + 1;
      }
      if (IsFeaturedEnabled != false) {
        size += 2 + 1;
      }
      if (ShowEmail != false) {
        size += 2 + 1;
      }
      if (ShowInRecommendation != false) {
        size += 2 + 1;
      }
      if (UpdatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedOn);
      }
      if (UpdatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedBy);
      }
      if (ApplicationId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (IsPqRuleExist != false) {
        size += 2 + 1;
      }
      if (IsCrossSellRuleExist != false) {
        size += 2 + 1;
      }
      if (IsDealerLocatorRuleExist != false) {
        size += 2 + 1;
      }
      if (IsCVL != false) {
        size += 2 + 1;
      }
      if (ZoneId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (LeadDuplication != false) {
        size += 2 + 1;
      }
      if (PhoneNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (IsCarTrade != false) {
        size += 2 + 1;
      }
      if (IsCarWale != false) {
        size += 2 + 1;
      }
      if (AssignedTemplateId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AssignedTemplateId);
      }
      if (AssignedGroupId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AssignedGroupId);
      }
      if (CTALinkText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CTALinkText);
      }
      if (ShowWithoutCity != false) {
        size += 2 + 1;
      }
      if (CitiesListType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CitiesListType);
      }
      if (IsBikeWale != false) {
        size += 2 + 1;
      }
      if (CampaignType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CampaignType);
      }
      if (Distance != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Distance);
      }
      if (MutualLeads != false) {
        size += 2 + 1;
      }
      if (DealerAdminId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DealerAdminId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Campaign other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::ProtoBufClass.Campaigns.CampaignId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.DealerId != 0) {
        DealerId = other.DealerId;
      }
      if (other.CampaignBehaviour != 0) {
        CampaignBehaviour = other.CampaignBehaviour;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.LinkText.Length != 0) {
        LinkText = other.LinkText;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.IsRunning != 0) {
        IsRunning = other.IsRunning;
      }
      if (other.PausedDate.Length != 0) {
        PausedDate = other.PausedDate;
      }
      if (other.NotificationEmailId.Length != 0) {
        NotificationEmailId = other.NotificationEmailId;
      }
      if (other.NotificationMobile.Length != 0) {
        NotificationMobile = other.NotificationMobile;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.LeadPanel != 0) {
        LeadPanel = other.LeadPanel;
      }
      if (other.IsDesktop != false) {
        IsDesktop = other.IsDesktop;
      }
      if (other.IsMobile != false) {
        IsMobile = other.IsMobile;
      }
      if (other.IsAndroid != false) {
        IsAndroid = other.IsAndroid;
      }
      if (other.IsIPhone != false) {
        IsIPhone = other.IsIPhone;
      }
      if (other.EnableUserEmail != false) {
        EnableUserEmail = other.EnableUserEmail;
      }
      if (other.EnableUserSMS != false) {
        EnableUserSMS = other.EnableUserSMS;
      }
      if (other.EnableDealerEmail != false) {
        EnableDealerEmail = other.EnableDealerEmail;
      }
      if (other.EnableDealerSMS != false) {
        EnableDealerSMS = other.EnableDealerSMS;
      }
      if (other.IsDefaultNumber != 0) {
        IsDefaultNumber = other.IsDefaultNumber;
      }
      if (other.IsThirdPartyCampaign != false) {
        IsThirdPartyCampaign = other.IsThirdPartyCampaign;
      }
      if (other.IsFeaturedEnabled != false) {
        IsFeaturedEnabled = other.IsFeaturedEnabled;
      }
      if (other.ShowEmail != false) {
        ShowEmail = other.ShowEmail;
      }
      if (other.ShowInRecommendation != false) {
        ShowInRecommendation = other.ShowInRecommendation;
      }
      if (other.UpdatedOn.Length != 0) {
        UpdatedOn = other.UpdatedOn;
      }
      if (other.UpdatedBy.Length != 0) {
        UpdatedBy = other.UpdatedBy;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.IsPqRuleExist != false) {
        IsPqRuleExist = other.IsPqRuleExist;
      }
      if (other.IsCrossSellRuleExist != false) {
        IsCrossSellRuleExist = other.IsCrossSellRuleExist;
      }
      if (other.IsDealerLocatorRuleExist != false) {
        IsDealerLocatorRuleExist = other.IsDealerLocatorRuleExist;
      }
      if (other.IsCVL != false) {
        IsCVL = other.IsCVL;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.LeadDuplication != false) {
        LeadDuplication = other.LeadDuplication;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      if (other.IsCarTrade != false) {
        IsCarTrade = other.IsCarTrade;
      }
      if (other.IsCarWale != false) {
        IsCarWale = other.IsCarWale;
      }
      if (other.AssignedTemplateId != 0) {
        AssignedTemplateId = other.AssignedTemplateId;
      }
      if (other.AssignedGroupId != 0) {
        AssignedGroupId = other.AssignedGroupId;
      }
      if (other.CTALinkText.Length != 0) {
        CTALinkText = other.CTALinkText;
      }
      if (other.ShowWithoutCity != false) {
        ShowWithoutCity = other.ShowWithoutCity;
      }
      if (other.CitiesListType != 0) {
        CitiesListType = other.CitiesListType;
      }
      if (other.IsBikeWale != false) {
        IsBikeWale = other.IsBikeWale;
      }
      if (other.CampaignType != 0) {
        CampaignType = other.CampaignType;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      if (other.MutualLeads != false) {
        MutualLeads = other.MutualLeads;
      }
      if (other.DealerAdminId != 0) {
        DealerAdminId = other.DealerAdminId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::ProtoBufClass.Campaigns.CampaignId();
            }
            input.ReadMessage(id_);
            break;
          }
          case 16: {
            DealerId = input.ReadInt32();
            break;
          }
          case 24: {
            CampaignBehaviour = input.ReadInt32();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            LinkText = input.ReadString();
            break;
          }
          case 48: {
            IsActive = input.ReadBool();
            break;
          }
          case 56: {
            IsRunning = input.ReadInt32();
            break;
          }
          case 66: {
            PausedDate = input.ReadString();
            break;
          }
          case 74: {
            NotificationEmailId = input.ReadString();
            break;
          }
          case 82: {
            NotificationMobile = input.ReadString();
            break;
          }
          case 88: {
            Priority = input.ReadInt32();
            break;
          }
          case 96: {
            LeadPanel = input.ReadInt32();
            break;
          }
          case 104: {
            IsDesktop = input.ReadBool();
            break;
          }
          case 112: {
            IsMobile = input.ReadBool();
            break;
          }
          case 120: {
            IsAndroid = input.ReadBool();
            break;
          }
          case 128: {
            IsIPhone = input.ReadBool();
            break;
          }
          case 136: {
            EnableUserEmail = input.ReadBool();
            break;
          }
          case 144: {
            EnableUserSMS = input.ReadBool();
            break;
          }
          case 152: {
            EnableDealerEmail = input.ReadBool();
            break;
          }
          case 160: {
            EnableDealerSMS = input.ReadBool();
            break;
          }
          case 168: {
            IsDefaultNumber = input.ReadInt32();
            break;
          }
          case 176: {
            IsThirdPartyCampaign = input.ReadBool();
            break;
          }
          case 184: {
            IsFeaturedEnabled = input.ReadBool();
            break;
          }
          case 192: {
            ShowEmail = input.ReadBool();
            break;
          }
          case 200: {
            ShowInRecommendation = input.ReadBool();
            break;
          }
          case 210: {
            UpdatedOn = input.ReadString();
            break;
          }
          case 218: {
            UpdatedBy = input.ReadString();
            break;
          }
          case 224: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 232: {
            IsPqRuleExist = input.ReadBool();
            break;
          }
          case 240: {
            IsCrossSellRuleExist = input.ReadBool();
            break;
          }
          case 248: {
            IsDealerLocatorRuleExist = input.ReadBool();
            break;
          }
          case 256: {
            IsCVL = input.ReadBool();
            break;
          }
          case 264: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 272: {
            LeadDuplication = input.ReadBool();
            break;
          }
          case 282: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 288: {
            IsCarTrade = input.ReadBool();
            break;
          }
          case 296: {
            IsCarWale = input.ReadBool();
            break;
          }
          case 304: {
            AssignedTemplateId = input.ReadInt32();
            break;
          }
          case 312: {
            AssignedGroupId = input.ReadInt32();
            break;
          }
          case 322: {
            CTALinkText = input.ReadString();
            break;
          }
          case 328: {
            ShowWithoutCity = input.ReadBool();
            break;
          }
          case 336: {
            CitiesListType = input.ReadInt32();
            break;
          }
          case 344: {
            IsBikeWale = input.ReadBool();
            break;
          }
          case 352: {
            CampaignType = input.ReadInt32();
            break;
          }
          case 360: {
            Distance = input.ReadInt32();
            break;
          }
          case 368: {
            MutualLeads = input.ReadBool();
            break;
          }
          case 376: {
            DealerAdminId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeaturedAdCampaign : pb::IMessage<FeaturedAdCampaign> {
    private static readonly pb::MessageParser<FeaturedAdCampaign> _parser = new pb::MessageParser<FeaturedAdCampaign>(() => new FeaturedAdCampaign());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturedAdCampaign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdCampaign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdCampaign(FeaturedAdCampaign other) : this() {
      Campaign = other.campaign_ != null ? other.Campaign.Clone() : null;
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      isActive_ = other.isActive_;
      User = other.user_ != null ? other.User.Clone() : null;
      updatedOn_ = other.updatedOn_;
      CampaignCategory = other.campaignCategory_ != null ? other.CampaignCategory.Clone() : null;
      externalLinkText_ = other.externalLinkText_;
      linkClickTracker_ = other.linkClickTracker_;
      carNameClickTracker_ = other.carNameClickTracker_;
      carImageClickTracker_ = other.carImageClickTracker_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdCampaign Clone() {
      return new FeaturedAdCampaign(this);
    }

    /// <summary>Field number for the "Campaign" field.</summary>
    public const int CampaignFieldNumber = 1;
    private global::ProtoBufClass.Common.Item campaign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Campaign {
      get { return campaign_; }
      set {
        campaign_ = value;
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 2;
    private string startDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndDate" field.</summary>
    public const int EndDateFieldNumber = 3;
    private string endDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsActive" field.</summary>
    public const int IsActiveFieldNumber = 4;
    private string isActive_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsActive {
      get { return isActive_; }
      set {
        isActive_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 5;
    private global::ProtoBufClass.Common.Item user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "UpdatedOn" field.</summary>
    public const int UpdatedOnFieldNumber = 6;
    private string updatedOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedOn {
      get { return updatedOn_; }
      set {
        updatedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CampaignCategory" field.</summary>
    public const int CampaignCategoryFieldNumber = 7;
    private global::ProtoBufClass.Common.Item campaignCategory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item CampaignCategory {
      get { return campaignCategory_; }
      set {
        campaignCategory_ = value;
      }
    }

    /// <summary>Field number for the "ExternalLinkText" field.</summary>
    public const int ExternalLinkTextFieldNumber = 8;
    private string externalLinkText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalLinkText {
      get { return externalLinkText_; }
      set {
        externalLinkText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkClickTracker" field.</summary>
    public const int LinkClickTrackerFieldNumber = 9;
    private string linkClickTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkClickTracker {
      get { return linkClickTracker_; }
      set {
        linkClickTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarNameClickTracker" field.</summary>
    public const int CarNameClickTrackerFieldNumber = 10;
    private string carNameClickTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarNameClickTracker {
      get { return carNameClickTracker_; }
      set {
        carNameClickTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarImageClickTracker" field.</summary>
    public const int CarImageClickTrackerFieldNumber = 11;
    private string carImageClickTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarImageClickTracker {
      get { return carImageClickTracker_; }
      set {
        carImageClickTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturedAdCampaign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturedAdCampaign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Campaign, other.Campaign)) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if (IsActive != other.IsActive) return false;
      if (!object.Equals(User, other.User)) return false;
      if (UpdatedOn != other.UpdatedOn) return false;
      if (!object.Equals(CampaignCategory, other.CampaignCategory)) return false;
      if (ExternalLinkText != other.ExternalLinkText) return false;
      if (LinkClickTracker != other.LinkClickTracker) return false;
      if (CarNameClickTracker != other.CarNameClickTracker) return false;
      if (CarImageClickTracker != other.CarImageClickTracker) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (campaign_ != null) hash ^= Campaign.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
      if (IsActive.Length != 0) hash ^= IsActive.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (UpdatedOn.Length != 0) hash ^= UpdatedOn.GetHashCode();
      if (campaignCategory_ != null) hash ^= CampaignCategory.GetHashCode();
      if (ExternalLinkText.Length != 0) hash ^= ExternalLinkText.GetHashCode();
      if (LinkClickTracker.Length != 0) hash ^= LinkClickTracker.GetHashCode();
      if (CarNameClickTracker.Length != 0) hash ^= CarNameClickTracker.GetHashCode();
      if (CarImageClickTracker.Length != 0) hash ^= CarImageClickTracker.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (campaign_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Campaign);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EndDate);
      }
      if (IsActive.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IsActive);
      }
      if (user_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(User);
      }
      if (UpdatedOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UpdatedOn);
      }
      if (campaignCategory_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CampaignCategory);
      }
      if (ExternalLinkText.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ExternalLinkText);
      }
      if (LinkClickTracker.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LinkClickTracker);
      }
      if (CarNameClickTracker.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CarNameClickTracker);
      }
      if (CarImageClickTracker.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CarImageClickTracker);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (campaign_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Campaign);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (EndDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
      }
      if (IsActive.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsActive);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (UpdatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedOn);
      }
      if (campaignCategory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CampaignCategory);
      }
      if (ExternalLinkText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalLinkText);
      }
      if (LinkClickTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkClickTracker);
      }
      if (CarNameClickTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarNameClickTracker);
      }
      if (CarImageClickTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarImageClickTracker);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturedAdCampaign other) {
      if (other == null) {
        return;
      }
      if (other.campaign_ != null) {
        if (campaign_ == null) {
          campaign_ = new global::ProtoBufClass.Common.Item();
        }
        Campaign.MergeFrom(other.Campaign);
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.EndDate.Length != 0) {
        EndDate = other.EndDate;
      }
      if (other.IsActive.Length != 0) {
        IsActive = other.IsActive;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::ProtoBufClass.Common.Item();
        }
        User.MergeFrom(other.User);
      }
      if (other.UpdatedOn.Length != 0) {
        UpdatedOn = other.UpdatedOn;
      }
      if (other.campaignCategory_ != null) {
        if (campaignCategory_ == null) {
          campaignCategory_ = new global::ProtoBufClass.Common.Item();
        }
        CampaignCategory.MergeFrom(other.CampaignCategory);
      }
      if (other.ExternalLinkText.Length != 0) {
        ExternalLinkText = other.ExternalLinkText;
      }
      if (other.LinkClickTracker.Length != 0) {
        LinkClickTracker = other.LinkClickTracker;
      }
      if (other.CarNameClickTracker.Length != 0) {
        CarNameClickTracker = other.CarNameClickTracker;
      }
      if (other.CarImageClickTracker.Length != 0) {
        CarImageClickTracker = other.CarImageClickTracker;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (campaign_ == null) {
              campaign_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(campaign_);
            break;
          }
          case 18: {
            StartDate = input.ReadString();
            break;
          }
          case 26: {
            EndDate = input.ReadString();
            break;
          }
          case 34: {
            IsActive = input.ReadString();
            break;
          }
          case 42: {
            if (user_ == null) {
              user_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(user_);
            break;
          }
          case 50: {
            UpdatedOn = input.ReadString();
            break;
          }
          case 58: {
            if (campaignCategory_ == null) {
              campaignCategory_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(campaignCategory_);
            break;
          }
          case 66: {
            ExternalLinkText = input.ReadString();
            break;
          }
          case 74: {
            LinkClickTracker = input.ReadString();
            break;
          }
          case 82: {
            CarNameClickTracker = input.ReadString();
            break;
          }
          case 90: {
            CarImageClickTracker = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PQRule : pb::IMessage<PQRule> {
    private static readonly pb::MessageParser<PQRule> _parser = new pb::MessageParser<PQRule>(() => new PQRule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PQRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQRule(PQRule other) : this() {
      id_ = other.id_;
      CampaignId = other.campaignId_ != null ? other.CampaignId.Clone() : null;
      Make = other.make_ != null ? other.Make.Clone() : null;
      Model = other.model_ != null ? other.Model.Clone() : null;
      State = other.state_ != null ? other.State.Clone() : null;
      City = other.city_ != null ? other.City.Clone() : null;
      Zone = other.zone_ != null ? other.Zone.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
      listModelId_ = other.listModelId_;
      listCityId_ = other.listCityId_;
      Platform = other.platform_ != null ? other.Platform.Clone() : null;
      applicationId_ = other.applicationId_;
      count_ = other.count_;
      listZoneId_ = other.listZoneId_;
      Page = other.page_ != null ? other.Page.Clone() : null;
      showCompletedCampaigns_ = other.showCompletedCampaigns_;
      noZoneFilter_ = other.noZoneFilter_;
      dealerLocator_ = other.dealerLocator_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQRule Clone() {
      return new PQRule(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 2;
    private global::ProtoBufClass.Campaigns.CampaignId campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignId CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "Make" field.</summary>
    public const int MakeFieldNumber = 3;
    private global::ProtoBufClass.Common.Item make_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Make {
      get { return make_; }
      set {
        make_ = value;
      }
    }

    /// <summary>Field number for the "Model" field.</summary>
    public const int ModelFieldNumber = 4;
    private global::ProtoBufClass.Common.Item model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 5;
    private global::ProtoBufClass.Common.Item state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 6;
    private global::ProtoBufClass.Common.Item city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item City {
      get { return city_; }
      set {
        city_ = value;
      }
    }

    /// <summary>Field number for the "Zone" field.</summary>
    public const int ZoneFieldNumber = 7;
    private global::ProtoBufClass.Common.Item zone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Zone {
      get { return zone_; }
      set {
        zone_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 8;
    private global::ProtoBufClass.Common.Item user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "ListModelId" field.</summary>
    public const int ListModelIdFieldNumber = 9;
    private string listModelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListModelId {
      get { return listModelId_; }
      set {
        listModelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ListCityId" field.</summary>
    public const int ListCityIdFieldNumber = 10;
    private string listCityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListCityId {
      get { return listCityId_; }
      set {
        listCityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Platform" field.</summary>
    public const int PlatformFieldNumber = 11;
    private global::ProtoBufClass.Common.Item platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 12;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 13;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "ListZoneId" field.</summary>
    public const int ListZoneIdFieldNumber = 14;
    private string listZoneId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListZoneId {
      get { return listZoneId_; }
      set {
        listZoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Page" field.</summary>
    public const int PageFieldNumber = 15;
    private global::ProtoBufClass.Common.Pagination page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Pagination Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "showCompletedCampaigns" field.</summary>
    public const int ShowCompletedCampaignsFieldNumber = 16;
    private bool showCompletedCampaigns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowCompletedCampaigns {
      get { return showCompletedCampaigns_; }
      set {
        showCompletedCampaigns_ = value;
      }
    }

    /// <summary>Field number for the "NoZoneFilter" field.</summary>
    public const int NoZoneFilterFieldNumber = 17;
    private bool noZoneFilter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoZoneFilter {
      get { return noZoneFilter_; }
      set {
        noZoneFilter_ = value;
      }
    }

    /// <summary>Field number for the "dealerLocator" field.</summary>
    public const int DealerLocatorFieldNumber = 18;
    private bool dealerLocator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DealerLocator {
      get { return dealerLocator_; }
      set {
        dealerLocator_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PQRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PQRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(CampaignId, other.CampaignId)) return false;
      if (!object.Equals(Make, other.Make)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(City, other.City)) return false;
      if (!object.Equals(Zone, other.Zone)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (ListModelId != other.ListModelId) return false;
      if (ListCityId != other.ListCityId) return false;
      if (!object.Equals(Platform, other.Platform)) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (Count != other.Count) return false;
      if (ListZoneId != other.ListZoneId) return false;
      if (!object.Equals(Page, other.Page)) return false;
      if (ShowCompletedCampaigns != other.ShowCompletedCampaigns) return false;
      if (NoZoneFilter != other.NoZoneFilter) return false;
      if (DealerLocator != other.DealerLocator) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (campaignId_ != null) hash ^= CampaignId.GetHashCode();
      if (make_ != null) hash ^= Make.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (zone_ != null) hash ^= Zone.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (ListModelId.Length != 0) hash ^= ListModelId.GetHashCode();
      if (ListCityId.Length != 0) hash ^= ListCityId.GetHashCode();
      if (platform_ != null) hash ^= Platform.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (ListZoneId.Length != 0) hash ^= ListZoneId.GetHashCode();
      if (page_ != null) hash ^= Page.GetHashCode();
      if (ShowCompletedCampaigns != false) hash ^= ShowCompletedCampaigns.GetHashCode();
      if (NoZoneFilter != false) hash ^= NoZoneFilter.GetHashCode();
      if (DealerLocator != false) hash ^= DealerLocator.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (campaignId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CampaignId);
      }
      if (make_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Make);
      }
      if (model_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Model);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (city_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(City);
      }
      if (zone_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Zone);
      }
      if (user_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(User);
      }
      if (ListModelId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ListModelId);
      }
      if (ListCityId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ListCityId);
      }
      if (platform_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Platform);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ApplicationId);
      }
      if (Count != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Count);
      }
      if (ListZoneId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ListZoneId);
      }
      if (page_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Page);
      }
      if (ShowCompletedCampaigns != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ShowCompletedCampaigns);
      }
      if (NoZoneFilter != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(NoZoneFilter);
      }
      if (DealerLocator != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(DealerLocator);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (campaignId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CampaignId);
      }
      if (make_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Make);
      }
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (city_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(City);
      }
      if (zone_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Zone);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (ListModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListModelId);
      }
      if (ListCityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListCityId);
      }
      if (platform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Platform);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (ListZoneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListZoneId);
      }
      if (page_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Page);
      }
      if (ShowCompletedCampaigns != false) {
        size += 2 + 1;
      }
      if (NoZoneFilter != false) {
        size += 2 + 1;
      }
      if (DealerLocator != false) {
        size += 2 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PQRule other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.campaignId_ != null) {
        if (campaignId_ == null) {
          campaignId_ = new global::ProtoBufClass.Campaigns.CampaignId();
        }
        CampaignId.MergeFrom(other.CampaignId);
      }
      if (other.make_ != null) {
        if (make_ == null) {
          make_ = new global::ProtoBufClass.Common.Item();
        }
        Make.MergeFrom(other.Make);
      }
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::ProtoBufClass.Common.Item();
        }
        Model.MergeFrom(other.Model);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          state_ = new global::ProtoBufClass.Common.Item();
        }
        State.MergeFrom(other.State);
      }
      if (other.city_ != null) {
        if (city_ == null) {
          city_ = new global::ProtoBufClass.Common.Item();
        }
        City.MergeFrom(other.City);
      }
      if (other.zone_ != null) {
        if (zone_ == null) {
          zone_ = new global::ProtoBufClass.Common.Item();
        }
        Zone.MergeFrom(other.Zone);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::ProtoBufClass.Common.Item();
        }
        User.MergeFrom(other.User);
      }
      if (other.ListModelId.Length != 0) {
        ListModelId = other.ListModelId;
      }
      if (other.ListCityId.Length != 0) {
        ListCityId = other.ListCityId;
      }
      if (other.platform_ != null) {
        if (platform_ == null) {
          platform_ = new global::ProtoBufClass.Common.Item();
        }
        Platform.MergeFrom(other.Platform);
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.ListZoneId.Length != 0) {
        ListZoneId = other.ListZoneId;
      }
      if (other.page_ != null) {
        if (page_ == null) {
          page_ = new global::ProtoBufClass.Common.Pagination();
        }
        Page.MergeFrom(other.Page);
      }
      if (other.ShowCompletedCampaigns != false) {
        ShowCompletedCampaigns = other.ShowCompletedCampaigns;
      }
      if (other.NoZoneFilter != false) {
        NoZoneFilter = other.NoZoneFilter;
      }
      if (other.DealerLocator != false) {
        DealerLocator = other.DealerLocator;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (campaignId_ == null) {
              campaignId_ = new global::ProtoBufClass.Campaigns.CampaignId();
            }
            input.ReadMessage(campaignId_);
            break;
          }
          case 26: {
            if (make_ == null) {
              make_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(make_);
            break;
          }
          case 34: {
            if (model_ == null) {
              model_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(model_);
            break;
          }
          case 42: {
            if (state_ == null) {
              state_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(state_);
            break;
          }
          case 50: {
            if (city_ == null) {
              city_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(city_);
            break;
          }
          case 58: {
            if (zone_ == null) {
              zone_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(zone_);
            break;
          }
          case 66: {
            if (user_ == null) {
              user_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(user_);
            break;
          }
          case 74: {
            ListModelId = input.ReadString();
            break;
          }
          case 82: {
            ListCityId = input.ReadString();
            break;
          }
          case 90: {
            if (platform_ == null) {
              platform_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(platform_);
            break;
          }
          case 96: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 104: {
            Count = input.ReadInt32();
            break;
          }
          case 114: {
            ListZoneId = input.ReadString();
            break;
          }
          case 122: {
            if (page_ == null) {
              page_ = new global::ProtoBufClass.Common.Pagination();
            }
            input.ReadMessage(page_);
            break;
          }
          case 128: {
            ShowCompletedCampaigns = input.ReadBool();
            break;
          }
          case 136: {
            NoZoneFilter = input.ReadBool();
            break;
          }
          case 144: {
            DealerLocator = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PQRuleList : pb::IMessage<PQRuleList> {
    private static readonly pb::MessageParser<PQRuleList> _parser = new pb::MessageParser<PQRuleList>(() => new PQRuleList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PQRuleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQRuleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQRuleList(PQRuleList other) : this() {
      lstPQRule_ = other.lstPQRule_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQRuleList Clone() {
      return new PQRuleList(this);
    }

    /// <summary>Field number for the "LstPQRule" field.</summary>
    public const int LstPQRuleFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.PQRule> _repeated_lstPQRule_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.PQRule.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.PQRule> lstPQRule_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.PQRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.PQRule> LstPQRule {
      get { return lstPQRule_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PQRuleList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PQRuleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstPQRule_.Equals(other.lstPQRule_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstPQRule_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstPQRule_.WriteTo(output, _repeated_lstPQRule_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstPQRule_.CalculateSize(_repeated_lstPQRule_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PQRuleList other) {
      if (other == null) {
        return;
      }
      lstPQRule_.Add(other.lstPQRule_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstPQRule_.AddEntriesFrom(input, _repeated_lstPQRule_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PQTemplateStatus : pb::IMessage<PQTemplateStatus> {
    private static readonly pb::MessageParser<PQTemplateStatus> _parser = new pb::MessageParser<PQTemplateStatus>(() => new PQTemplateStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PQTemplateStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateStatus(PQTemplateStatus other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      isDesktop_ = other.isDesktop_;
      isMobile_ = other.isMobile_;
      isAndroid_ = other.isAndroid_;
      isIPhone_ = other.isIPhone_;
      displayName_ = other.displayName_;
      linkText_ = other.linkText_;
      User = other.user_ != null ? other.User.Clone() : null;
      cTALinkText_ = other.cTALinkText_;
      showInRecommendation_ = other.showInRecommendation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateStatus Clone() {
      return new PQTemplateStatus(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::ProtoBufClass.Campaigns.CampaignId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "IsDesktop" field.</summary>
    public const int IsDesktopFieldNumber = 2;
    private bool isDesktop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDesktop {
      get { return isDesktop_; }
      set {
        isDesktop_ = value;
      }
    }

    /// <summary>Field number for the "IsMobile" field.</summary>
    public const int IsMobileFieldNumber = 3;
    private bool isMobile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMobile {
      get { return isMobile_; }
      set {
        isMobile_ = value;
      }
    }

    /// <summary>Field number for the "IsAndroid" field.</summary>
    public const int IsAndroidFieldNumber = 4;
    private bool isAndroid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAndroid {
      get { return isAndroid_; }
      set {
        isAndroid_ = value;
      }
    }

    /// <summary>Field number for the "IsIPhone" field.</summary>
    public const int IsIPhoneFieldNumber = 5;
    private bool isIPhone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIPhone {
      get { return isIPhone_; }
      set {
        isIPhone_ = value;
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 6;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkText" field.</summary>
    public const int LinkTextFieldNumber = 7;
    private string linkText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkText {
      get { return linkText_; }
      set {
        linkText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 8;
    private global::ProtoBufClass.Common.Item user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "CTALinkText" field.</summary>
    public const int CTALinkTextFieldNumber = 9;
    private string cTALinkText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTALinkText {
      get { return cTALinkText_; }
      set {
        cTALinkText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowInRecommendation" field.</summary>
    public const int ShowInRecommendationFieldNumber = 10;
    private bool showInRecommendation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowInRecommendation {
      get { return showInRecommendation_; }
      set {
        showInRecommendation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PQTemplateStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PQTemplateStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (IsDesktop != other.IsDesktop) return false;
      if (IsMobile != other.IsMobile) return false;
      if (IsAndroid != other.IsAndroid) return false;
      if (IsIPhone != other.IsIPhone) return false;
      if (DisplayName != other.DisplayName) return false;
      if (LinkText != other.LinkText) return false;
      if (!object.Equals(User, other.User)) return false;
      if (CTALinkText != other.CTALinkText) return false;
      if (ShowInRecommendation != other.ShowInRecommendation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (IsDesktop != false) hash ^= IsDesktop.GetHashCode();
      if (IsMobile != false) hash ^= IsMobile.GetHashCode();
      if (IsAndroid != false) hash ^= IsAndroid.GetHashCode();
      if (IsIPhone != false) hash ^= IsIPhone.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (LinkText.Length != 0) hash ^= LinkText.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (CTALinkText.Length != 0) hash ^= CTALinkText.GetHashCode();
      if (ShowInRecommendation != false) hash ^= ShowInRecommendation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (IsDesktop != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDesktop);
      }
      if (IsMobile != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsMobile);
      }
      if (IsAndroid != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsAndroid);
      }
      if (IsIPhone != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsIPhone);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DisplayName);
      }
      if (LinkText.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LinkText);
      }
      if (user_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(User);
      }
      if (CTALinkText.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CTALinkText);
      }
      if (ShowInRecommendation != false) {
        output.WriteRawTag(80);
        output.WriteBool(ShowInRecommendation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (IsDesktop != false) {
        size += 1 + 1;
      }
      if (IsMobile != false) {
        size += 1 + 1;
      }
      if (IsAndroid != false) {
        size += 1 + 1;
      }
      if (IsIPhone != false) {
        size += 1 + 1;
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (LinkText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkText);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (CTALinkText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTALinkText);
      }
      if (ShowInRecommendation != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PQTemplateStatus other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::ProtoBufClass.Campaigns.CampaignId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.IsDesktop != false) {
        IsDesktop = other.IsDesktop;
      }
      if (other.IsMobile != false) {
        IsMobile = other.IsMobile;
      }
      if (other.IsAndroid != false) {
        IsAndroid = other.IsAndroid;
      }
      if (other.IsIPhone != false) {
        IsIPhone = other.IsIPhone;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.LinkText.Length != 0) {
        LinkText = other.LinkText;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::ProtoBufClass.Common.Item();
        }
        User.MergeFrom(other.User);
      }
      if (other.CTALinkText.Length != 0) {
        CTALinkText = other.CTALinkText;
      }
      if (other.ShowInRecommendation != false) {
        ShowInRecommendation = other.ShowInRecommendation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::ProtoBufClass.Campaigns.CampaignId();
            }
            input.ReadMessage(id_);
            break;
          }
          case 16: {
            IsDesktop = input.ReadBool();
            break;
          }
          case 24: {
            IsMobile = input.ReadBool();
            break;
          }
          case 32: {
            IsAndroid = input.ReadBool();
            break;
          }
          case 40: {
            IsIPhone = input.ReadBool();
            break;
          }
          case 50: {
            DisplayName = input.ReadString();
            break;
          }
          case 58: {
            LinkText = input.ReadString();
            break;
          }
          case 66: {
            if (user_ == null) {
              user_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(user_);
            break;
          }
          case 74: {
            CTALinkText = input.ReadString();
            break;
          }
          case 80: {
            ShowInRecommendation = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PQTemplateMapping : pb::IMessage<PQTemplateMapping> {
    private static readonly pb::MessageParser<PQTemplateMapping> _parser = new pb::MessageParser<PQTemplateMapping>(() => new PQTemplateMapping());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PQTemplateMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateMapping(PQTemplateMapping other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      assignedGroupId_ = other.assignedGroupId_;
      assignedTemplateId_ = other.assignedTemplateId_;
      platformId_ = other.platformId_;
      applicationId_ = other.applicationId_;
      pageId_ = other.pageId_;
      propertyId_ = other.propertyId_;
      platform_ = other.platform_;
      application_ = other.application_;
      pageName_ = other.pageName_;
      property_ = other.property_;
      templateName_ = other.templateName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateMapping Clone() {
      return new PQTemplateMapping(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::ProtoBufClass.Campaigns.CampaignId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "AssignedGroupId" field.</summary>
    public const int AssignedGroupIdFieldNumber = 2;
    private int assignedGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AssignedGroupId {
      get { return assignedGroupId_; }
      set {
        assignedGroupId_ = value;
      }
    }

    /// <summary>Field number for the "AssignedTemplateId" field.</summary>
    public const int AssignedTemplateIdFieldNumber = 3;
    private int assignedTemplateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AssignedTemplateId {
      get { return assignedTemplateId_; }
      set {
        assignedTemplateId_ = value;
      }
    }

    /// <summary>Field number for the "PlatformId" field.</summary>
    public const int PlatformIdFieldNumber = 4;
    private int platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 5;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "PageId" field.</summary>
    public const int PageIdFieldNumber = 6;
    private int pageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageId {
      get { return pageId_; }
      set {
        pageId_ = value;
      }
    }

    /// <summary>Field number for the "PropertyId" field.</summary>
    public const int PropertyIdFieldNumber = 7;
    private int propertyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropertyId {
      get { return propertyId_; }
      set {
        propertyId_ = value;
      }
    }

    /// <summary>Field number for the "Platform" field.</summary>
    public const int PlatformFieldNumber = 8;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Application" field.</summary>
    public const int ApplicationFieldNumber = 9;
    private string application_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Application {
      get { return application_; }
      set {
        application_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PageName" field.</summary>
    public const int PageNameFieldNumber = 10;
    private string pageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageName {
      get { return pageName_; }
      set {
        pageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Property" field.</summary>
    public const int PropertyFieldNumber = 11;
    private string property_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Property {
      get { return property_; }
      set {
        property_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TemplateName" field.</summary>
    public const int TemplateNameFieldNumber = 12;
    private string templateName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateName {
      get { return templateName_; }
      set {
        templateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PQTemplateMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PQTemplateMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (AssignedGroupId != other.AssignedGroupId) return false;
      if (AssignedTemplateId != other.AssignedTemplateId) return false;
      if (PlatformId != other.PlatformId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (PageId != other.PageId) return false;
      if (PropertyId != other.PropertyId) return false;
      if (Platform != other.Platform) return false;
      if (Application != other.Application) return false;
      if (PageName != other.PageName) return false;
      if (Property != other.Property) return false;
      if (TemplateName != other.TemplateName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (AssignedGroupId != 0) hash ^= AssignedGroupId.GetHashCode();
      if (AssignedTemplateId != 0) hash ^= AssignedTemplateId.GetHashCode();
      if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (PageId != 0) hash ^= PageId.GetHashCode();
      if (PropertyId != 0) hash ^= PropertyId.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (Application.Length != 0) hash ^= Application.GetHashCode();
      if (PageName.Length != 0) hash ^= PageName.GetHashCode();
      if (Property.Length != 0) hash ^= Property.GetHashCode();
      if (TemplateName.Length != 0) hash ^= TemplateName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (AssignedGroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AssignedGroupId);
      }
      if (AssignedTemplateId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AssignedTemplateId);
      }
      if (PlatformId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlatformId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ApplicationId);
      }
      if (PageId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PageId);
      }
      if (PropertyId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PropertyId);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Platform);
      }
      if (Application.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Application);
      }
      if (PageName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PageName);
      }
      if (Property.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Property);
      }
      if (TemplateName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TemplateName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (AssignedGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AssignedGroupId);
      }
      if (AssignedTemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AssignedTemplateId);
      }
      if (PlatformId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (PageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageId);
      }
      if (PropertyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropertyId);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (Application.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Application);
      }
      if (PageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageName);
      }
      if (Property.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Property);
      }
      if (TemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PQTemplateMapping other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::ProtoBufClass.Campaigns.CampaignId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.AssignedGroupId != 0) {
        AssignedGroupId = other.AssignedGroupId;
      }
      if (other.AssignedTemplateId != 0) {
        AssignedTemplateId = other.AssignedTemplateId;
      }
      if (other.PlatformId != 0) {
        PlatformId = other.PlatformId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.PageId != 0) {
        PageId = other.PageId;
      }
      if (other.PropertyId != 0) {
        PropertyId = other.PropertyId;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.Application.Length != 0) {
        Application = other.Application;
      }
      if (other.PageName.Length != 0) {
        PageName = other.PageName;
      }
      if (other.Property.Length != 0) {
        Property = other.Property;
      }
      if (other.TemplateName.Length != 0) {
        TemplateName = other.TemplateName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::ProtoBufClass.Campaigns.CampaignId();
            }
            input.ReadMessage(id_);
            break;
          }
          case 16: {
            AssignedGroupId = input.ReadInt32();
            break;
          }
          case 24: {
            AssignedTemplateId = input.ReadInt32();
            break;
          }
          case 32: {
            PlatformId = input.ReadInt32();
            break;
          }
          case 40: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 48: {
            PageId = input.ReadInt32();
            break;
          }
          case 56: {
            PropertyId = input.ReadInt32();
            break;
          }
          case 66: {
            Platform = input.ReadString();
            break;
          }
          case 74: {
            Application = input.ReadString();
            break;
          }
          case 82: {
            PageName = input.ReadString();
            break;
          }
          case 90: {
            Property = input.ReadString();
            break;
          }
          case 98: {
            TemplateName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeaturedAdRule : pb::IMessage<FeaturedAdRule> {
    private static readonly pb::MessageParser<FeaturedAdRule> _parser = new pb::MessageParser<FeaturedAdRule>(() => new FeaturedAdRule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturedAdRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdRule(FeaturedAdRule other) : this() {
      id_ = other.id_;
      FeaturedAd = other.featuredAd_ != null ? other.FeaturedAd.Clone() : null;
      TargetMake = other.targetMake_ != null ? other.TargetMake.Clone() : null;
      TargetModel = other.targetModel_ != null ? other.TargetModel.Clone() : null;
      TargetVersion = other.targetVersion_ != null ? other.TargetVersion.Clone() : null;
      FeaturedMake = other.featuredMake_ != null ? other.FeaturedMake.Clone() : null;
      FeaturedModel = other.featuredModel_ != null ? other.FeaturedModel.Clone() : null;
      FeaturedVersion = other.featuredVersion_ != null ? other.FeaturedVersion.Clone() : null;
      State = other.state_ != null ? other.State.Clone() : null;
      City = other.city_ != null ? other.City.Clone() : null;
      Zone = other.zone_ != null ? other.Zone.Clone() : null;
      carImpressionTracker_ = other.carImpressionTracker_;
      User = other.user_ != null ? other.User.Clone() : null;
      addedOn_ = other.addedOn_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdRule Clone() {
      return new FeaturedAdRule(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FeaturedAd" field.</summary>
    public const int FeaturedAdFieldNumber = 2;
    private global::ProtoBufClass.Common.Item featuredAd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item FeaturedAd {
      get { return featuredAd_; }
      set {
        featuredAd_ = value;
      }
    }

    /// <summary>Field number for the "TargetMake" field.</summary>
    public const int TargetMakeFieldNumber = 3;
    private global::ProtoBufClass.Common.Item targetMake_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item TargetMake {
      get { return targetMake_; }
      set {
        targetMake_ = value;
      }
    }

    /// <summary>Field number for the "TargetModel" field.</summary>
    public const int TargetModelFieldNumber = 4;
    private global::ProtoBufClass.Common.Item targetModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item TargetModel {
      get { return targetModel_; }
      set {
        targetModel_ = value;
      }
    }

    /// <summary>Field number for the "TargetVersion" field.</summary>
    public const int TargetVersionFieldNumber = 5;
    private global::ProtoBufClass.Common.Item targetVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item TargetVersion {
      get { return targetVersion_; }
      set {
        targetVersion_ = value;
      }
    }

    /// <summary>Field number for the "FeaturedMake" field.</summary>
    public const int FeaturedMakeFieldNumber = 6;
    private global::ProtoBufClass.Common.Item featuredMake_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item FeaturedMake {
      get { return featuredMake_; }
      set {
        featuredMake_ = value;
      }
    }

    /// <summary>Field number for the "FeaturedModel" field.</summary>
    public const int FeaturedModelFieldNumber = 7;
    private global::ProtoBufClass.Common.Item featuredModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item FeaturedModel {
      get { return featuredModel_; }
      set {
        featuredModel_ = value;
      }
    }

    /// <summary>Field number for the "FeaturedVersion" field.</summary>
    public const int FeaturedVersionFieldNumber = 8;
    private global::ProtoBufClass.Common.Item featuredVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item FeaturedVersion {
      get { return featuredVersion_; }
      set {
        featuredVersion_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 9;
    private global::ProtoBufClass.Common.Item state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 10;
    private global::ProtoBufClass.Common.Item city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item City {
      get { return city_; }
      set {
        city_ = value;
      }
    }

    /// <summary>Field number for the "Zone" field.</summary>
    public const int ZoneFieldNumber = 11;
    private global::ProtoBufClass.Common.Item zone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Zone {
      get { return zone_; }
      set {
        zone_ = value;
      }
    }

    /// <summary>Field number for the "CarImpressionTracker" field.</summary>
    public const int CarImpressionTrackerFieldNumber = 12;
    private string carImpressionTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarImpressionTracker {
      get { return carImpressionTracker_; }
      set {
        carImpressionTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 13;
    private global::ProtoBufClass.Common.Item user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "AddedOn" field.</summary>
    public const int AddedOnFieldNumber = 14;
    private string addedOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddedOn {
      get { return addedOn_; }
      set {
        addedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturedAdRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturedAdRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(FeaturedAd, other.FeaturedAd)) return false;
      if (!object.Equals(TargetMake, other.TargetMake)) return false;
      if (!object.Equals(TargetModel, other.TargetModel)) return false;
      if (!object.Equals(TargetVersion, other.TargetVersion)) return false;
      if (!object.Equals(FeaturedMake, other.FeaturedMake)) return false;
      if (!object.Equals(FeaturedModel, other.FeaturedModel)) return false;
      if (!object.Equals(FeaturedVersion, other.FeaturedVersion)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(City, other.City)) return false;
      if (!object.Equals(Zone, other.Zone)) return false;
      if (CarImpressionTracker != other.CarImpressionTracker) return false;
      if (!object.Equals(User, other.User)) return false;
      if (AddedOn != other.AddedOn) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (featuredAd_ != null) hash ^= FeaturedAd.GetHashCode();
      if (targetMake_ != null) hash ^= TargetMake.GetHashCode();
      if (targetModel_ != null) hash ^= TargetModel.GetHashCode();
      if (targetVersion_ != null) hash ^= TargetVersion.GetHashCode();
      if (featuredMake_ != null) hash ^= FeaturedMake.GetHashCode();
      if (featuredModel_ != null) hash ^= FeaturedModel.GetHashCode();
      if (featuredVersion_ != null) hash ^= FeaturedVersion.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (zone_ != null) hash ^= Zone.GetHashCode();
      if (CarImpressionTracker.Length != 0) hash ^= CarImpressionTracker.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (AddedOn.Length != 0) hash ^= AddedOn.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (featuredAd_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FeaturedAd);
      }
      if (targetMake_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TargetMake);
      }
      if (targetModel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TargetModel);
      }
      if (targetVersion_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TargetVersion);
      }
      if (featuredMake_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(FeaturedMake);
      }
      if (featuredModel_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(FeaturedModel);
      }
      if (featuredVersion_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FeaturedVersion);
      }
      if (state_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(State);
      }
      if (city_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(City);
      }
      if (zone_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Zone);
      }
      if (CarImpressionTracker.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CarImpressionTracker);
      }
      if (user_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(User);
      }
      if (AddedOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AddedOn);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (featuredAd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeaturedAd);
      }
      if (targetMake_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetMake);
      }
      if (targetModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetModel);
      }
      if (targetVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetVersion);
      }
      if (featuredMake_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeaturedMake);
      }
      if (featuredModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeaturedModel);
      }
      if (featuredVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeaturedVersion);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (city_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(City);
      }
      if (zone_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Zone);
      }
      if (CarImpressionTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarImpressionTracker);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (AddedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddedOn);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturedAdRule other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.featuredAd_ != null) {
        if (featuredAd_ == null) {
          featuredAd_ = new global::ProtoBufClass.Common.Item();
        }
        FeaturedAd.MergeFrom(other.FeaturedAd);
      }
      if (other.targetMake_ != null) {
        if (targetMake_ == null) {
          targetMake_ = new global::ProtoBufClass.Common.Item();
        }
        TargetMake.MergeFrom(other.TargetMake);
      }
      if (other.targetModel_ != null) {
        if (targetModel_ == null) {
          targetModel_ = new global::ProtoBufClass.Common.Item();
        }
        TargetModel.MergeFrom(other.TargetModel);
      }
      if (other.targetVersion_ != null) {
        if (targetVersion_ == null) {
          targetVersion_ = new global::ProtoBufClass.Common.Item();
        }
        TargetVersion.MergeFrom(other.TargetVersion);
      }
      if (other.featuredMake_ != null) {
        if (featuredMake_ == null) {
          featuredMake_ = new global::ProtoBufClass.Common.Item();
        }
        FeaturedMake.MergeFrom(other.FeaturedMake);
      }
      if (other.featuredModel_ != null) {
        if (featuredModel_ == null) {
          featuredModel_ = new global::ProtoBufClass.Common.Item();
        }
        FeaturedModel.MergeFrom(other.FeaturedModel);
      }
      if (other.featuredVersion_ != null) {
        if (featuredVersion_ == null) {
          featuredVersion_ = new global::ProtoBufClass.Common.Item();
        }
        FeaturedVersion.MergeFrom(other.FeaturedVersion);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          state_ = new global::ProtoBufClass.Common.Item();
        }
        State.MergeFrom(other.State);
      }
      if (other.city_ != null) {
        if (city_ == null) {
          city_ = new global::ProtoBufClass.Common.Item();
        }
        City.MergeFrom(other.City);
      }
      if (other.zone_ != null) {
        if (zone_ == null) {
          zone_ = new global::ProtoBufClass.Common.Item();
        }
        Zone.MergeFrom(other.Zone);
      }
      if (other.CarImpressionTracker.Length != 0) {
        CarImpressionTracker = other.CarImpressionTracker;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::ProtoBufClass.Common.Item();
        }
        User.MergeFrom(other.User);
      }
      if (other.AddedOn.Length != 0) {
        AddedOn = other.AddedOn;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (featuredAd_ == null) {
              featuredAd_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(featuredAd_);
            break;
          }
          case 26: {
            if (targetMake_ == null) {
              targetMake_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(targetMake_);
            break;
          }
          case 34: {
            if (targetModel_ == null) {
              targetModel_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(targetModel_);
            break;
          }
          case 42: {
            if (targetVersion_ == null) {
              targetVersion_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(targetVersion_);
            break;
          }
          case 50: {
            if (featuredMake_ == null) {
              featuredMake_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(featuredMake_);
            break;
          }
          case 58: {
            if (featuredModel_ == null) {
              featuredModel_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(featuredModel_);
            break;
          }
          case 66: {
            if (featuredVersion_ == null) {
              featuredVersion_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(featuredVersion_);
            break;
          }
          case 74: {
            if (state_ == null) {
              state_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(state_);
            break;
          }
          case 82: {
            if (city_ == null) {
              city_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(city_);
            break;
          }
          case 90: {
            if (zone_ == null) {
              zone_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(zone_);
            break;
          }
          case 98: {
            CarImpressionTracker = input.ReadString();
            break;
          }
          case 106: {
            if (user_ == null) {
              user_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(user_);
            break;
          }
          case 114: {
            AddedOn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeaturedRuleInput : pb::IMessage<FeaturedRuleInput> {
    private static readonly pb::MessageParser<FeaturedRuleInput> _parser = new pb::MessageParser<FeaturedRuleInput>(() => new FeaturedRuleInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturedRuleInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedRuleInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedRuleInput(FeaturedRuleInput other) : this() {
      Campaign = other.campaign_ != null ? other.Campaign.Clone() : null;
      Category = other.category_ != null ? other.Category.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedRuleInput Clone() {
      return new FeaturedRuleInput(this);
    }

    /// <summary>Field number for the "Campaign" field.</summary>
    public const int CampaignFieldNumber = 1;
    private global::ProtoBufClass.Common.Item campaign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Campaign {
      get { return campaign_; }
      set {
        campaign_ = value;
      }
    }

    /// <summary>Field number for the "Category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private global::ProtoBufClass.Common.Item category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturedRuleInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturedRuleInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Campaign, other.Campaign)) return false;
      if (!object.Equals(Category, other.Category)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (campaign_ != null) hash ^= Campaign.GetHashCode();
      if (category_ != null) hash ^= Category.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (campaign_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Campaign);
      }
      if (category_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Category);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (campaign_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Campaign);
      }
      if (category_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Category);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturedRuleInput other) {
      if (other == null) {
        return;
      }
      if (other.campaign_ != null) {
        if (campaign_ == null) {
          campaign_ = new global::ProtoBufClass.Common.Item();
        }
        Campaign.MergeFrom(other.Campaign);
      }
      if (other.category_ != null) {
        if (category_ == null) {
          category_ = new global::ProtoBufClass.Common.Item();
        }
        Category.MergeFrom(other.Category);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (campaign_ == null) {
              campaign_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(campaign_);
            break;
          }
          case 18: {
            if (category_ == null) {
              category_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(category_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeaturedAdRuleList : pb::IMessage<FeaturedAdRuleList> {
    private static readonly pb::MessageParser<FeaturedAdRuleList> _parser = new pb::MessageParser<FeaturedAdRuleList>(() => new FeaturedAdRuleList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturedAdRuleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdRuleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdRuleList(FeaturedAdRuleList other) : this() {
      lstFeaturedAdRule_ = other.lstFeaturedAdRule_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdRuleList Clone() {
      return new FeaturedAdRuleList(this);
    }

    /// <summary>Field number for the "LstFeaturedAdRule" field.</summary>
    public const int LstFeaturedAdRuleFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.FeaturedAdRule> _repeated_lstFeaturedAdRule_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.FeaturedAdRule.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.FeaturedAdRule> lstFeaturedAdRule_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.FeaturedAdRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.FeaturedAdRule> LstFeaturedAdRule {
      get { return lstFeaturedAdRule_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturedAdRuleList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturedAdRuleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstFeaturedAdRule_.Equals(other.lstFeaturedAdRule_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstFeaturedAdRule_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstFeaturedAdRule_.WriteTo(output, _repeated_lstFeaturedAdRule_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstFeaturedAdRule_.CalculateSize(_repeated_lstFeaturedAdRule_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturedAdRuleList other) {
      if (other == null) {
        return;
      }
      lstFeaturedAdRule_.Add(other.lstFeaturedAdRule_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lstFeaturedAdRule_.AddEntriesFrom(input, _repeated_lstFeaturedAdRule_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeaturedAdCampaignList : pb::IMessage<FeaturedAdCampaignList> {
    private static readonly pb::MessageParser<FeaturedAdCampaignList> _parser = new pb::MessageParser<FeaturedAdCampaignList>(() => new FeaturedAdCampaignList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturedAdCampaignList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdCampaignList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdCampaignList(FeaturedAdCampaignList other) : this() {
      campaign_ = other.campaign_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedAdCampaignList Clone() {
      return new FeaturedAdCampaignList(this);
    }

    /// <summary>Field number for the "Campaign" field.</summary>
    public const int CampaignFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.FeaturedAdCampaign> _repeated_campaign_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.FeaturedAdCampaign.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.FeaturedAdCampaign> campaign_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.FeaturedAdCampaign>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.FeaturedAdCampaign> Campaign {
      get { return campaign_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturedAdCampaignList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturedAdCampaignList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!campaign_.Equals(other.campaign_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= campaign_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      campaign_.WriteTo(output, _repeated_campaign_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += campaign_.CalculateSize(_repeated_campaign_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturedAdCampaignList other) {
      if (other == null) {
        return;
      }
      campaign_.Add(other.campaign_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            campaign_.AddEntriesFrom(input, _repeated_campaign_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossSellCampaignInput : pb::IMessage<CrossSellCampaignInput> {
    private static readonly pb::MessageParser<CrossSellCampaignInput> _parser = new pb::MessageParser<CrossSellCampaignInput>(() => new CrossSellCampaignInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossSellCampaignInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaignInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaignInput(CrossSellCampaignInput other) : this() {
      cityId_ = other.cityId_;
      zoneId_ = other.zoneId_;
      targetVersionId_ = other.targetVersionId_;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaignInput Clone() {
      return new CrossSellCampaignInput(this);
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 1;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "ZoneId" field.</summary>
    public const int ZoneIdFieldNumber = 2;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "TargetVersionId" field.</summary>
    public const int TargetVersionIdFieldNumber = 3;
    private int targetVersionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetVersionId {
      get { return targetVersionId_; }
      set {
        targetVersionId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 4;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossSellCampaignInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossSellCampaignInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (TargetVersionId != other.TargetVersionId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (TargetVersionId != 0) hash ^= TargetVersionId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CityId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ZoneId);
      }
      if (TargetVersionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetVersionId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (TargetVersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetVersionId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossSellCampaignInput other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.TargetVersionId != 0) {
        TargetVersionId = other.TargetVersionId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CityId = input.ReadInt32();
            break;
          }
          case 16: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 24: {
            TargetVersionId = input.ReadInt32();
            break;
          }
          case 32: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeaturedVersionsList : pb::IMessage<FeaturedVersionsList> {
    private static readonly pb::MessageParser<FeaturedVersionsList> _parser = new pb::MessageParser<FeaturedVersionsList>(() => new FeaturedVersionsList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturedVersionsList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedVersionsList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedVersionsList(FeaturedVersionsList other) : this() {
      versions_ = other.versions_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedVersionsList Clone() {
      return new FeaturedVersionsList(this);
    }

    /// <summary>Field number for the "Versions" field.</summary>
    public const int VersionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Common.Item> _repeated_versions_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Common.Item.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Common.Item> versions_ = new pbc::RepeatedField<global::ProtoBufClass.Common.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Common.Item> Versions {
      get { return versions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturedVersionsList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturedVersionsList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!versions_.Equals(other.versions_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= versions_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      versions_.WriteTo(output, _repeated_versions_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += versions_.CalculateSize(_repeated_versions_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturedVersionsList other) {
      if (other == null) {
        return;
      }
      versions_.Add(other.versions_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            versions_.AddEntriesFrom(input, _repeated_versions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossSellCampaign : pb::IMessage<CrossSellCampaign> {
    private static readonly pb::MessageParser<CrossSellCampaign> _parser = new pb::MessageParser<CrossSellCampaign>(() => new CrossSellCampaign());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossSellCampaign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaign(CrossSellCampaign other) : this() {
      campaignId_ = other.campaignId_;
      Version = other.version_ != null ? other.Version.Clone() : null;
      zoneId_ = other.zoneId_;
      isCarwale_ = other.isCarwale_;
      isCarTrade_ = other.isCarTrade_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaign Clone() {
      return new CrossSellCampaign(this);
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 1;
    private int campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 2;
    private global::ProtoBufClass.Common.Item version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "ZoneId" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "IsCarwale" field.</summary>
    public const int IsCarwaleFieldNumber = 4;
    private bool isCarwale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCarwale {
      get { return isCarwale_; }
      set {
        isCarwale_ = value;
      }
    }

    /// <summary>Field number for the "IsCarTrade" field.</summary>
    public const int IsCarTradeFieldNumber = 5;
    private bool isCarTrade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCarTrade {
      get { return isCarTrade_; }
      set {
        isCarTrade_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossSellCampaign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossSellCampaign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CampaignId != other.CampaignId) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (ZoneId != other.ZoneId) return false;
      if (IsCarwale != other.IsCarwale) return false;
      if (IsCarTrade != other.IsCarTrade) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CampaignId != 0) hash ^= CampaignId.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (IsCarwale != false) hash ^= IsCarwale.GetHashCode();
      if (IsCarTrade != false) hash ^= IsCarTrade.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CampaignId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CampaignId);
      }
      if (version_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Version);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (IsCarwale != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCarwale);
      }
      if (IsCarTrade != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsCarTrade);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CampaignId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CampaignId);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (IsCarwale != false) {
        size += 1 + 1;
      }
      if (IsCarTrade != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossSellCampaign other) {
      if (other == null) {
        return;
      }
      if (other.CampaignId != 0) {
        CampaignId = other.CampaignId;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          version_ = new global::ProtoBufClass.Common.Item();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.IsCarwale != false) {
        IsCarwale = other.IsCarwale;
      }
      if (other.IsCarTrade != false) {
        IsCarTrade = other.IsCarTrade;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CampaignId = input.ReadInt32();
            break;
          }
          case 18: {
            if (version_ == null) {
              version_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(version_);
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 32: {
            IsCarwale = input.ReadBool();
            break;
          }
          case 40: {
            IsCarTrade = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignPlatform : pb::IMessage<CampaignPlatform> {
    private static readonly pb::MessageParser<CampaignPlatform> _parser = new pb::MessageParser<CampaignPlatform>(() => new CampaignPlatform());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignPlatform> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignPlatform() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignPlatform(CampaignPlatform other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      platformId_ = other.platformId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignPlatform Clone() {
      return new CampaignPlatform(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::ProtoBufClass.Campaigns.CampaignId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "PlatformId" field.</summary>
    public const int PlatformIdFieldNumber = 2;
    private int platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignPlatform);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignPlatform other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (PlatformId != other.PlatformId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (PlatformId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlatformId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (PlatformId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignPlatform other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::ProtoBufClass.Campaigns.CampaignId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.PlatformId != 0) {
        PlatformId = other.PlatformId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::ProtoBufClass.Campaigns.CampaignId();
            }
            input.ReadMessage(id_);
            break;
          }
          case 16: {
            PlatformId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PQTemplateMappingList : pb::IMessage<PQTemplateMappingList> {
    private static readonly pb::MessageParser<PQTemplateMappingList> _parser = new pb::MessageParser<PQTemplateMappingList>(() => new PQTemplateMappingList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PQTemplateMappingList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateMappingList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateMappingList(PQTemplateMappingList other) : this() {
      templateMapDetails_ = other.templateMapDetails_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PQTemplateMappingList Clone() {
      return new PQTemplateMappingList(this);
    }

    /// <summary>Field number for the "TemplateMapDetails" field.</summary>
    public const int TemplateMapDetailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.PQTemplateMapping> _repeated_templateMapDetails_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.PQTemplateMapping.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.PQTemplateMapping> templateMapDetails_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.PQTemplateMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.PQTemplateMapping> TemplateMapDetails {
      get { return templateMapDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PQTemplateMappingList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PQTemplateMappingList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!templateMapDetails_.Equals(other.templateMapDetails_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= templateMapDetails_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      templateMapDetails_.WriteTo(output, _repeated_templateMapDetails_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += templateMapDetails_.CalculateSize(_repeated_templateMapDetails_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PQTemplateMappingList other) {
      if (other == null) {
        return;
      }
      templateMapDetails_.Add(other.templateMapDetails_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            templateMapDetails_.AddEntriesFrom(input, _repeated_templateMapDetails_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RuleIds : pb::IMessage<RuleIds> {
    private static readonly pb::MessageParser<RuleIds> _parser = new pb::MessageParser<RuleIds>(() => new RuleIds());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuleIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleIds(RuleIds other) : this() {
      ids_ = other.ids_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleIds Clone() {
      return new RuleIds(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private string ids_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ids {
      get { return ids_; }
      set {
        ids_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuleIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuleIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ids != other.Ids) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ids.Length != 0) hash ^= Ids.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ids.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ids);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ids.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ids);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuleIds other) {
      if (other == null) {
        return;
      }
      if (other.Ids.Length != 0) {
        Ids = other.Ids;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Ids = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignIdList : pb::IMessage<CampaignIdList> {
    private static readonly pb::MessageParser<CampaignIdList> _parser = new pb::MessageParser<CampaignIdList>(() => new CampaignIdList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignIdList(CampaignIdList other) : this() {
      campaignIds_ = other.campaignIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignIdList Clone() {
      return new CampaignIdList(this);
    }

    /// <summary>Field number for the "CampaignIds" field.</summary>
    public const int CampaignIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.CampaignId> _repeated_campaignIds_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.CampaignId.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.CampaignId> campaignIds_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.CampaignId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.CampaignId> CampaignIds {
      get { return campaignIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!campaignIds_.Equals(other.campaignIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= campaignIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      campaignIds_.WriteTo(output, _repeated_campaignIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += campaignIds_.CalculateSize(_repeated_campaignIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignIdList other) {
      if (other == null) {
        return;
      }
      campaignIds_.Add(other.campaignIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            campaignIds_.AddEntriesFrom(input, _repeated_campaignIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignList : pb::IMessage<CampaignList> {
    private static readonly pb::MessageParser<CampaignList> _parser = new pb::MessageParser<CampaignList>(() => new CampaignList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignList(CampaignList other) : this() {
      campaigns_ = other.campaigns_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignList Clone() {
      return new CampaignList(this);
    }

    /// <summary>Field number for the "Campaigns" field.</summary>
    public const int CampaignsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.Campaign> _repeated_campaigns_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.Campaign.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.Campaign> campaigns_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.Campaign>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.Campaign> Campaigns {
      get { return campaigns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!campaigns_.Equals(other.campaigns_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= campaigns_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      campaigns_.WriteTo(output, _repeated_campaigns_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += campaigns_.CalculateSize(_repeated_campaigns_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignList other) {
      if (other == null) {
        return;
      }
      campaigns_.Add(other.campaigns_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            campaigns_.AddEntriesFrom(input, _repeated_campaigns_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossSellCampaignList : pb::IMessage<CrossSellCampaignList> {
    private static readonly pb::MessageParser<CrossSellCampaignList> _parser = new pb::MessageParser<CrossSellCampaignList>(() => new CrossSellCampaignList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossSellCampaignList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaignList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaignList(CrossSellCampaignList other) : this() {
      crossSellCampaign_ = other.crossSellCampaign_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossSellCampaignList Clone() {
      return new CrossSellCampaignList(this);
    }

    /// <summary>Field number for the "CrossSellCampaign" field.</summary>
    public const int CrossSellCampaignFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.CrossSellCampaign> _repeated_crossSellCampaign_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.CrossSellCampaign.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.CrossSellCampaign> crossSellCampaign_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.CrossSellCampaign>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.CrossSellCampaign> CrossSellCampaign {
      get { return crossSellCampaign_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossSellCampaignList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossSellCampaignList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!crossSellCampaign_.Equals(other.crossSellCampaign_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= crossSellCampaign_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      crossSellCampaign_.WriteTo(output, _repeated_crossSellCampaign_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += crossSellCampaign_.CalculateSize(_repeated_crossSellCampaign_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossSellCampaignList other) {
      if (other == null) {
        return;
      }
      crossSellCampaign_.Add(other.crossSellCampaign_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            crossSellCampaign_.AddEntriesFrom(input, _repeated_crossSellCampaign_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DealerLocatorConfigurationRule : pb::IMessage<DealerLocatorConfigurationRule> {
    private static readonly pb::MessageParser<DealerLocatorConfigurationRule> _parser = new pb::MessageParser<DealerLocatorConfigurationRule>(() => new DealerLocatorConfigurationRule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealerLocatorConfigurationRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationRule(DealerLocatorConfigurationRule other) : this() {
      id_ = other.id_;
      CampaignId = other.campaignId_ != null ? other.CampaignId.Clone() : null;
      dealerId_ = other.dealerId_;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationRule Clone() {
      return new DealerLocatorConfigurationRule(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 2;
    private global::ProtoBufClass.Campaigns.CampaignId campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignId CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "DealerId" field.</summary>
    public const int DealerIdFieldNumber = 3;
    private int dealerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerId {
      get { return dealerId_; }
      set {
        dealerId_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 4;
    private global::ProtoBufClass.Common.Item user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealerLocatorConfigurationRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealerLocatorConfigurationRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(CampaignId, other.CampaignId)) return false;
      if (DealerId != other.DealerId) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (campaignId_ != null) hash ^= CampaignId.GetHashCode();
      if (DealerId != 0) hash ^= DealerId.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (campaignId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CampaignId);
      }
      if (DealerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DealerId);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (campaignId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CampaignId);
      }
      if (DealerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerId);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealerLocatorConfigurationRule other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.campaignId_ != null) {
        if (campaignId_ == null) {
          campaignId_ = new global::ProtoBufClass.Campaigns.CampaignId();
        }
        CampaignId.MergeFrom(other.CampaignId);
      }
      if (other.DealerId != 0) {
        DealerId = other.DealerId;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::ProtoBufClass.Common.Item();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (campaignId_ == null) {
              campaignId_ = new global::ProtoBufClass.Campaigns.CampaignId();
            }
            input.ReadMessage(campaignId_);
            break;
          }
          case 24: {
            DealerId = input.ReadInt32();
            break;
          }
          case 34: {
            if (user_ == null) {
              user_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DealerLocatorConfigurationRuleList : pb::IMessage<DealerLocatorConfigurationRuleList> {
    private static readonly pb::MessageParser<DealerLocatorConfigurationRuleList> _parser = new pb::MessageParser<DealerLocatorConfigurationRuleList>(() => new DealerLocatorConfigurationRuleList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealerLocatorConfigurationRuleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationRuleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationRuleList(DealerLocatorConfigurationRuleList other) : this() {
      dealerLocatorConfiguration_ = other.dealerLocatorConfiguration_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationRuleList Clone() {
      return new DealerLocatorConfigurationRuleList(this);
    }

    /// <summary>Field number for the "DealerLocatorConfiguration" field.</summary>
    public const int DealerLocatorConfigurationFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRule> _repeated_dealerLocatorConfiguration_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRule.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRule> dealerLocatorConfiguration_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationRule> DealerLocatorConfiguration {
      get { return dealerLocatorConfiguration_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealerLocatorConfigurationRuleList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealerLocatorConfigurationRuleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dealerLocatorConfiguration_.Equals(other.dealerLocatorConfiguration_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dealerLocatorConfiguration_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dealerLocatorConfiguration_.WriteTo(output, _repeated_dealerLocatorConfiguration_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dealerLocatorConfiguration_.CalculateSize(_repeated_dealerLocatorConfiguration_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealerLocatorConfigurationRuleList other) {
      if (other == null) {
        return;
      }
      dealerLocatorConfiguration_.Add(other.dealerLocatorConfiguration_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            dealerLocatorConfiguration_.AddEntriesFrom(input, _repeated_dealerLocatorConfiguration_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GlobalSearchFeaturedCar : pb::IMessage<GlobalSearchFeaturedCar> {
    private static readonly pb::MessageParser<GlobalSearchFeaturedCar> _parser = new pb::MessageParser<GlobalSearchFeaturedCar>(() => new GlobalSearchFeaturedCar());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GlobalSearchFeaturedCar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSearchFeaturedCar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSearchFeaturedCar(GlobalSearchFeaturedCar other) : this() {
      makeId_ = other.makeId_;
      makeName_ = other.makeName_;
      modelId_ = other.modelId_;
      modelName_ = other.modelName_;
      rootId_ = other.rootId_;
      rootName_ = other.rootName_;
      isUpcoming_ = other.isUpcoming_;
      maskingName_ = other.maskingName_;
      outputName_ = other.outputName_;
      targetModelId_ = other.targetModelId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSearchFeaturedCar Clone() {
      return new GlobalSearchFeaturedCar(this);
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 1;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "MakeName" field.</summary>
    public const int MakeNameFieldNumber = 2;
    private string makeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MakeName {
      get { return makeName_; }
      set {
        makeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 3;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 4;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RootId" field.</summary>
    public const int RootIdFieldNumber = 5;
    private int rootId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RootId {
      get { return rootId_; }
      set {
        rootId_ = value;
      }
    }

    /// <summary>Field number for the "RootName" field.</summary>
    public const int RootNameFieldNumber = 6;
    private string rootName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RootName {
      get { return rootName_; }
      set {
        rootName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsUpcoming" field.</summary>
    public const int IsUpcomingFieldNumber = 7;
    private bool isUpcoming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUpcoming {
      get { return isUpcoming_; }
      set {
        isUpcoming_ = value;
      }
    }

    /// <summary>Field number for the "MaskingName" field.</summary>
    public const int MaskingNameFieldNumber = 8;
    private string maskingName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingName {
      get { return maskingName_; }
      set {
        maskingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OutputName" field.</summary>
    public const int OutputNameFieldNumber = 9;
    private string outputName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputName {
      get { return outputName_; }
      set {
        outputName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TargetModelId" field.</summary>
    public const int TargetModelIdFieldNumber = 10;
    private int targetModelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetModelId {
      get { return targetModelId_; }
      set {
        targetModelId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GlobalSearchFeaturedCar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GlobalSearchFeaturedCar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakeId != other.MakeId) return false;
      if (MakeName != other.MakeName) return false;
      if (ModelId != other.ModelId) return false;
      if (ModelName != other.ModelName) return false;
      if (RootId != other.RootId) return false;
      if (RootName != other.RootName) return false;
      if (IsUpcoming != other.IsUpcoming) return false;
      if (MaskingName != other.MaskingName) return false;
      if (OutputName != other.OutputName) return false;
      if (TargetModelId != other.TargetModelId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (MakeName.Length != 0) hash ^= MakeName.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (RootId != 0) hash ^= RootId.GetHashCode();
      if (RootName.Length != 0) hash ^= RootName.GetHashCode();
      if (IsUpcoming != false) hash ^= IsUpcoming.GetHashCode();
      if (MaskingName.Length != 0) hash ^= MaskingName.GetHashCode();
      if (OutputName.Length != 0) hash ^= OutputName.GetHashCode();
      if (TargetModelId != 0) hash ^= TargetModelId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MakeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MakeId);
      }
      if (MakeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MakeName);
      }
      if (ModelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ModelId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModelName);
      }
      if (RootId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RootId);
      }
      if (RootName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RootName);
      }
      if (IsUpcoming != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsUpcoming);
      }
      if (MaskingName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaskingName);
      }
      if (OutputName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OutputName);
      }
      if (TargetModelId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TargetModelId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (MakeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MakeName);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (RootId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RootId);
      }
      if (RootName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RootName);
      }
      if (IsUpcoming != false) {
        size += 1 + 1;
      }
      if (MaskingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingName);
      }
      if (OutputName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputName);
      }
      if (TargetModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetModelId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GlobalSearchFeaturedCar other) {
      if (other == null) {
        return;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.MakeName.Length != 0) {
        MakeName = other.MakeName;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.RootId != 0) {
        RootId = other.RootId;
      }
      if (other.RootName.Length != 0) {
        RootName = other.RootName;
      }
      if (other.IsUpcoming != false) {
        IsUpcoming = other.IsUpcoming;
      }
      if (other.MaskingName.Length != 0) {
        MaskingName = other.MaskingName;
      }
      if (other.OutputName.Length != 0) {
        OutputName = other.OutputName;
      }
      if (other.TargetModelId != 0) {
        TargetModelId = other.TargetModelId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MakeId = input.ReadInt32();
            break;
          }
          case 18: {
            MakeName = input.ReadString();
            break;
          }
          case 24: {
            ModelId = input.ReadInt32();
            break;
          }
          case 34: {
            ModelName = input.ReadString();
            break;
          }
          case 40: {
            RootId = input.ReadInt32();
            break;
          }
          case 50: {
            RootName = input.ReadString();
            break;
          }
          case 56: {
            IsUpcoming = input.ReadBool();
            break;
          }
          case 66: {
            MaskingName = input.ReadString();
            break;
          }
          case 74: {
            OutputName = input.ReadString();
            break;
          }
          case 80: {
            TargetModelId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeaturedCarList : pb::IMessage<FeaturedCarList> {
    private static readonly pb::MessageParser<FeaturedCarList> _parser = new pb::MessageParser<FeaturedCarList>(() => new FeaturedCarList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturedCarList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedCarList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedCarList(FeaturedCarList other) : this() {
      featuredCar_ = other.featuredCar_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturedCarList Clone() {
      return new FeaturedCarList(this);
    }

    /// <summary>Field number for the "FeaturedCar" field.</summary>
    public const int FeaturedCarFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.GlobalSearchFeaturedCar> _repeated_featuredCar_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.GlobalSearchFeaturedCar.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.GlobalSearchFeaturedCar> featuredCar_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.GlobalSearchFeaturedCar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.GlobalSearchFeaturedCar> FeaturedCar {
      get { return featuredCar_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturedCarList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturedCarList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!featuredCar_.Equals(other.featuredCar_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= featuredCar_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      featuredCar_.WriteTo(output, _repeated_featuredCar_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += featuredCar_.CalculateSize(_repeated_featuredCar_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturedCarList other) {
      if (other == null) {
        return;
      }
      featuredCar_.Add(other.featuredCar_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            featuredCar_.AddEntriesFrom(input, _repeated_featuredCar_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignStatus : pb::IMessage<CampaignStatus> {
    private static readonly pb::MessageParser<CampaignStatus> _parser = new pb::MessageParser<CampaignStatus>(() => new CampaignStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignStatus(CampaignStatus other) : this() {
      id_ = other.id_;
      runningStatus_ = other.runningStatus_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignStatus Clone() {
      return new CampaignStatus(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RunningStatus" field.</summary>
    public const int RunningStatusFieldNumber = 2;
    private int runningStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RunningStatus {
      get { return runningStatus_; }
      set {
        runningStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RunningStatus != other.RunningStatus) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RunningStatus != 0) hash ^= RunningStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RunningStatus != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RunningStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RunningStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RunningStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignStatus other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RunningStatus != 0) {
        RunningStatus = other.RunningStatus;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RunningStatus = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dealer : pb::IMessage<Dealer> {
    private static readonly pb::MessageParser<Dealer> _parser = new pb::MessageParser<Dealer>(() => new Dealer());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dealer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dealer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dealer(Dealer other) : this() {
      Dealer_ = other.dealer_ != null ? other.Dealer_.Clone() : null;
      address_ = other.address_;
      emailId_ = other.emailId_;
      pinCode_ = other.pinCode_;
      faxNo_ = other.faxNo_;
      websiteUrl_ = other.websiteUrl_;
      mobileNo_ = other.mobileNo_;
      landLineNo_ = other.landLineNo_;
      Make = other.make_ != null ? other.Make.Clone() : null;
      State = other.state_ != null ? other.State.Clone() : null;
      City = other.city_ != null ? other.City.Clone() : null;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      isLocatorActive_ = other.isLocatorActive_;
      dealerLocatorConfigurationId_ = other.dealerLocatorConfigurationId_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      landlineCode_ = other.landlineCode_;
      profilePhotoHostUrl_ = other.profilePhotoHostUrl_;
      profilePhotoUrl_ = other.profilePhotoUrl_;
      CampaignId = other.campaignId_ != null ? other.CampaignId.Clone() : null;
      contactNumber_ = other.contactNumber_;
      campaignIsRunning_ = other.campaignIsRunning_;
      campaignIsActive_ = other.campaignIsActive_;
      isCarwale_ = other.isCarwale_;
      isCarTrade_ = other.isCarTrade_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dealer Clone() {
      return new Dealer(this);
    }

    /// <summary>Field number for the "Dealer" field.</summary>
    public const int Dealer_FieldNumber = 1;
    private global::ProtoBufClass.Common.Item dealer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Dealer_ {
      get { return dealer_; }
      set {
        dealer_ = value;
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 2;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EmailId" field.</summary>
    public const int EmailIdFieldNumber = 3;
    private string emailId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmailId {
      get { return emailId_; }
      set {
        emailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PinCode" field.</summary>
    public const int PinCodeFieldNumber = 4;
    private string pinCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PinCode {
      get { return pinCode_; }
      set {
        pinCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FaxNo" field.</summary>
    public const int FaxNoFieldNumber = 5;
    private string faxNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaxNo {
      get { return faxNo_; }
      set {
        faxNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WebsiteUrl" field.</summary>
    public const int WebsiteUrlFieldNumber = 6;
    private string websiteUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebsiteUrl {
      get { return websiteUrl_; }
      set {
        websiteUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MobileNo" field.</summary>
    public const int MobileNoFieldNumber = 7;
    private string mobileNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobileNo {
      get { return mobileNo_; }
      set {
        mobileNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LandLineNo" field.</summary>
    public const int LandLineNoFieldNumber = 8;
    private string landLineNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandLineNo {
      get { return landLineNo_; }
      set {
        landLineNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Make" field.</summary>
    public const int MakeFieldNumber = 9;
    private global::ProtoBufClass.Common.Item make_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Make {
      get { return make_; }
      set {
        make_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 10;
    private global::ProtoBufClass.Common.Item state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 11;
    private global::ProtoBufClass.Common.Item city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item City {
      get { return city_; }
      set {
        city_ = value;
      }
    }

    /// <summary>Field number for the "Latitude" field.</summary>
    public const int LatitudeFieldNumber = 12;
    private string latitude_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Latitude {
      get { return latitude_; }
      set {
        latitude_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Longitude" field.</summary>
    public const int LongitudeFieldNumber = 13;
    private string longitude_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Longitude {
      get { return longitude_; }
      set {
        longitude_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsLocatorActive" field.</summary>
    public const int IsLocatorActiveFieldNumber = 14;
    private bool isLocatorActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLocatorActive {
      get { return isLocatorActive_; }
      set {
        isLocatorActive_ = value;
      }
    }

    /// <summary>Field number for the "DealerLocatorConfigurationId" field.</summary>
    public const int DealerLocatorConfigurationIdFieldNumber = 15;
    private int dealerLocatorConfigurationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerLocatorConfigurationId {
      get { return dealerLocatorConfigurationId_; }
      set {
        dealerLocatorConfigurationId_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 16;
    private string startTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 17;
    private string endTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 18;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 19;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LandlineCode" field.</summary>
    public const int LandlineCodeFieldNumber = 20;
    private string landlineCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandlineCode {
      get { return landlineCode_; }
      set {
        landlineCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfilePhotoHostUrl" field.</summary>
    public const int ProfilePhotoHostUrlFieldNumber = 21;
    private string profilePhotoHostUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfilePhotoHostUrl {
      get { return profilePhotoHostUrl_; }
      set {
        profilePhotoHostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfilePhotoUrl" field.</summary>
    public const int ProfilePhotoUrlFieldNumber = 22;
    private string profilePhotoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfilePhotoUrl {
      get { return profilePhotoUrl_; }
      set {
        profilePhotoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 23;
    private global::ProtoBufClass.Campaigns.CampaignId campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignId CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "ContactNumber" field.</summary>
    public const int ContactNumberFieldNumber = 24;
    private string contactNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactNumber {
      get { return contactNumber_; }
      set {
        contactNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CampaignIsRunning" field.</summary>
    public const int CampaignIsRunningFieldNumber = 25;
    private int campaignIsRunning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignIsRunning {
      get { return campaignIsRunning_; }
      set {
        campaignIsRunning_ = value;
      }
    }

    /// <summary>Field number for the "CampaignIsActive" field.</summary>
    public const int CampaignIsActiveFieldNumber = 26;
    private bool campaignIsActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CampaignIsActive {
      get { return campaignIsActive_; }
      set {
        campaignIsActive_ = value;
      }
    }

    /// <summary>Field number for the "IsCarwale" field.</summary>
    public const int IsCarwaleFieldNumber = 27;
    private bool isCarwale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCarwale {
      get { return isCarwale_; }
      set {
        isCarwale_ = value;
      }
    }

    /// <summary>Field number for the "IsCarTrade" field.</summary>
    public const int IsCarTradeFieldNumber = 28;
    private bool isCarTrade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCarTrade {
      get { return isCarTrade_; }
      set {
        isCarTrade_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dealer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dealer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dealer_, other.Dealer_)) return false;
      if (Address != other.Address) return false;
      if (EmailId != other.EmailId) return false;
      if (PinCode != other.PinCode) return false;
      if (FaxNo != other.FaxNo) return false;
      if (WebsiteUrl != other.WebsiteUrl) return false;
      if (MobileNo != other.MobileNo) return false;
      if (LandLineNo != other.LandLineNo) return false;
      if (!object.Equals(Make, other.Make)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(City, other.City)) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (IsLocatorActive != other.IsLocatorActive) return false;
      if (DealerLocatorConfigurationId != other.DealerLocatorConfigurationId) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (LandlineCode != other.LandlineCode) return false;
      if (ProfilePhotoHostUrl != other.ProfilePhotoHostUrl) return false;
      if (ProfilePhotoUrl != other.ProfilePhotoUrl) return false;
      if (!object.Equals(CampaignId, other.CampaignId)) return false;
      if (ContactNumber != other.ContactNumber) return false;
      if (CampaignIsRunning != other.CampaignIsRunning) return false;
      if (CampaignIsActive != other.CampaignIsActive) return false;
      if (IsCarwale != other.IsCarwale) return false;
      if (IsCarTrade != other.IsCarTrade) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dealer_ != null) hash ^= Dealer_.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (EmailId.Length != 0) hash ^= EmailId.GetHashCode();
      if (PinCode.Length != 0) hash ^= PinCode.GetHashCode();
      if (FaxNo.Length != 0) hash ^= FaxNo.GetHashCode();
      if (WebsiteUrl.Length != 0) hash ^= WebsiteUrl.GetHashCode();
      if (MobileNo.Length != 0) hash ^= MobileNo.GetHashCode();
      if (LandLineNo.Length != 0) hash ^= LandLineNo.GetHashCode();
      if (make_ != null) hash ^= Make.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (Latitude.Length != 0) hash ^= Latitude.GetHashCode();
      if (Longitude.Length != 0) hash ^= Longitude.GetHashCode();
      if (IsLocatorActive != false) hash ^= IsLocatorActive.GetHashCode();
      if (DealerLocatorConfigurationId != 0) hash ^= DealerLocatorConfigurationId.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (LandlineCode.Length != 0) hash ^= LandlineCode.GetHashCode();
      if (ProfilePhotoHostUrl.Length != 0) hash ^= ProfilePhotoHostUrl.GetHashCode();
      if (ProfilePhotoUrl.Length != 0) hash ^= ProfilePhotoUrl.GetHashCode();
      if (campaignId_ != null) hash ^= CampaignId.GetHashCode();
      if (ContactNumber.Length != 0) hash ^= ContactNumber.GetHashCode();
      if (CampaignIsRunning != 0) hash ^= CampaignIsRunning.GetHashCode();
      if (CampaignIsActive != false) hash ^= CampaignIsActive.GetHashCode();
      if (IsCarwale != false) hash ^= IsCarwale.GetHashCode();
      if (IsCarTrade != false) hash ^= IsCarTrade.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dealer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Dealer_);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (EmailId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EmailId);
      }
      if (PinCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PinCode);
      }
      if (FaxNo.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FaxNo);
      }
      if (WebsiteUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(WebsiteUrl);
      }
      if (MobileNo.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MobileNo);
      }
      if (LandLineNo.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LandLineNo);
      }
      if (make_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Make);
      }
      if (state_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(State);
      }
      if (city_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(City);
      }
      if (Latitude.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Latitude);
      }
      if (Longitude.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Longitude);
      }
      if (IsLocatorActive != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsLocatorActive);
      }
      if (DealerLocatorConfigurationId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(DealerLocatorConfigurationId);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(EndTime);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(LastName);
      }
      if (LandlineCode.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(LandlineCode);
      }
      if (ProfilePhotoHostUrl.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ProfilePhotoHostUrl);
      }
      if (ProfilePhotoUrl.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ProfilePhotoUrl);
      }
      if (campaignId_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CampaignId);
      }
      if (ContactNumber.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ContactNumber);
      }
      if (CampaignIsRunning != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(CampaignIsRunning);
      }
      if (CampaignIsActive != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(CampaignIsActive);
      }
      if (IsCarwale != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(IsCarwale);
      }
      if (IsCarTrade != false) {
        output.WriteRawTag(224, 1);
        output.WriteBool(IsCarTrade);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dealer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dealer_);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (EmailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailId);
      }
      if (PinCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PinCode);
      }
      if (FaxNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaxNo);
      }
      if (WebsiteUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebsiteUrl);
      }
      if (MobileNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MobileNo);
      }
      if (LandLineNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandLineNo);
      }
      if (make_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Make);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (city_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(City);
      }
      if (Latitude.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Latitude);
      }
      if (Longitude.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Longitude);
      }
      if (IsLocatorActive != false) {
        size += 1 + 1;
      }
      if (DealerLocatorConfigurationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerLocatorConfigurationId);
      }
      if (StartTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (FirstName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (LandlineCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LandlineCode);
      }
      if (ProfilePhotoHostUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfilePhotoHostUrl);
      }
      if (ProfilePhotoUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfilePhotoUrl);
      }
      if (campaignId_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CampaignId);
      }
      if (ContactNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContactNumber);
      }
      if (CampaignIsRunning != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CampaignIsRunning);
      }
      if (CampaignIsActive != false) {
        size += 2 + 1;
      }
      if (IsCarwale != false) {
        size += 2 + 1;
      }
      if (IsCarTrade != false) {
        size += 2 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dealer other) {
      if (other == null) {
        return;
      }
      if (other.dealer_ != null) {
        if (dealer_ == null) {
          dealer_ = new global::ProtoBufClass.Common.Item();
        }
        Dealer_.MergeFrom(other.Dealer_);
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.EmailId.Length != 0) {
        EmailId = other.EmailId;
      }
      if (other.PinCode.Length != 0) {
        PinCode = other.PinCode;
      }
      if (other.FaxNo.Length != 0) {
        FaxNo = other.FaxNo;
      }
      if (other.WebsiteUrl.Length != 0) {
        WebsiteUrl = other.WebsiteUrl;
      }
      if (other.MobileNo.Length != 0) {
        MobileNo = other.MobileNo;
      }
      if (other.LandLineNo.Length != 0) {
        LandLineNo = other.LandLineNo;
      }
      if (other.make_ != null) {
        if (make_ == null) {
          make_ = new global::ProtoBufClass.Common.Item();
        }
        Make.MergeFrom(other.Make);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          state_ = new global::ProtoBufClass.Common.Item();
        }
        State.MergeFrom(other.State);
      }
      if (other.city_ != null) {
        if (city_ == null) {
          city_ = new global::ProtoBufClass.Common.Item();
        }
        City.MergeFrom(other.City);
      }
      if (other.Latitude.Length != 0) {
        Latitude = other.Latitude;
      }
      if (other.Longitude.Length != 0) {
        Longitude = other.Longitude;
      }
      if (other.IsLocatorActive != false) {
        IsLocatorActive = other.IsLocatorActive;
      }
      if (other.DealerLocatorConfigurationId != 0) {
        DealerLocatorConfigurationId = other.DealerLocatorConfigurationId;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.LandlineCode.Length != 0) {
        LandlineCode = other.LandlineCode;
      }
      if (other.ProfilePhotoHostUrl.Length != 0) {
        ProfilePhotoHostUrl = other.ProfilePhotoHostUrl;
      }
      if (other.ProfilePhotoUrl.Length != 0) {
        ProfilePhotoUrl = other.ProfilePhotoUrl;
      }
      if (other.campaignId_ != null) {
        if (campaignId_ == null) {
          campaignId_ = new global::ProtoBufClass.Campaigns.CampaignId();
        }
        CampaignId.MergeFrom(other.CampaignId);
      }
      if (other.ContactNumber.Length != 0) {
        ContactNumber = other.ContactNumber;
      }
      if (other.CampaignIsRunning != 0) {
        CampaignIsRunning = other.CampaignIsRunning;
      }
      if (other.CampaignIsActive != false) {
        CampaignIsActive = other.CampaignIsActive;
      }
      if (other.IsCarwale != false) {
        IsCarwale = other.IsCarwale;
      }
      if (other.IsCarTrade != false) {
        IsCarTrade = other.IsCarTrade;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dealer_ == null) {
              dealer_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(dealer_);
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 26: {
            EmailId = input.ReadString();
            break;
          }
          case 34: {
            PinCode = input.ReadString();
            break;
          }
          case 42: {
            FaxNo = input.ReadString();
            break;
          }
          case 50: {
            WebsiteUrl = input.ReadString();
            break;
          }
          case 58: {
            MobileNo = input.ReadString();
            break;
          }
          case 66: {
            LandLineNo = input.ReadString();
            break;
          }
          case 74: {
            if (make_ == null) {
              make_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(make_);
            break;
          }
          case 82: {
            if (state_ == null) {
              state_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(state_);
            break;
          }
          case 90: {
            if (city_ == null) {
              city_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(city_);
            break;
          }
          case 98: {
            Latitude = input.ReadString();
            break;
          }
          case 106: {
            Longitude = input.ReadString();
            break;
          }
          case 112: {
            IsLocatorActive = input.ReadBool();
            break;
          }
          case 120: {
            DealerLocatorConfigurationId = input.ReadInt32();
            break;
          }
          case 130: {
            StartTime = input.ReadString();
            break;
          }
          case 138: {
            EndTime = input.ReadString();
            break;
          }
          case 146: {
            FirstName = input.ReadString();
            break;
          }
          case 154: {
            LastName = input.ReadString();
            break;
          }
          case 162: {
            LandlineCode = input.ReadString();
            break;
          }
          case 170: {
            ProfilePhotoHostUrl = input.ReadString();
            break;
          }
          case 178: {
            ProfilePhotoUrl = input.ReadString();
            break;
          }
          case 186: {
            if (campaignId_ == null) {
              campaignId_ = new global::ProtoBufClass.Campaigns.CampaignId();
            }
            input.ReadMessage(campaignId_);
            break;
          }
          case 194: {
            ContactNumber = input.ReadString();
            break;
          }
          case 200: {
            CampaignIsRunning = input.ReadInt32();
            break;
          }
          case 208: {
            CampaignIsActive = input.ReadBool();
            break;
          }
          case 216: {
            IsCarwale = input.ReadBool();
            break;
          }
          case 224: {
            IsCarTrade = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DealersList : pb::IMessage<DealersList> {
    private static readonly pb::MessageParser<DealersList> _parser = new pb::MessageParser<DealersList>(() => new DealersList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealersList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealersList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealersList(DealersList other) : this() {
      dealerDetails_ = other.dealerDetails_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealersList Clone() {
      return new DealersList(this);
    }

    /// <summary>Field number for the "DealerDetails" field.</summary>
    public const int DealerDetailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.Dealer> _repeated_dealerDetails_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.Dealer.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.Dealer> dealerDetails_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.Dealer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.Dealer> DealerDetails {
      get { return dealerDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealersList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealersList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dealerDetails_.Equals(other.dealerDetails_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dealerDetails_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dealerDetails_.WriteTo(output, _repeated_dealerDetails_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dealerDetails_.CalculateSize(_repeated_dealerDetails_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealersList other) {
      if (other == null) {
        return;
      }
      dealerDetails_.Add(other.dealerDetails_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            dealerDetails_.AddEntriesFrom(input, _repeated_dealerDetails_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MakeCity : pb::IMessage<MakeCity> {
    private static readonly pb::MessageParser<MakeCity> _parser = new pb::MessageParser<MakeCity>(() => new MakeCity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MakeCity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeCity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeCity(MakeCity other) : this() {
      Make = other.make_ != null ? other.Make.Clone() : null;
      City = other.city_ != null ? other.City.Clone() : null;
      State = other.state_ != null ? other.State.Clone() : null;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeCity Clone() {
      return new MakeCity(this);
    }

    /// <summary>Field number for the "Make" field.</summary>
    public const int MakeFieldNumber = 1;
    private global::ProtoBufClass.Common.Item make_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Make {
      get { return make_; }
      set {
        make_ = value;
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 2;
    private global::ProtoBufClass.Common.Item city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item City {
      get { return city_; }
      set {
        city_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 3;
    private global::ProtoBufClass.Common.Item state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 4;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MakeCity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MakeCity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Make, other.Make)) return false;
      if (!object.Equals(City, other.City)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (make_ != null) hash ^= Make.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (make_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Make);
      }
      if (city_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(City);
      }
      if (state_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(State);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (make_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Make);
      }
      if (city_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(City);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MakeCity other) {
      if (other == null) {
        return;
      }
      if (other.make_ != null) {
        if (make_ == null) {
          make_ = new global::ProtoBufClass.Common.Item();
        }
        Make.MergeFrom(other.Make);
      }
      if (other.city_ != null) {
        if (city_ == null) {
          city_ = new global::ProtoBufClass.Common.Item();
        }
        City.MergeFrom(other.City);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          state_ = new global::ProtoBufClass.Common.Item();
        }
        State.MergeFrom(other.State);
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (make_ == null) {
              make_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(make_);
            break;
          }
          case 18: {
            if (city_ == null) {
              city_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(city_);
            break;
          }
          case 26: {
            if (state_ == null) {
              state_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(state_);
            break;
          }
          case 32: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DealerId : pb::IMessage<DealerId> {
    private static readonly pb::MessageParser<DealerId> _parser = new pb::MessageParser<DealerId>(() => new DealerId());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealerId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerId(DealerId other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      applicationId_ = other.applicationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerId Clone() {
      return new DealerId(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::ProtoBufClass.Common.Item id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.Item Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealerId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealerId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (ApplicationId != other.ApplicationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealerId other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::ProtoBufClass.Common.Item();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::ProtoBufClass.Common.Item();
            }
            input.ReadMessage(id_);
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SponsoredComparisonInput : pb::IMessage<SponsoredComparisonInput> {
    private static readonly pb::MessageParser<SponsoredComparisonInput> _parser = new pb::MessageParser<SponsoredComparisonInput>(() => new SponsoredComparisonInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SponsoredComparisonInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsoredComparisonInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsoredComparisonInput(SponsoredComparisonInput other) : this() {
      versionIds_ = other.versionIds_;
      campaignCategory_ = other.campaignCategory_;
      cityId_ = other.cityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsoredComparisonInput Clone() {
      return new SponsoredComparisonInput(this);
    }

    /// <summary>Field number for the "VersionIds" field.</summary>
    public const int VersionIdsFieldNumber = 1;
    private string versionIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionIds {
      get { return versionIds_; }
      set {
        versionIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CampaignCategory" field.</summary>
    public const int CampaignCategoryFieldNumber = 2;
    private int campaignCategory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignCategory {
      get { return campaignCategory_; }
      set {
        campaignCategory_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 3;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SponsoredComparisonInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SponsoredComparisonInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionIds != other.VersionIds) return false;
      if (CampaignCategory != other.CampaignCategory) return false;
      if (CityId != other.CityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VersionIds.Length != 0) hash ^= VersionIds.GetHashCode();
      if (CampaignCategory != 0) hash ^= CampaignCategory.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VersionIds.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VersionIds);
      }
      if (CampaignCategory != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CampaignCategory);
      }
      if (CityId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VersionIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionIds);
      }
      if (CampaignCategory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CampaignCategory);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SponsoredComparisonInput other) {
      if (other == null) {
        return;
      }
      if (other.VersionIds.Length != 0) {
        VersionIds = other.VersionIds;
      }
      if (other.CampaignCategory != 0) {
        CampaignCategory = other.CampaignCategory;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            VersionIds = input.ReadString();
            break;
          }
          case 16: {
            CampaignCategory = input.ReadInt32();
            break;
          }
          case 24: {
            CityId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SponsoredCarComparisonData : pb::IMessage<SponsoredCarComparisonData> {
    private static readonly pb::MessageParser<SponsoredCarComparisonData> _parser = new pb::MessageParser<SponsoredCarComparisonData>(() => new SponsoredCarComparisonData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SponsoredCarComparisonData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsoredCarComparisonData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsoredCarComparisonData(SponsoredCarComparisonData other) : this() {
      externalLinkText_ = other.externalLinkText_;
      externalLinkTracker_ = other.externalLinkTracker_;
      carNameClickTracker_ = other.carNameClickTracker_;
      carImageClickTracker_ = other.carImageClickTracker_;
      carImpressionTracker_ = other.carImpressionTracker_;
      featuredVersionId_ = other.featuredVersionId_;
      targetVersionId_ = other.targetVersionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SponsoredCarComparisonData Clone() {
      return new SponsoredCarComparisonData(this);
    }

    /// <summary>Field number for the "ExternalLinkText" field.</summary>
    public const int ExternalLinkTextFieldNumber = 1;
    private string externalLinkText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalLinkText {
      get { return externalLinkText_; }
      set {
        externalLinkText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExternalLinkTracker" field.</summary>
    public const int ExternalLinkTrackerFieldNumber = 2;
    private string externalLinkTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalLinkTracker {
      get { return externalLinkTracker_; }
      set {
        externalLinkTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarNameClickTracker" field.</summary>
    public const int CarNameClickTrackerFieldNumber = 3;
    private string carNameClickTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarNameClickTracker {
      get { return carNameClickTracker_; }
      set {
        carNameClickTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarImageClickTracker" field.</summary>
    public const int CarImageClickTrackerFieldNumber = 4;
    private string carImageClickTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarImageClickTracker {
      get { return carImageClickTracker_; }
      set {
        carImageClickTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarImpressionTracker" field.</summary>
    public const int CarImpressionTrackerFieldNumber = 5;
    private string carImpressionTracker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarImpressionTracker {
      get { return carImpressionTracker_; }
      set {
        carImpressionTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FeaturedVersionId" field.</summary>
    public const int FeaturedVersionIdFieldNumber = 6;
    private int featuredVersionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FeaturedVersionId {
      get { return featuredVersionId_; }
      set {
        featuredVersionId_ = value;
      }
    }

    /// <summary>Field number for the "TargetVersionId" field.</summary>
    public const int TargetVersionIdFieldNumber = 7;
    private int targetVersionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetVersionId {
      get { return targetVersionId_; }
      set {
        targetVersionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SponsoredCarComparisonData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SponsoredCarComparisonData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExternalLinkText != other.ExternalLinkText) return false;
      if (ExternalLinkTracker != other.ExternalLinkTracker) return false;
      if (CarNameClickTracker != other.CarNameClickTracker) return false;
      if (CarImageClickTracker != other.CarImageClickTracker) return false;
      if (CarImpressionTracker != other.CarImpressionTracker) return false;
      if (FeaturedVersionId != other.FeaturedVersionId) return false;
      if (TargetVersionId != other.TargetVersionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExternalLinkText.Length != 0) hash ^= ExternalLinkText.GetHashCode();
      if (ExternalLinkTracker.Length != 0) hash ^= ExternalLinkTracker.GetHashCode();
      if (CarNameClickTracker.Length != 0) hash ^= CarNameClickTracker.GetHashCode();
      if (CarImageClickTracker.Length != 0) hash ^= CarImageClickTracker.GetHashCode();
      if (CarImpressionTracker.Length != 0) hash ^= CarImpressionTracker.GetHashCode();
      if (FeaturedVersionId != 0) hash ^= FeaturedVersionId.GetHashCode();
      if (TargetVersionId != 0) hash ^= TargetVersionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExternalLinkText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalLinkText);
      }
      if (ExternalLinkTracker.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalLinkTracker);
      }
      if (CarNameClickTracker.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarNameClickTracker);
      }
      if (CarImageClickTracker.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CarImageClickTracker);
      }
      if (CarImpressionTracker.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CarImpressionTracker);
      }
      if (FeaturedVersionId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FeaturedVersionId);
      }
      if (TargetVersionId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TargetVersionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExternalLinkText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalLinkText);
      }
      if (ExternalLinkTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalLinkTracker);
      }
      if (CarNameClickTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarNameClickTracker);
      }
      if (CarImageClickTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarImageClickTracker);
      }
      if (CarImpressionTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarImpressionTracker);
      }
      if (FeaturedVersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeaturedVersionId);
      }
      if (TargetVersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetVersionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SponsoredCarComparisonData other) {
      if (other == null) {
        return;
      }
      if (other.ExternalLinkText.Length != 0) {
        ExternalLinkText = other.ExternalLinkText;
      }
      if (other.ExternalLinkTracker.Length != 0) {
        ExternalLinkTracker = other.ExternalLinkTracker;
      }
      if (other.CarNameClickTracker.Length != 0) {
        CarNameClickTracker = other.CarNameClickTracker;
      }
      if (other.CarImageClickTracker.Length != 0) {
        CarImageClickTracker = other.CarImageClickTracker;
      }
      if (other.CarImpressionTracker.Length != 0) {
        CarImpressionTracker = other.CarImpressionTracker;
      }
      if (other.FeaturedVersionId != 0) {
        FeaturedVersionId = other.FeaturedVersionId;
      }
      if (other.TargetVersionId != 0) {
        TargetVersionId = other.TargetVersionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ExternalLinkText = input.ReadString();
            break;
          }
          case 18: {
            ExternalLinkTracker = input.ReadString();
            break;
          }
          case 26: {
            CarNameClickTracker = input.ReadString();
            break;
          }
          case 34: {
            CarImageClickTracker = input.ReadString();
            break;
          }
          case 42: {
            CarImpressionTracker = input.ReadString();
            break;
          }
          case 48: {
            FeaturedVersionId = input.ReadInt32();
            break;
          }
          case 56: {
            TargetVersionId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignCriteria : pb::IMessage<CampaignCriteria> {
    private static readonly pb::MessageParser<CampaignCriteria> _parser = new pb::MessageParser<CampaignCriteria>(() => new CampaignCriteria());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignCriteria> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCriteria() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCriteria(CampaignCriteria other) : this() {
      dealerId_ = other.dealerId_;
      UseCache = other.useCache_ != null ? other.UseCache.Clone() : null;
      campaignIds_ = other.campaignIds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCriteria Clone() {
      return new CampaignCriteria(this);
    }

    /// <summary>Field number for the "DealerId" field.</summary>
    public const int DealerIdFieldNumber = 1;
    private int dealerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerId {
      get { return dealerId_; }
      set {
        dealerId_ = value;
      }
    }

    /// <summary>Field number for the "UseCache" field.</summary>
    public const int UseCacheFieldNumber = 2;
    private global::ProtoBufClass.Common.BoolMessage useCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.BoolMessage UseCache {
      get { return useCache_; }
      set {
        useCache_ = value;
      }
    }

    /// <summary>Field number for the "CampaignIds" field.</summary>
    public const int CampaignIdsFieldNumber = 3;
    private string campaignIds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CampaignIds {
      get { return campaignIds_; }
      set {
        campaignIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignCriteria);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignCriteria other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DealerId != other.DealerId) return false;
      if (!object.Equals(UseCache, other.UseCache)) return false;
      if (CampaignIds != other.CampaignIds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DealerId != 0) hash ^= DealerId.GetHashCode();
      if (useCache_ != null) hash ^= UseCache.GetHashCode();
      if (CampaignIds.Length != 0) hash ^= CampaignIds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DealerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DealerId);
      }
      if (useCache_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UseCache);
      }
      if (CampaignIds.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CampaignIds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DealerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerId);
      }
      if (useCache_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UseCache);
      }
      if (CampaignIds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CampaignIds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignCriteria other) {
      if (other == null) {
        return;
      }
      if (other.DealerId != 0) {
        DealerId = other.DealerId;
      }
      if (other.useCache_ != null) {
        if (useCache_ == null) {
          useCache_ = new global::ProtoBufClass.Common.BoolMessage();
        }
        UseCache.MergeFrom(other.UseCache);
      }
      if (other.CampaignIds.Length != 0) {
        CampaignIds = other.CampaignIds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DealerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (useCache_ == null) {
              useCache_ = new global::ProtoBufClass.Common.BoolMessage();
            }
            input.ReadMessage(useCache_);
            break;
          }
          case 26: {
            CampaignIds = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DealerLocatorConfigurationCache : pb::IMessage<DealerLocatorConfigurationCache> {
    private static readonly pb::MessageParser<DealerLocatorConfigurationCache> _parser = new pb::MessageParser<DealerLocatorConfigurationCache>(() => new DealerLocatorConfigurationCache());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealerLocatorConfigurationCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationCache(DealerLocatorConfigurationCache other) : this() {
      stateId_ = other.stateId_;
      cityId_ = other.cityId_;
      makeId_ = other.makeId_;
      dealerId_ = other.dealerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationCache Clone() {
      return new DealerLocatorConfigurationCache(this);
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 1;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 2;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 3;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "DealerId" field.</summary>
    public const int DealerIdFieldNumber = 4;
    private int dealerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerId {
      get { return dealerId_; }
      set {
        dealerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealerLocatorConfigurationCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealerLocatorConfigurationCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StateId != other.StateId) return false;
      if (CityId != other.CityId) return false;
      if (MakeId != other.MakeId) return false;
      if (DealerId != other.DealerId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (DealerId != 0) hash ^= DealerId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StateId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StateId);
      }
      if (CityId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CityId);
      }
      if (MakeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MakeId);
      }
      if (DealerId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DealerId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (DealerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealerLocatorConfigurationCache other) {
      if (other == null) {
        return;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.DealerId != 0) {
        DealerId = other.DealerId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StateId = input.ReadInt32();
            break;
          }
          case 16: {
            CityId = input.ReadInt32();
            break;
          }
          case 24: {
            MakeId = input.ReadInt32();
            break;
          }
          case 32: {
            DealerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignConfigurationCache : pb::IMessage<CampaignConfigurationCache> {
    private static readonly pb::MessageParser<CampaignConfigurationCache> _parser = new pb::MessageParser<CampaignConfigurationCache>(() => new CampaignConfigurationCache());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignConfigurationCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignConfigurationCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignConfigurationCache(CampaignConfigurationCache other) : this() {
      stateId_ = other.stateId_;
      cityId_ = other.cityId_;
      zoneId_ = other.zoneId_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      dealerId_ = other.dealerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignConfigurationCache Clone() {
      return new CampaignConfigurationCache(this);
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 1;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 2;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "ZoneId" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 4;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 5;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "VersionId" field.</summary>
    public const int VersionIdFieldNumber = 6;
    private int versionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionId {
      get { return versionId_; }
      set {
        versionId_ = value;
      }
    }

    /// <summary>Field number for the "DealerId" field.</summary>
    public const int DealerIdFieldNumber = 7;
    private int dealerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerId {
      get { return dealerId_; }
      set {
        dealerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignConfigurationCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignConfigurationCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StateId != other.StateId) return false;
      if (CityId != other.CityId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (DealerId != other.DealerId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (VersionId != 0) hash ^= VersionId.GetHashCode();
      if (DealerId != 0) hash ^= DealerId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StateId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StateId);
      }
      if (CityId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CityId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ZoneId);
      }
      if (MakeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ModelId);
      }
      if (VersionId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VersionId);
      }
      if (DealerId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DealerId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (VersionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionId);
      }
      if (DealerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignConfigurationCache other) {
      if (other == null) {
        return;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId != 0) {
        VersionId = other.VersionId;
      }
      if (other.DealerId != 0) {
        DealerId = other.DealerId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StateId = input.ReadInt32();
            break;
          }
          case 16: {
            CityId = input.ReadInt32();
            break;
          }
          case 24: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 32: {
            MakeId = input.ReadInt32();
            break;
          }
          case 40: {
            ModelId = input.ReadInt32();
            break;
          }
          case 48: {
            VersionId = input.ReadInt32();
            break;
          }
          case 56: {
            DealerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DealerLocatorConfigurationCacheList : pb::IMessage<DealerLocatorConfigurationCacheList> {
    private static readonly pb::MessageParser<DealerLocatorConfigurationCacheList> _parser = new pb::MessageParser<DealerLocatorConfigurationCacheList>(() => new DealerLocatorConfigurationCacheList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealerLocatorConfigurationCacheList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationCacheList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationCacheList(DealerLocatorConfigurationCacheList other) : this() {
      dealerLocatorConfigList_ = other.dealerLocatorConfigList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealerLocatorConfigurationCacheList Clone() {
      return new DealerLocatorConfigurationCacheList(this);
    }

    /// <summary>Field number for the "DealerLocatorConfigList" field.</summary>
    public const int DealerLocatorConfigListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCache> _repeated_dealerLocatorConfigList_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCache.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCache> dealerLocatorConfigList_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCache>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.DealerLocatorConfigurationCache> DealerLocatorConfigList {
      get { return dealerLocatorConfigList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealerLocatorConfigurationCacheList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealerLocatorConfigurationCacheList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dealerLocatorConfigList_.Equals(other.dealerLocatorConfigList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dealerLocatorConfigList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dealerLocatorConfigList_.WriteTo(output, _repeated_dealerLocatorConfigList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dealerLocatorConfigList_.CalculateSize(_repeated_dealerLocatorConfigList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealerLocatorConfigurationCacheList other) {
      if (other == null) {
        return;
      }
      dealerLocatorConfigList_.Add(other.dealerLocatorConfigList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            dealerLocatorConfigList_.AddEntriesFrom(input, _repeated_dealerLocatorConfigList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignConfigurationCacheList : pb::IMessage<CampaignConfigurationCacheList> {
    private static readonly pb::MessageParser<CampaignConfigurationCacheList> _parser = new pb::MessageParser<CampaignConfigurationCacheList>(() => new CampaignConfigurationCacheList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignConfigurationCacheList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignConfigurationCacheList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignConfigurationCacheList(CampaignConfigurationCacheList other) : this() {
      campaignConfigLst_ = other.campaignConfigLst_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignConfigurationCacheList Clone() {
      return new CampaignConfigurationCacheList(this);
    }

    /// <summary>Field number for the "CampaignConfigLst" field.</summary>
    public const int CampaignConfigLstFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.CampaignConfigurationCache> _repeated_campaignConfigLst_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.CampaignConfigurationCache.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.CampaignConfigurationCache> campaignConfigLst_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.CampaignConfigurationCache>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.CampaignConfigurationCache> CampaignConfigLst {
      get { return campaignConfigLst_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignConfigurationCacheList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignConfigurationCacheList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!campaignConfigLst_.Equals(other.campaignConfigLst_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= campaignConfigLst_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      campaignConfigLst_.WriteTo(output, _repeated_campaignConfigLst_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += campaignConfigLst_.CalculateSize(_repeated_campaignConfigLst_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignConfigurationCacheList other) {
      if (other == null) {
        return;
      }
      campaignConfigLst_.Add(other.campaignConfigLst_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            campaignConfigLst_.AddEntriesFrom(input, _repeated_campaignConfigLst_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplacingModelDetails : pb::IMessage<ReplacingModelDetails> {
    private static readonly pb::MessageParser<ReplacingModelDetails> _parser = new pb::MessageParser<ReplacingModelDetails>(() => new ReplacingModelDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplacingModelDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplacingModelDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplacingModelDetails(ReplacingModelDetails other) : this() {
      newModelId_ = other.newModelId_;
      replacingModelId_ = other.replacingModelId_;
      updatedBy_ = other.updatedBy_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplacingModelDetails Clone() {
      return new ReplacingModelDetails(this);
    }

    /// <summary>Field number for the "NewModelId" field.</summary>
    public const int NewModelIdFieldNumber = 1;
    private int newModelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewModelId {
      get { return newModelId_; }
      set {
        newModelId_ = value;
      }
    }

    /// <summary>Field number for the "ReplacingModelId" field.</summary>
    public const int ReplacingModelIdFieldNumber = 2;
    private int replacingModelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReplacingModelId {
      get { return replacingModelId_; }
      set {
        replacingModelId_ = value;
      }
    }

    /// <summary>Field number for the "UpdatedBy" field.</summary>
    public const int UpdatedByFieldNumber = 3;
    private string updatedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedBy {
      get { return updatedBy_; }
      set {
        updatedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplacingModelDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplacingModelDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewModelId != other.NewModelId) return false;
      if (ReplacingModelId != other.ReplacingModelId) return false;
      if (UpdatedBy != other.UpdatedBy) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewModelId != 0) hash ^= NewModelId.GetHashCode();
      if (ReplacingModelId != 0) hash ^= ReplacingModelId.GetHashCode();
      if (UpdatedBy.Length != 0) hash ^= UpdatedBy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewModelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewModelId);
      }
      if (ReplacingModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReplacingModelId);
      }
      if (UpdatedBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UpdatedBy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewModelId);
      }
      if (ReplacingModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplacingModelId);
      }
      if (UpdatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedBy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplacingModelDetails other) {
      if (other == null) {
        return;
      }
      if (other.NewModelId != 0) {
        NewModelId = other.NewModelId;
      }
      if (other.ReplacingModelId != 0) {
        ReplacingModelId = other.ReplacingModelId;
      }
      if (other.UpdatedBy.Length != 0) {
        UpdatedBy = other.UpdatedBy;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NewModelId = input.ReadInt32();
            break;
          }
          case 16: {
            ReplacingModelId = input.ReadInt32();
            break;
          }
          case 26: {
            UpdatedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignsWithCount : pb::IMessage<CampaignsWithCount> {
    private static readonly pb::MessageParser<CampaignsWithCount> _parser = new pb::MessageParser<CampaignsWithCount>(() => new CampaignsWithCount());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignsWithCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignsWithCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignsWithCount(CampaignsWithCount other) : this() {
      Campaigns = other.campaigns_ != null ? other.Campaigns.Clone() : null;
      dealerCount_ = other.dealerCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignsWithCount Clone() {
      return new CampaignsWithCount(this);
    }

    /// <summary>Field number for the "Campaigns" field.</summary>
    public const int CampaignsFieldNumber = 1;
    private global::ProtoBufClass.Campaigns.CampaignList campaigns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.CampaignList Campaigns {
      get { return campaigns_; }
      set {
        campaigns_ = value;
      }
    }

    /// <summary>Field number for the "DealerCount" field.</summary>
    public const int DealerCountFieldNumber = 2;
    private int dealerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealerCount {
      get { return dealerCount_; }
      set {
        dealerCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignsWithCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignsWithCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Campaigns, other.Campaigns)) return false;
      if (DealerCount != other.DealerCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (campaigns_ != null) hash ^= Campaigns.GetHashCode();
      if (DealerCount != 0) hash ^= DealerCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (campaigns_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Campaigns);
      }
      if (DealerCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DealerCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (campaigns_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Campaigns);
      }
      if (DealerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignsWithCount other) {
      if (other == null) {
        return;
      }
      if (other.campaigns_ != null) {
        if (campaigns_ == null) {
          campaigns_ = new global::ProtoBufClass.Campaigns.CampaignList();
        }
        Campaigns.MergeFrom(other.Campaigns);
      }
      if (other.DealerCount != 0) {
        DealerCount = other.DealerCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (campaigns_ == null) {
              campaigns_ = new global::ProtoBufClass.Campaigns.CampaignList();
            }
            input.ReadMessage(campaigns_);
            break;
          }
          case 16: {
            DealerCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignCitiesInput : pb::IMessage<CampaignCitiesInput> {
    private static readonly pb::MessageParser<CampaignCitiesInput> _parser = new pb::MessageParser<CampaignCitiesInput>(() => new CampaignCitiesInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignCitiesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCitiesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCitiesInput(CampaignCitiesInput other) : this() {
      campaignId_ = other.campaignId_;
      modelId_ = other.modelId_;
      UseCache = other.useCache_ != null ? other.UseCache.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCitiesInput Clone() {
      return new CampaignCitiesInput(this);
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 1;
    private int campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "UseCache" field.</summary>
    public const int UseCacheFieldNumber = 3;
    private global::ProtoBufClass.Common.BoolMessage useCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Common.BoolMessage UseCache {
      get { return useCache_; }
      set {
        useCache_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignCitiesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignCitiesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CampaignId != other.CampaignId) return false;
      if (ModelId != other.ModelId) return false;
      if (!object.Equals(UseCache, other.UseCache)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CampaignId != 0) hash ^= CampaignId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (useCache_ != null) hash ^= UseCache.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CampaignId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CampaignId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (useCache_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UseCache);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CampaignId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CampaignId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (useCache_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UseCache);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignCitiesInput other) {
      if (other == null) {
        return;
      }
      if (other.CampaignId != 0) {
        CampaignId = other.CampaignId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.useCache_ != null) {
        if (useCache_ == null) {
          useCache_ = new global::ProtoBufClass.Common.BoolMessage();
        }
        UseCache.MergeFrom(other.UseCache);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CampaignId = input.ReadInt32();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 26: {
            if (useCache_ == null) {
              useCache_ = new global::ProtoBufClass.Common.BoolMessage();
            }
            input.ReadMessage(useCache_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignCities : pb::IMessage<CampaignCities> {
    private static readonly pb::MessageParser<CampaignCities> _parser = new pb::MessageParser<CampaignCities>(() => new CampaignCities());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignCities> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCities() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCities(CampaignCities other) : this() {
      type_ = other.type_;
      cities_ = other.cities_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignCities Clone() {
      return new CampaignCities(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Cities" field.</summary>
    public const int CitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Common.Item> _repeated_cities_codec
        = pb::FieldCodec.ForMessage(18, global::ProtoBufClass.Common.Item.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Common.Item> cities_ = new pbc::RepeatedField<global::ProtoBufClass.Common.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Common.Item> Cities {
      get { return cities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignCities);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignCities other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!cities_.Equals(other.cities_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= cities_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      cities_.WriteTo(output, _repeated_cities_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += cities_.CalculateSize(_repeated_cities_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignCities other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      cities_.Add(other.cities_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            cities_.AddEntriesFrom(input, _repeated_cities_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelId : pb::IMessage<ModelId> {
    private static readonly pb::MessageParser<ModelId> _parser = new pb::MessageParser<ModelId>(() => new ModelId());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelId(ModelId other) : this() {
      targetModelId_ = other.targetModelId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelId Clone() {
      return new ModelId(this);
    }

    /// <summary>Field number for the "TargetModelId" field.</summary>
    public const int TargetModelIdFieldNumber = 1;
    private int targetModelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetModelId {
      get { return targetModelId_; }
      set {
        targetModelId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetModelId != other.TargetModelId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetModelId != 0) hash ^= TargetModelId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetModelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetModelId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetModelId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelId other) {
      if (other == null) {
        return;
      }
      if (other.TargetModelId != 0) {
        TargetModelId = other.TargetModelId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TargetModelId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GlobalSearchModelId : pb::IMessage<GlobalSearchModelId> {
    private static readonly pb::MessageParser<GlobalSearchModelId> _parser = new pb::MessageParser<GlobalSearchModelId>(() => new GlobalSearchModelId());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GlobalSearchModelId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSearchModelId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSearchModelId(GlobalSearchModelId other) : this() {
      targetCarModelId_ = other.targetCarModelId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSearchModelId Clone() {
      return new GlobalSearchModelId(this);
    }

    /// <summary>Field number for the "TargetCarModelId" field.</summary>
    public const int TargetCarModelIdFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.ModelId> _repeated_targetCarModelId_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.ModelId.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.ModelId> targetCarModelId_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.ModelId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.ModelId> TargetCarModelId {
      get { return targetCarModelId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GlobalSearchModelId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GlobalSearchModelId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!targetCarModelId_.Equals(other.targetCarModelId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= targetCarModelId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      targetCarModelId_.WriteTo(output, _repeated_targetCarModelId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += targetCarModelId_.CalculateSize(_repeated_targetCarModelId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GlobalSearchModelId other) {
      if (other == null) {
        return;
      }
      targetCarModelId_.Add(other.targetCarModelId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            targetCarModelId_.AddEntriesFrom(input, _repeated_targetCarModelId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TemplateInput : pb::IMessage<TemplateInput> {
    private static readonly pb::MessageParser<TemplateInput> _parser = new pb::MessageParser<TemplateInput>(() => new TemplateInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateInput(TemplateInput other) : this() {
      platformId_ = other.platformId_;
      applicationId_ = other.applicationId_;
      pageId_ = other.pageId_;
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      cityId_ = other.cityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateInput Clone() {
      return new TemplateInput(this);
    }

    /// <summary>Field number for the "PlatformId" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private int platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "PageId" field.</summary>
    public const int PageIdFieldNumber = 3;
    private int pageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageId {
      get { return pageId_; }
      set {
        pageId_ = value;
      }
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 4;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 5;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 6;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (PageId != other.PageId) return false;
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (CityId != other.CityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (PageId != 0) hash ^= PageId.GetHashCode();
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlatformId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlatformId);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
      if (PageId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageId);
      }
      if (MakeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ModelId);
      }
      if (CityId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (PageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageId);
      }
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateInput other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0) {
        PlatformId = other.PlatformId;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.PageId != 0) {
        PageId = other.PageId;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PlatformId = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 24: {
            PageId = input.ReadInt32();
            break;
          }
          case 32: {
            MakeId = input.ReadInt32();
            break;
          }
          case 40: {
            ModelId = input.ReadInt32();
            break;
          }
          case 48: {
            CityId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PageTemplate : pb::IMessage<PageTemplate> {
    private static readonly pb::MessageParser<PageTemplate> _parser = new pb::MessageParser<PageTemplate>(() => new PageTemplate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageTemplate(PageTemplate other) : this() {
      templateId_ = other.templateId_;
      propertyId_ = other.propertyId_;
      priority_ = other.priority_;
      campaignId_ = other.campaignId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageTemplate Clone() {
      return new PageTemplate(this);
    }

    /// <summary>Field number for the "TemplateId" field.</summary>
    public const int TemplateIdFieldNumber = 1;
    private int templateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TemplateId {
      get { return templateId_; }
      set {
        templateId_ = value;
      }
    }

    /// <summary>Field number for the "PropertyId" field.</summary>
    public const int PropertyIdFieldNumber = 2;
    private int propertyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropertyId {
      get { return propertyId_; }
      set {
        propertyId_ = value;
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 4;
    private int campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateId != other.TemplateId) return false;
      if (PropertyId != other.PropertyId) return false;
      if (Priority != other.Priority) return false;
      if (CampaignId != other.CampaignId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateId != 0) hash ^= TemplateId.GetHashCode();
      if (PropertyId != 0) hash ^= PropertyId.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (CampaignId != 0) hash ^= CampaignId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TemplateId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TemplateId);
      }
      if (PropertyId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropertyId);
      }
      if (Priority != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Priority);
      }
      if (CampaignId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CampaignId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateId);
      }
      if (PropertyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropertyId);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (CampaignId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CampaignId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageTemplate other) {
      if (other == null) {
        return;
      }
      if (other.TemplateId != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.PropertyId != 0) {
        PropertyId = other.PropertyId;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.CampaignId != 0) {
        CampaignId = other.CampaignId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TemplateId = input.ReadInt32();
            break;
          }
          case 16: {
            PropertyId = input.ReadInt32();
            break;
          }
          case 24: {
            Priority = input.ReadInt32();
            break;
          }
          case 32: {
            CampaignId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TemplateList : pb::IMessage<TemplateList> {
    private static readonly pb::MessageParser<TemplateList> _parser = new pb::MessageParser<TemplateList>(() => new TemplateList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateList(TemplateList other) : this() {
      pageTemplates_ = other.pageTemplates_.Clone();
      rulesList_ = other.rulesList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateList Clone() {
      return new TemplateList(this);
    }

    /// <summary>Field number for the "PageTemplates" field.</summary>
    public const int PageTemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.PageTemplate> _repeated_pageTemplates_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.PageTemplate.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.PageTemplate> pageTemplates_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.PageTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.PageTemplate> PageTemplates {
      get { return pageTemplates_; }
    }

    /// <summary>Field number for the "RulesList" field.</summary>
    public const int RulesListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.Rules> _repeated_rulesList_codec
        = pb::FieldCodec.ForMessage(18, global::ProtoBufClass.Campaigns.Rules.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.Rules> rulesList_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.Rules>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.Rules> RulesList {
      get { return rulesList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pageTemplates_.Equals(other.pageTemplates_)) return false;
      if(!rulesList_.Equals(other.rulesList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pageTemplates_.GetHashCode();
      hash ^= rulesList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pageTemplates_.WriteTo(output, _repeated_pageTemplates_codec);
      rulesList_.WriteTo(output, _repeated_rulesList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pageTemplates_.CalculateSize(_repeated_pageTemplates_codec);
      size += rulesList_.CalculateSize(_repeated_rulesList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateList other) {
      if (other == null) {
        return;
      }
      pageTemplates_.Add(other.pageTemplates_);
      rulesList_.Add(other.rulesList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            pageTemplates_.AddEntriesFrom(input, _repeated_pageTemplates_codec);
            break;
          }
          case 18: {
            rulesList_.AddEntriesFrom(input, _repeated_rulesList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rules : pb::IMessage<Rules> {
    private static readonly pb::MessageParser<Rules> _parser = new pb::MessageParser<Rules>(() => new Rules());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rules> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rules() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rules(Rules other) : this() {
      makeId_ = other.makeId_;
      modelId_ = other.modelId_;
      cityId_ = other.cityId_;
      campaignId_ = other.campaignId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rules Clone() {
      return new Rules(this);
    }

    /// <summary>Field number for the "MakeId" field.</summary>
    public const int MakeIdFieldNumber = 1;
    private int makeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MakeId {
      get { return makeId_; }
      set {
        makeId_ = value;
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 3;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 4;
    private int campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rules);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rules other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MakeId != other.MakeId) return false;
      if (ModelId != other.ModelId) return false;
      if (CityId != other.CityId) return false;
      if (CampaignId != other.CampaignId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MakeId != 0) hash ^= MakeId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (CampaignId != 0) hash ^= CampaignId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MakeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MakeId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (CityId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CityId);
      }
      if (CampaignId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CampaignId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MakeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MakeId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (CampaignId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CampaignId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rules other) {
      if (other == null) {
        return;
      }
      if (other.MakeId != 0) {
        MakeId = other.MakeId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.CampaignId != 0) {
        CampaignId = other.CampaignId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MakeId = input.ReadInt32();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 24: {
            CityId = input.ReadInt32();
            break;
          }
          case 32: {
            CampaignId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertyTemplates : pb::IMessage<PropertyTemplates> {
    private static readonly pb::MessageParser<PropertyTemplates> _parser = new pb::MessageParser<PropertyTemplates>(() => new PropertyTemplates());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyTemplates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyTemplates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyTemplates(PropertyTemplates other) : this() {
      pageTemplates_ = other.pageTemplates_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyTemplates Clone() {
      return new PropertyTemplates(this);
    }

    /// <summary>Field number for the "PageTemplates" field.</summary>
    public const int PageTemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProtoBufClass.Campaigns.PageTemplate> _repeated_pageTemplates_codec
        = pb::FieldCodec.ForMessage(10, global::ProtoBufClass.Campaigns.PageTemplate.Parser);
    private readonly pbc::RepeatedField<global::ProtoBufClass.Campaigns.PageTemplate> pageTemplates_ = new pbc::RepeatedField<global::ProtoBufClass.Campaigns.PageTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoBufClass.Campaigns.PageTemplate> PageTemplates {
      get { return pageTemplates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyTemplates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyTemplates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pageTemplates_.Equals(other.pageTemplates_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pageTemplates_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pageTemplates_.WriteTo(output, _repeated_pageTemplates_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pageTemplates_.CalculateSize(_repeated_pageTemplates_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyTemplates other) {
      if (other == null) {
        return;
      }
      pageTemplates_.Add(other.pageTemplates_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            pageTemplates_.AddEntriesFrom(input, _repeated_pageTemplates_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GeoLocation : pb::IMessage<GeoLocation> {
    private static readonly pb::MessageParser<GeoLocation> _parser = new pb::MessageParser<GeoLocation>(() => new GeoLocation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoLocation(GeoLocation other) : this() {
      cityId_ = other.cityId_;
      zoneId_ = other.zoneId_;
      areaId_ = other.areaId_;
      stateId_ = other.stateId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoLocation Clone() {
      return new GeoLocation(this);
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 1;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "ZoneId" field.</summary>
    public const int ZoneIdFieldNumber = 2;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "AreaId" field.</summary>
    public const int AreaIdFieldNumber = 3;
    private int areaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 4;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (AreaId != other.AreaId) return false;
      if (StateId != other.StateId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CityId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ZoneId);
      }
      if (AreaId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AreaId);
      }
      if (StateId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StateId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (AreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoLocation other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CityId = input.ReadInt32();
            break;
          }
          case 16: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 24: {
            AreaId = input.ReadInt32();
            break;
          }
          case 32: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignRequest : pb::IMessage<CampaignRequest> {
    private static readonly pb::MessageParser<CampaignRequest> _parser = new pb::MessageParser<CampaignRequest>(() => new CampaignRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoBufClass.Campaigns.CampaignReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest(CampaignRequest other) : this() {
      UserLocation = other.userLocation_ != null ? other.UserLocation.Clone() : null;
      model_ = other.model_;
      make_ = other.make_;
      campaignId_ = other.campaignId_;
      platform_ = other.platform_;
      applicationId_ = other.applicationId_;
      showRecommendation_ = other.showRecommendation_;
      noZoneFilter_ = other.noZoneFilter_;
      dealerLocator_ = other.dealerLocator_;
      dealerAdminFilter_ = other.dealerAdminFilter_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest Clone() {
      return new CampaignRequest(this);
    }

    /// <summary>Field number for the "UserLocation" field.</summary>
    public const int UserLocationFieldNumber = 1;
    private global::ProtoBufClass.Campaigns.GeoLocation userLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBufClass.Campaigns.GeoLocation UserLocation {
      get { return userLocation_; }
      set {
        userLocation_ = value;
      }
    }

    /// <summary>Field number for the "Model" field.</summary>
    public const int ModelFieldNumber = 2;
    private int model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "Make" field.</summary>
    public const int MakeFieldNumber = 3;
    private int make_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Make {
      get { return make_; }
      set {
        make_ = value;
      }
    }

    /// <summary>Field number for the "CampaignId" field.</summary>
    public const int CampaignIdFieldNumber = 4;
    private int campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "Platform" field.</summary>
    public const int PlatformFieldNumber = 5;
    private int platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 6;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "ShowRecommendation" field.</summary>
    public const int ShowRecommendationFieldNumber = 7;
    private bool showRecommendation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowRecommendation {
      get { return showRecommendation_; }
      set {
        showRecommendation_ = value;
      }
    }

    /// <summary>Field number for the "NoZoneFilter" field.</summary>
    public const int NoZoneFilterFieldNumber = 8;
    private bool noZoneFilter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoZoneFilter {
      get { return noZoneFilter_; }
      set {
        noZoneFilter_ = value;
      }
    }

    /// <summary>Field number for the "DealerLocator" field.</summary>
    public const int DealerLocatorFieldNumber = 9;
    private bool dealerLocator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DealerLocator {
      get { return dealerLocator_; }
      set {
        dealerLocator_ = value;
      }
    }

    /// <summary>Field number for the "DealerAdminFilter" field.</summary>
    public const int DealerAdminFilterFieldNumber = 10;
    private bool dealerAdminFilter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DealerAdminFilter {
      get { return dealerAdminFilter_; }
      set {
        dealerAdminFilter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserLocation, other.UserLocation)) return false;
      if (Model != other.Model) return false;
      if (Make != other.Make) return false;
      if (CampaignId != other.CampaignId) return false;
      if (Platform != other.Platform) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (ShowRecommendation != other.ShowRecommendation) return false;
      if (NoZoneFilter != other.NoZoneFilter) return false;
      if (DealerLocator != other.DealerLocator) return false;
      if (DealerAdminFilter != other.DealerAdminFilter) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userLocation_ != null) hash ^= UserLocation.GetHashCode();
      if (Model != 0) hash ^= Model.GetHashCode();
      if (Make != 0) hash ^= Make.GetHashCode();
      if (CampaignId != 0) hash ^= CampaignId.GetHashCode();
      if (Platform != 0) hash ^= Platform.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (ShowRecommendation != false) hash ^= ShowRecommendation.GetHashCode();
      if (NoZoneFilter != false) hash ^= NoZoneFilter.GetHashCode();
      if (DealerLocator != false) hash ^= DealerLocator.GetHashCode();
      if (DealerAdminFilter != false) hash ^= DealerAdminFilter.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userLocation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserLocation);
      }
      if (Model != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Model);
      }
      if (Make != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Make);
      }
      if (CampaignId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CampaignId);
      }
      if (Platform != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Platform);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ApplicationId);
      }
      if (ShowRecommendation != false) {
        output.WriteRawTag(56);
        output.WriteBool(ShowRecommendation);
      }
      if (NoZoneFilter != false) {
        output.WriteRawTag(64);
        output.WriteBool(NoZoneFilter);
      }
      if (DealerLocator != false) {
        output.WriteRawTag(72);
        output.WriteBool(DealerLocator);
      }
      if (DealerAdminFilter != false) {
        output.WriteRawTag(80);
        output.WriteBool(DealerAdminFilter);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserLocation);
      }
      if (Model != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Model);
      }
      if (Make != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Make);
      }
      if (CampaignId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CampaignId);
      }
      if (Platform != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Platform);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (ShowRecommendation != false) {
        size += 1 + 1;
      }
      if (NoZoneFilter != false) {
        size += 1 + 1;
      }
      if (DealerLocator != false) {
        size += 1 + 1;
      }
      if (DealerAdminFilter != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignRequest other) {
      if (other == null) {
        return;
      }
      if (other.userLocation_ != null) {
        if (userLocation_ == null) {
          userLocation_ = new global::ProtoBufClass.Campaigns.GeoLocation();
        }
        UserLocation.MergeFrom(other.UserLocation);
      }
      if (other.Model != 0) {
        Model = other.Model;
      }
      if (other.Make != 0) {
        Make = other.Make;
      }
      if (other.CampaignId != 0) {
        CampaignId = other.CampaignId;
      }
      if (other.Platform != 0) {
        Platform = other.Platform;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ShowRecommendation != false) {
        ShowRecommendation = other.ShowRecommendation;
      }
      if (other.NoZoneFilter != false) {
        NoZoneFilter = other.NoZoneFilter;
      }
      if (other.DealerLocator != false) {
        DealerLocator = other.DealerLocator;
      }
      if (other.DealerAdminFilter != false) {
        DealerAdminFilter = other.DealerAdminFilter;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (userLocation_ == null) {
              userLocation_ = new global::ProtoBufClass.Campaigns.GeoLocation();
            }
            input.ReadMessage(userLocation_);
            break;
          }
          case 16: {
            Model = input.ReadInt32();
            break;
          }
          case 24: {
            Make = input.ReadInt32();
            break;
          }
          case 32: {
            CampaignId = input.ReadInt32();
            break;
          }
          case 40: {
            Platform = input.ReadInt32();
            break;
          }
          case 48: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 56: {
            ShowRecommendation = input.ReadBool();
            break;
          }
          case 64: {
            NoZoneFilter = input.ReadBool();
            break;
          }
          case 72: {
            DealerLocator = input.ReadBool();
            break;
          }
          case 80: {
            DealerAdminFilter = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
