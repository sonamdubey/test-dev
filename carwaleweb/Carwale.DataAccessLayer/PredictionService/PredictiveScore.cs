// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PredictiveScore.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Predictive {

  /// <summary>Holder for reflection information generated from PredictiveScore.proto</summary>
  public static partial class PredictiveScoreReflection {

    #region Descriptor
    /// <summary>File descriptor for PredictiveScore.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PredictiveScoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcmVkaWN0aXZlU2NvcmUucHJvdG8SClByZWRpY3RpdmUiNgoPQ29va2ll",
            "SWRSZXF1ZXN0EhAKCENvb2tpZUlkGAEgASgJEhEKCU1vZGVsTmFtZRgCIAEo",
            "CSJHChJQcmVtaXVtTWFrZVJlcXVlc3QSEAoIQ29va2llSWQYASABKAkSDwoH",
            "TW9kZWxJZBgCIAEoBRIOCgZMZWFkSWQYAyABKAQi3gEKDE1vZGVsUmVxdWVz",
            "dBIMCgROYW1lGAEgASgJEhAKCENvb2tpZUlkGAIgASgJEg8KB1BhZ2VVcmwY",
            "AyABKAkSEAoIUGxhdGZvcm0YBCABKAkSFAoMQ2FyTW9kZWxOYW1lGAUgASgJ",
            "EhMKC1JlZmVycmVyVXJsGAYgASgJEiQKBkdsb2JhbBgHIAEoCzIULlByZWRp",
            "Y3RpdmUuTG9jYXRpb24SIgoEVXNlchgIIAEoCzIULlByZWRpY3RpdmUuTG9j",
            "YXRpb24SFgoOSXNVc2VyTG9nZ2VkSW4YCSABKAgi7AEKD0NhbXBhaWduUmVx",
            "dWVzdBIMCgROYW1lGAEgASgJEhAKCENvb2tpZUlkGAIgASgJEg8KB1BhZ2VV",
            "cmwYAyABKAkSEAoIUGxhdGZvcm0YBCABKAkSDwoHTW9kZWxJZBgFIAEoBRIT",
            "CgtSZWZlcnJlclVybBgGIAEoCRIkCgZHbG9iYWwYByABKAsyFC5QcmVkaWN0",
            "aXZlLkxvY2F0aW9uEiIKBFVzZXIYCCABKAsyFC5QcmVkaWN0aXZlLkxvY2F0",
            "aW9uEhYKDklzVXNlckxvZ2dlZEluGAkgASgIEg4KBlNvdXJjZRgKIAEoCSIu",
            "CghMb2NhdGlvbhIQCghDaXR5TmFtZRgBIAEoCRIQCghab25lTmFtZRgCIAEo",
            "CSJDChNQcmVtaXVtTWFrZVJlc3BvbnNlEg0KBVNjb3JlGAEgASgBEg0KBUxh",
            "YmVsGAIgASgEEg4KBlN0YXR1cxgDIAMoBSItCg1Nb2RlbFJlc3BvbnNlEg0K",
            "BVNjb3JlGAEgASgBEg0KBUxhYmVsGAIgASgJIiUKDUhlYXJ0YmVhdEZsYWcS",
            "FAoMSGVhcnRiZWF0T3V0GAEgASgFIiEKC1JlZnJlc2hGbGFnEhIKClJlZnJl",
            "c2hPdXQYASABKAUyxwIKD1ByZWRpY3RpdmVTY29yZRJMChBHZXRDYW1wYWln",
            "blNjb3JlEhsuUHJlZGljdGl2ZS5DYW1wYWlnblJlcXVlc3QaGS5QcmVkaWN0",
            "aXZlLk1vZGVsUmVzcG9uc2UiABJYChNHZXRQcmVtaXVtTWFrZVNjb3JlEh4u",
            "UHJlZGljdGl2ZS5QcmVtaXVtTWFrZVJlcXVlc3QaHy5QcmVkaWN0aXZlLlBy",
            "ZW1pdW1NYWtlUmVzcG9uc2UiABJICg5DaGVja0hlYXJ0YmVhdBIZLlByZWRp",
            "Y3RpdmUuSGVhcnRiZWF0RmxhZxoZLlByZWRpY3RpdmUuSGVhcnRiZWF0Rmxh",
            "ZyIAEkIKDFJlZnJlc2hNb2RlbBIXLlByZWRpY3RpdmUuUmVmcmVzaEZsYWca",
            "Fy5QcmVkaWN0aXZlLlJlZnJlc2hGbGFnIgBCGgoWY29tLmN3LnByZWRpY2l0",
            "aXZlZ3JwY1ABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.CookieIdRequest), global::Predictive.CookieIdRequest.Parser, new[]{ "CookieId", "ModelName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.PremiumMakeRequest), global::Predictive.PremiumMakeRequest.Parser, new[]{ "CookieId", "ModelId", "LeadId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.ModelRequest), global::Predictive.ModelRequest.Parser, new[]{ "Name", "CookieId", "PageUrl", "Platform", "CarModelName", "ReferrerUrl", "Global", "User", "IsUserLoggedIn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.CampaignRequest), global::Predictive.CampaignRequest.Parser, new[]{ "Name", "CookieId", "PageUrl", "Platform", "ModelId", "ReferrerUrl", "Global", "User", "IsUserLoggedIn", "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.Location), global::Predictive.Location.Parser, new[]{ "CityName", "ZoneName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.PremiumMakeResponse), global::Predictive.PremiumMakeResponse.Parser, new[]{ "Score", "Label", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.ModelResponse), global::Predictive.ModelResponse.Parser, new[]{ "Score", "Label" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.HeartbeatFlag), global::Predictive.HeartbeatFlag.Parser, new[]{ "HeartbeatOut" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Predictive.RefreshFlag), global::Predictive.RefreshFlag.Parser, new[]{ "RefreshOut" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  The request message contains the user's CookieId.
  /// </summary>
  public sealed partial class CookieIdRequest : pb::IMessage<CookieIdRequest> {
    private static readonly pb::MessageParser<CookieIdRequest> _parser = new pb::MessageParser<CookieIdRequest>(() => new CookieIdRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CookieIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CookieIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CookieIdRequest(CookieIdRequest other) : this() {
      cookieId_ = other.cookieId_;
      modelName_ = other.modelName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CookieIdRequest Clone() {
      return new CookieIdRequest(this);
    }

    /// <summary>Field number for the "CookieId" field.</summary>
    public const int CookieIdFieldNumber = 1;
    private string cookieId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CookieId {
      get { return cookieId_; }
      set {
        cookieId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 2;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CookieIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CookieIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CookieId != other.CookieId) return false;
      if (ModelName != other.ModelName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CookieId.Length != 0) hash ^= CookieId.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CookieId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CookieId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CookieId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CookieId);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CookieIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.CookieId.Length != 0) {
        CookieId = other.CookieId;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CookieId = input.ReadString();
            break;
          }
          case 18: {
            ModelName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PremiumMakeRequest : pb::IMessage<PremiumMakeRequest> {
    private static readonly pb::MessageParser<PremiumMakeRequest> _parser = new pb::MessageParser<PremiumMakeRequest>(() => new PremiumMakeRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PremiumMakeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PremiumMakeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PremiumMakeRequest(PremiumMakeRequest other) : this() {
      cookieId_ = other.cookieId_;
      modelId_ = other.modelId_;
      leadId_ = other.leadId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PremiumMakeRequest Clone() {
      return new PremiumMakeRequest(this);
    }

    /// <summary>Field number for the "CookieId" field.</summary>
    public const int CookieIdFieldNumber = 1;
    private string cookieId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CookieId {
      get { return cookieId_; }
      set {
        cookieId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "LeadId" field.</summary>
    public const int LeadIdFieldNumber = 3;
    private ulong leadId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LeadId {
      get { return leadId_; }
      set {
        leadId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PremiumMakeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PremiumMakeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CookieId != other.CookieId) return false;
      if (ModelId != other.ModelId) return false;
      if (LeadId != other.LeadId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CookieId.Length != 0) hash ^= CookieId.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (LeadId != 0UL) hash ^= LeadId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CookieId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CookieId);
      }
      if (ModelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModelId);
      }
      if (LeadId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LeadId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CookieId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CookieId);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (LeadId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LeadId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PremiumMakeRequest other) {
      if (other == null) {
        return;
      }
      if (other.CookieId.Length != 0) {
        CookieId = other.CookieId;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.LeadId != 0UL) {
        LeadId = other.LeadId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CookieId = input.ReadString();
            break;
          }
          case 16: {
            ModelId = input.ReadInt32();
            break;
          }
          case 24: {
            LeadId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelRequest : pb::IMessage<ModelRequest> {
    private static readonly pb::MessageParser<ModelRequest> _parser = new pb::MessageParser<ModelRequest>(() => new ModelRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRequest(ModelRequest other) : this() {
      name_ = other.name_;
      cookieId_ = other.cookieId_;
      pageUrl_ = other.pageUrl_;
      platform_ = other.platform_;
      carModelName_ = other.carModelName_;
      referrerUrl_ = other.referrerUrl_;
      Global = other.global_ != null ? other.Global.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
      isUserLoggedIn_ = other.isUserLoggedIn_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelRequest Clone() {
      return new ModelRequest(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CookieId" field.</summary>
    public const int CookieIdFieldNumber = 2;
    private string cookieId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CookieId {
      get { return cookieId_; }
      set {
        cookieId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PageUrl" field.</summary>
    public const int PageUrlFieldNumber = 3;
    private string pageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageUrl {
      get { return pageUrl_; }
      set {
        pageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Platform" field.</summary>
    public const int PlatformFieldNumber = 4;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarModelName" field.</summary>
    public const int CarModelNameFieldNumber = 5;
    private string carModelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarModelName {
      get { return carModelName_; }
      set {
        carModelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 6;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Global" field.</summary>
    public const int GlobalFieldNumber = 7;
    private global::Predictive.Location global_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Predictive.Location Global {
      get { return global_; }
      set {
        global_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 8;
    private global::Predictive.Location user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Predictive.Location User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "IsUserLoggedIn" field.</summary>
    public const int IsUserLoggedInFieldNumber = 9;
    private bool isUserLoggedIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUserLoggedIn {
      get { return isUserLoggedIn_; }
      set {
        isUserLoggedIn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (CookieId != other.CookieId) return false;
      if (PageUrl != other.PageUrl) return false;
      if (Platform != other.Platform) return false;
      if (CarModelName != other.CarModelName) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (!object.Equals(Global, other.Global)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (IsUserLoggedIn != other.IsUserLoggedIn) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CookieId.Length != 0) hash ^= CookieId.GetHashCode();
      if (PageUrl.Length != 0) hash ^= PageUrl.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (CarModelName.Length != 0) hash ^= CarModelName.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (global_ != null) hash ^= Global.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (IsUserLoggedIn != false) hash ^= IsUserLoggedIn.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CookieId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CookieId);
      }
      if (PageUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageUrl);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Platform);
      }
      if (CarModelName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CarModelName);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReferrerUrl);
      }
      if (global_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Global);
      }
      if (user_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(User);
      }
      if (IsUserLoggedIn != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsUserLoggedIn);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CookieId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CookieId);
      }
      if (PageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageUrl);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (CarModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarModelName);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (global_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Global);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (IsUserLoggedIn != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CookieId.Length != 0) {
        CookieId = other.CookieId;
      }
      if (other.PageUrl.Length != 0) {
        PageUrl = other.PageUrl;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.CarModelName.Length != 0) {
        CarModelName = other.CarModelName;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.global_ != null) {
        if (global_ == null) {
          global_ = new global::Predictive.Location();
        }
        Global.MergeFrom(other.Global);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Predictive.Location();
        }
        User.MergeFrom(other.User);
      }
      if (other.IsUserLoggedIn != false) {
        IsUserLoggedIn = other.IsUserLoggedIn;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            CookieId = input.ReadString();
            break;
          }
          case 26: {
            PageUrl = input.ReadString();
            break;
          }
          case 34: {
            Platform = input.ReadString();
            break;
          }
          case 42: {
            CarModelName = input.ReadString();
            break;
          }
          case 50: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 58: {
            if (global_ == null) {
              global_ = new global::Predictive.Location();
            }
            input.ReadMessage(global_);
            break;
          }
          case 66: {
            if (user_ == null) {
              user_ = new global::Predictive.Location();
            }
            input.ReadMessage(user_);
            break;
          }
          case 72: {
            IsUserLoggedIn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignRequest : pb::IMessage<CampaignRequest> {
    private static readonly pb::MessageParser<CampaignRequest> _parser = new pb::MessageParser<CampaignRequest>(() => new CampaignRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest(CampaignRequest other) : this() {
      name_ = other.name_;
      cookieId_ = other.cookieId_;
      pageUrl_ = other.pageUrl_;
      platform_ = other.platform_;
      modelId_ = other.modelId_;
      referrerUrl_ = other.referrerUrl_;
      Global = other.global_ != null ? other.Global.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
      isUserLoggedIn_ = other.isUserLoggedIn_;
      source_ = other.source_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest Clone() {
      return new CampaignRequest(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CookieId" field.</summary>
    public const int CookieIdFieldNumber = 2;
    private string cookieId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CookieId {
      get { return cookieId_; }
      set {
        cookieId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PageUrl" field.</summary>
    public const int PageUrlFieldNumber = 3;
    private string pageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageUrl {
      get { return pageUrl_; }
      set {
        pageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Platform" field.</summary>
    public const int PlatformFieldNumber = 4;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelId" field.</summary>
    public const int ModelIdFieldNumber = 5;
    private int modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 6;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Global" field.</summary>
    public const int GlobalFieldNumber = 7;
    private global::Predictive.Location global_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Predictive.Location Global {
      get { return global_; }
      set {
        global_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 8;
    private global::Predictive.Location user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Predictive.Location User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "IsUserLoggedIn" field.</summary>
    public const int IsUserLoggedInFieldNumber = 9;
    private bool isUserLoggedIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUserLoggedIn {
      get { return isUserLoggedIn_; }
      set {
        isUserLoggedIn_ = value;
      }
    }

    /// <summary>Field number for the "Source" field.</summary>
    public const int SourceFieldNumber = 10;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (CookieId != other.CookieId) return false;
      if (PageUrl != other.PageUrl) return false;
      if (Platform != other.Platform) return false;
      if (ModelId != other.ModelId) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (!object.Equals(Global, other.Global)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (IsUserLoggedIn != other.IsUserLoggedIn) return false;
      if (Source != other.Source) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CookieId.Length != 0) hash ^= CookieId.GetHashCode();
      if (PageUrl.Length != 0) hash ^= PageUrl.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (ModelId != 0) hash ^= ModelId.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (global_ != null) hash ^= Global.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (IsUserLoggedIn != false) hash ^= IsUserLoggedIn.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CookieId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CookieId);
      }
      if (PageUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageUrl);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Platform);
      }
      if (ModelId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ModelId);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReferrerUrl);
      }
      if (global_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Global);
      }
      if (user_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(User);
      }
      if (IsUserLoggedIn != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsUserLoggedIn);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Source);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CookieId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CookieId);
      }
      if (PageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageUrl);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (ModelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelId);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (global_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Global);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (IsUserLoggedIn != false) {
        size += 1 + 1;
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CookieId.Length != 0) {
        CookieId = other.CookieId;
      }
      if (other.PageUrl.Length != 0) {
        PageUrl = other.PageUrl;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.ModelId != 0) {
        ModelId = other.ModelId;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.global_ != null) {
        if (global_ == null) {
          global_ = new global::Predictive.Location();
        }
        Global.MergeFrom(other.Global);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Predictive.Location();
        }
        User.MergeFrom(other.User);
      }
      if (other.IsUserLoggedIn != false) {
        IsUserLoggedIn = other.IsUserLoggedIn;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            CookieId = input.ReadString();
            break;
          }
          case 26: {
            PageUrl = input.ReadString();
            break;
          }
          case 34: {
            Platform = input.ReadString();
            break;
          }
          case 40: {
            ModelId = input.ReadInt32();
            break;
          }
          case 50: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 58: {
            if (global_ == null) {
              global_ = new global::Predictive.Location();
            }
            input.ReadMessage(global_);
            break;
          }
          case 66: {
            if (user_ == null) {
              user_ = new global::Predictive.Location();
            }
            input.ReadMessage(user_);
            break;
          }
          case 72: {
            IsUserLoggedIn = input.ReadBool();
            break;
          }
          case 82: {
            Source = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Location : pb::IMessage<Location> {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      cityName_ = other.cityName_;
      zoneName_ = other.zoneName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "CityName" field.</summary>
    public const int CityNameFieldNumber = 1;
    private string cityName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityName {
      get { return cityName_; }
      set {
        cityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ZoneName" field.</summary>
    public const int ZoneNameFieldNumber = 2;
    private string zoneName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneName {
      get { return zoneName_; }
      set {
        zoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityName != other.CityName) return false;
      if (ZoneName != other.ZoneName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityName.Length != 0) hash ^= CityName.GetHashCode();
      if (ZoneName.Length != 0) hash ^= ZoneName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CityName);
      }
      if (ZoneName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ZoneName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CityName);
      }
      if (ZoneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.CityName.Length != 0) {
        CityName = other.CityName;
      }
      if (other.ZoneName.Length != 0) {
        ZoneName = other.ZoneName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CityName = input.ReadString();
            break;
          }
          case 18: {
            ZoneName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PremiumMakeResponse : pb::IMessage<PremiumMakeResponse> {
    private static readonly pb::MessageParser<PremiumMakeResponse> _parser = new pb::MessageParser<PremiumMakeResponse>(() => new PremiumMakeResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PremiumMakeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PremiumMakeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PremiumMakeResponse(PremiumMakeResponse other) : this() {
      score_ = other.score_;
      label_ = other.label_;
      status_ = other.status_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PremiumMakeResponse Clone() {
      return new PremiumMakeResponse(this);
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private double score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Label" field.</summary>
    public const int LabelFieldNumber = 2;
    private ulong label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_status_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> status_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Status {
      get { return status_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PremiumMakeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PremiumMakeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (Label != other.Label) return false;
      if(!status_.Equals(other.status_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0D) hash ^= Score.GetHashCode();
      if (Label != 0UL) hash ^= Label.GetHashCode();
      hash ^= status_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Score);
      }
      if (Label != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Label);
      }
      status_.WriteTo(output, _repeated_status_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0D) {
        size += 1 + 8;
      }
      if (Label != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Label);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PremiumMakeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0D) {
        Score = other.Score;
      }
      if (other.Label != 0UL) {
        Label = other.Label;
      }
      status_.Add(other.status_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Score = input.ReadDouble();
            break;
          }
          case 16: {
            Label = input.ReadUInt64();
            break;
          }
          case 26:
          case 24: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelResponse : pb::IMessage<ModelResponse> {
    private static readonly pb::MessageParser<ModelResponse> _parser = new pb::MessageParser<ModelResponse>(() => new ModelResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelResponse(ModelResponse other) : this() {
      score_ = other.score_;
      label_ = other.label_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelResponse Clone() {
      return new ModelResponse(this);
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private double score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Label" field.</summary>
    public const int LabelFieldNumber = 2;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (Label != other.Label) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0D) hash ^= Score.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Score);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0D) {
        size += 1 + 8;
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelResponse other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0D) {
        Score = other.Score;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Score = input.ReadDouble();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeartbeatFlag : pb::IMessage<HeartbeatFlag> {
    private static readonly pb::MessageParser<HeartbeatFlag> _parser = new pb::MessageParser<HeartbeatFlag>(() => new HeartbeatFlag());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartbeatFlag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatFlag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatFlag(HeartbeatFlag other) : this() {
      heartbeatOut_ = other.heartbeatOut_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatFlag Clone() {
      return new HeartbeatFlag(this);
    }

    /// <summary>Field number for the "HeartbeatOut" field.</summary>
    public const int HeartbeatOutFieldNumber = 1;
    private int heartbeatOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeartbeatOut {
      get { return heartbeatOut_; }
      set {
        heartbeatOut_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartbeatFlag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartbeatFlag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeartbeatOut != other.HeartbeatOut) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeartbeatOut != 0) hash ^= HeartbeatOut.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeartbeatOut != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeartbeatOut);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeartbeatOut != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeartbeatOut);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartbeatFlag other) {
      if (other == null) {
        return;
      }
      if (other.HeartbeatOut != 0) {
        HeartbeatOut = other.HeartbeatOut;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            HeartbeatOut = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefreshFlag : pb::IMessage<RefreshFlag> {
    private static readonly pb::MessageParser<RefreshFlag> _parser = new pb::MessageParser<RefreshFlag>(() => new RefreshFlag());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefreshFlag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Predictive.PredictiveScoreReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshFlag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshFlag(RefreshFlag other) : this() {
      refreshOut_ = other.refreshOut_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshFlag Clone() {
      return new RefreshFlag(this);
    }

    /// <summary>Field number for the "RefreshOut" field.</summary>
    public const int RefreshOutFieldNumber = 1;
    private int refreshOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RefreshOut {
      get { return refreshOut_; }
      set {
        refreshOut_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefreshFlag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefreshFlag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshOut != other.RefreshOut) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefreshOut != 0) hash ^= RefreshOut.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RefreshOut != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RefreshOut);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefreshOut != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RefreshOut);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefreshFlag other) {
      if (other == null) {
        return;
      }
      if (other.RefreshOut != 0) {
        RefreshOut = other.RefreshOut;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RefreshOut = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
