// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Adtargeting.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Adtargeting {

  /// <summary>Holder for reflection information generated from Adtargeting.proto</summary>
  public static partial class AdtargetingReflection {

    #region Descriptor
    /// <summary>File descriptor for Adtargeting.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdtargetingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFBZHRhcmdldGluZy5wcm90bxILQWR0YXJnZXRpbmciHwoNQ29va2llUmVx",
            "dWVzdBIOCgZDb29raWUYASABKAkipQEKEFVzZXJEYXRhUmVzcG9uc2USDgoG",
            "Q29va2llGAEgASgJEhEKCU1vZGVsTGlzdBgCIAEoCRIVCg1Cb2R5U3R5bGVM",
            "aXN0GAMgASgJEhkKEUJ1ZGdldFNlZ21lbnRMaXN0GAQgASgJEg8KB0NhclR5",
            "cGUYBSABKAkSFQoNTnVtYmVyT2ZMZWFkcxgGIAEoBRIUCgxOdW1iZXJPZkNh",
            "cnMYByABKAUiHAoHR3JwY0ludBIRCglJbnRPdXRwdXQYASABKAUiJwoVRWxl",
            "Y3RyaWNDYXJWaWV3U3RhdHVzEg4KBlN0YXR1cxgBIAEoCDLuAQoIVXNlckRh",
            "dGESSgoLR2V0VXNlckRhdGESGi5BZHRhcmdldGluZy5Db29raWVSZXF1ZXN0",
            "Gh0uQWR0YXJnZXRpbmcuVXNlckRhdGFSZXNwb25zZSIAEj0KDUNoZWNrSGVh",
            "cnRCaXQSFC5BZHRhcmdldGluZy5HcnBjSW50GhQuQWR0YXJnZXRpbmcuR3Jw",
            "Y0ludCIAElcKE0lzRWxlY3RyaWNDYXJWaWV3ZWQSGi5BZHRhcmdldGluZy5D",
            "b29raWVSZXF1ZXN0GiIuQWR0YXJnZXRpbmcuRWxlY3RyaWNDYXJWaWV3U3Rh",
            "dHVzIgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Adtargeting.CookieRequest), global::Adtargeting.CookieRequest.Parser, new[]{ "Cookie" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Adtargeting.UserDataResponse), global::Adtargeting.UserDataResponse.Parser, new[]{ "Cookie", "ModelList", "BodyStyleList", "BudgetSegmentList", "CarType", "NumberOfLeads", "NumberOfCars" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Adtargeting.GrpcInt), global::Adtargeting.GrpcInt.Parser, new[]{ "IntOutput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Adtargeting.ElectricCarViewStatus), global::Adtargeting.ElectricCarViewStatus.Parser, new[]{ "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class CookieRequest : pb::IMessage<CookieRequest> {
    private static readonly pb::MessageParser<CookieRequest> _parser = new pb::MessageParser<CookieRequest>(() => new CookieRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CookieRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Adtargeting.AdtargetingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CookieRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CookieRequest(CookieRequest other) : this() {
      cookie_ = other.cookie_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CookieRequest Clone() {
      return new CookieRequest(this);
    }

    /// <summary>Field number for the "Cookie" field.</summary>
    public const int CookieFieldNumber = 1;
    private string cookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CookieRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CookieRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cookie != other.Cookie) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cookie.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cookie);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CookieRequest other) {
      if (other == null) {
        return;
      }
      if (other.Cookie.Length != 0) {
        Cookie = other.Cookie;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Cookie = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the greetings
  /// </summary>
  public sealed partial class UserDataResponse : pb::IMessage<UserDataResponse> {
    private static readonly pb::MessageParser<UserDataResponse> _parser = new pb::MessageParser<UserDataResponse>(() => new UserDataResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Adtargeting.AdtargetingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDataResponse(UserDataResponse other) : this() {
      cookie_ = other.cookie_;
      modelList_ = other.modelList_;
      bodyStyleList_ = other.bodyStyleList_;
      budgetSegmentList_ = other.budgetSegmentList_;
      carType_ = other.carType_;
      numberOfLeads_ = other.numberOfLeads_;
      numberOfCars_ = other.numberOfCars_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDataResponse Clone() {
      return new UserDataResponse(this);
    }

    /// <summary>Field number for the "Cookie" field.</summary>
    public const int CookieFieldNumber = 1;
    private string cookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModelList" field.</summary>
    public const int ModelListFieldNumber = 2;
    private string modelList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelList {
      get { return modelList_; }
      set {
        modelList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BodyStyleList" field.</summary>
    public const int BodyStyleListFieldNumber = 3;
    private string bodyStyleList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyStyleList {
      get { return bodyStyleList_; }
      set {
        bodyStyleList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BudgetSegmentList" field.</summary>
    public const int BudgetSegmentListFieldNumber = 4;
    private string budgetSegmentList_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BudgetSegmentList {
      get { return budgetSegmentList_; }
      set {
        budgetSegmentList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CarType" field.</summary>
    public const int CarTypeFieldNumber = 5;
    private string carType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarType {
      get { return carType_; }
      set {
        carType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NumberOfLeads" field.</summary>
    public const int NumberOfLeadsFieldNumber = 6;
    private int numberOfLeads_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfLeads {
      get { return numberOfLeads_; }
      set {
        numberOfLeads_ = value;
      }
    }

    /// <summary>Field number for the "NumberOfCars" field.</summary>
    public const int NumberOfCarsFieldNumber = 7;
    private int numberOfCars_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfCars {
      get { return numberOfCars_; }
      set {
        numberOfCars_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cookie != other.Cookie) return false;
      if (ModelList != other.ModelList) return false;
      if (BodyStyleList != other.BodyStyleList) return false;
      if (BudgetSegmentList != other.BudgetSegmentList) return false;
      if (CarType != other.CarType) return false;
      if (NumberOfLeads != other.NumberOfLeads) return false;
      if (NumberOfCars != other.NumberOfCars) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
      if (ModelList.Length != 0) hash ^= ModelList.GetHashCode();
      if (BodyStyleList.Length != 0) hash ^= BodyStyleList.GetHashCode();
      if (BudgetSegmentList.Length != 0) hash ^= BudgetSegmentList.GetHashCode();
      if (CarType.Length != 0) hash ^= CarType.GetHashCode();
      if (NumberOfLeads != 0) hash ^= NumberOfLeads.GetHashCode();
      if (NumberOfCars != 0) hash ^= NumberOfCars.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cookie.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cookie);
      }
      if (ModelList.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelList);
      }
      if (BodyStyleList.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BodyStyleList);
      }
      if (BudgetSegmentList.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BudgetSegmentList);
      }
      if (CarType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CarType);
      }
      if (NumberOfLeads != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NumberOfLeads);
      }
      if (NumberOfCars != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NumberOfCars);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      if (ModelList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelList);
      }
      if (BodyStyleList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyStyleList);
      }
      if (BudgetSegmentList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BudgetSegmentList);
      }
      if (CarType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarType);
      }
      if (NumberOfLeads != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfLeads);
      }
      if (NumberOfCars != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfCars);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Cookie.Length != 0) {
        Cookie = other.Cookie;
      }
      if (other.ModelList.Length != 0) {
        ModelList = other.ModelList;
      }
      if (other.BodyStyleList.Length != 0) {
        BodyStyleList = other.BodyStyleList;
      }
      if (other.BudgetSegmentList.Length != 0) {
        BudgetSegmentList = other.BudgetSegmentList;
      }
      if (other.CarType.Length != 0) {
        CarType = other.CarType;
      }
      if (other.NumberOfLeads != 0) {
        NumberOfLeads = other.NumberOfLeads;
      }
      if (other.NumberOfCars != 0) {
        NumberOfCars = other.NumberOfCars;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Cookie = input.ReadString();
            break;
          }
          case 18: {
            ModelList = input.ReadString();
            break;
          }
          case 26: {
            BodyStyleList = input.ReadString();
            break;
          }
          case 34: {
            BudgetSegmentList = input.ReadString();
            break;
          }
          case 42: {
            CarType = input.ReadString();
            break;
          }
          case 48: {
            NumberOfLeads = input.ReadInt32();
            break;
          }
          case 56: {
            NumberOfCars = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcInt : pb::IMessage<GrpcInt> {
    private static readonly pb::MessageParser<GrpcInt> _parser = new pb::MessageParser<GrpcInt>(() => new GrpcInt());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcInt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Adtargeting.AdtargetingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcInt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcInt(GrpcInt other) : this() {
      intOutput_ = other.intOutput_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcInt Clone() {
      return new GrpcInt(this);
    }

    /// <summary>Field number for the "IntOutput" field.</summary>
    public const int IntOutputFieldNumber = 1;
    private int intOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntOutput {
      get { return intOutput_; }
      set {
        intOutput_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcInt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcInt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntOutput != other.IntOutput) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IntOutput != 0) hash ^= IntOutput.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IntOutput != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IntOutput);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IntOutput != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntOutput);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcInt other) {
      if (other == null) {
        return;
      }
      if (other.IntOutput != 0) {
        IntOutput = other.IntOutput;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IntOutput = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectricCarViewStatus : pb::IMessage<ElectricCarViewStatus> {
    private static readonly pb::MessageParser<ElectricCarViewStatus> _parser = new pb::MessageParser<ElectricCarViewStatus>(() => new ElectricCarViewStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectricCarViewStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Adtargeting.AdtargetingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectricCarViewStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectricCarViewStatus(ElectricCarViewStatus other) : this() {
      status_ = other.status_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectricCarViewStatus Clone() {
      return new ElectricCarViewStatus(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private bool status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectricCarViewStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectricCarViewStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != false) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != false) {
        output.WriteRawTag(8);
        output.WriteBool(Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectricCarViewStatus other) {
      if (other == null) {
        return;
      }
      if (other.Status != false) {
        Status = other.Status;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
