IF EXISTS (
    SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[CHECKLOGIN]') 
    AND xtype IN (N'P')
)
    DROP PROCEDURE [dbo].[CHECKLOGIN]
GO

	 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--THIS PROCEDURE VALIDATES THE USER NAME AND PASSWORD, AND RETURN THE USER ROLE AND THE USER ID
--INN CASE NO SUCH USER NAME AND PASSWORD EXISTS THEN IT RETURNS -1 FOR USERID AND BLANK FOR ROLE

CREATE PROCEDURE [dbo].[CHECKLOGIN]
@LOGINID VARCHAR(30),
@PASSWD VARCHAR(20) OUTPUT,
@USERROLE VARCHAR(20) OUTPUT, --THIE IS THE ROLE OF THE USER
@USERID NUMERIC OUTPUT, --THIS IS THE ID OF THE USER
@ORGANIZATION VARCHAR(50) OUTPUT,
@LoginType SMALLINT = 1
AS

BEGIN
--CHECK FOR THE ADMIN. IF THE USER NAME IS ADMIN THEN SELECT USER FRM ADMIN TABLE
IF(UPPER(@LOGINID) = 'ADMIN' )
	BEGIN
	--CHECK THE USER NAME FOR THE ADMIN
	SELECT @PASSWD = PASSWD, @USERID = ID, @USERROLE = ROLE FROM ADMIN WHERE USERNAME = @LOGINID

	--CHECK WHETHER ANY USER EXSITS OR NOT
	IF (@@ROWCOUNT = 0)
		BEGIN
			SET @USERID = -1
			SET @USERROLE = ''
		END
	END

ELSE
	BEGIN
		--CHECK THE USER NAME FOR THE DEALERS
		SELECT @PASSWD = PASSWD, @USERID = ID, @USERROLE = ROLE, @ORGANIZATION = ORGANIZATION FROM DEALERS 
		WHERE LOGINID = @LOGINID AND Status = 0 AND ID=1550

		--CHECK WHETHER ANY USER EXSITS OR NOT
		IF (@@ROWCOUNT = 0)
			BEGIN
				SET @USERID = -1
				SET @USERROLE = ''
		END

		--INSERT AN ENTRY INTO THE DATABASE FOR MAINTIAING THE LOG
		INSERT INTO DEALERLOGINLOGS(DEALERID, LOGINTIME, LoginType) VALUES(@USERID, GETDATE(), @LoginType)
	END
END
