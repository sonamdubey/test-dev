// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spamFilter.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SpamFilter.Service.ProtoClass {

  /// <summary>Holder for reflection information generated from spamFilter.proto</summary>
  public static partial class SpamFilterReflection {

    #region Descriptor
    /// <summary>File descriptor for spamFilter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpamFilterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBzcGFtRmlsdGVyLnByb3RvEgpTcGFtRmlsdGVyIkcKCFVzZXJJbmZvEgwK",
            "BE5hbWUYASABKAkSDgoGQ29va2llGAIgASgJEg4KBk51bWJlchgDIAEoCRIN",
            "CgVFbWFpbBgEIAEoCSIZCghHcnBjQm9vbBINCgVWYWx1ZRgBIAEoCCIXCgZH",
            "cnBjSWQSDQoFVmFsdWUYASABKAUiLwoJSXRlbVNjb3JlEg0KBVNjb3JlGAEg",
            "ASgCEhMKC0Rlc2NyaXB0aW9uGAIgASgJIrMBCglTcGFtU2NvcmUSDQoFU2Nv",
            "cmUYASABKAISIwoETmFtZRgCIAEoCzIVLlNwYW1GaWx0ZXIuSXRlbVNjb3Jl",
            "EiUKBkNvb2tpZRgDIAEoCzIVLlNwYW1GaWx0ZXIuSXRlbVNjb3JlEiUKBk51",
            "bWJlchgEIAEoCzIVLlNwYW1GaWx0ZXIuSXRlbVNjb3JlEiQKBUVtYWlsGAUg",
            "ASgLMhUuU3BhbUZpbHRlci5JdGVtU2NvcmUiTAoKU3BhbUVudGl0eRIKCgJp",
            "ZBgBIAEoBRIMCgRJdGVtGAIgASgJEg8KB0FkZGVkQnkYAyABKAkSEwoLRGVz",
            "Y3JpcHRpb24YBCABKAkiNgoOU3BhbUVudGl0eUxpc3QSJAoETGlzdBgBIAMo",
            "CzIWLlNwYW1GaWx0ZXIuU3BhbUVudGl0eSIoCgRQYWdlEg4KBlBhZ2VObxgB",
            "IAEoBRIQCghQYWdlU2l6ZRgCIAEoBSIJCgdOb0lucHV0MuoFChFTcGFtRmls",
            "dGVyU2VydmljZRI5CghHZXRTY29yZRIULlNwYW1GaWx0ZXIuVXNlckluZm8a",
            "FS5TcGFtRmlsdGVyLlNwYW1TY29yZSIAEkEKEkNyZWF0ZUVsYXN0aWNJbmRl",
            "eBITLlNwYW1GaWx0ZXIuTm9JbnB1dBoULlNwYW1GaWx0ZXIuR3JwY0Jvb2wi",
            "ABI9Cg1BZGRTcGFtTnVtYmVyEhYuU3BhbUZpbHRlci5TcGFtRW50aXR5GhIu",
            "U3BhbUZpbHRlci5HcnBjSWQiABJCChBEZWxldGVTcGFtTnVtYmVyEhYuU3Bh",
            "bUZpbHRlci5TcGFtRW50aXR5GhQuU3BhbUZpbHRlci5HcnBjQm9vbCIAEkIK",
            "EEdldEFsbFNwYW1OdW1iZXISEC5TcGFtRmlsdGVyLlBhZ2UaGi5TcGFtRmls",
            "dGVyLlNwYW1FbnRpdHlMaXN0IgASPQoNQWRkU3BhbUNvb2tpZRIWLlNwYW1G",
            "aWx0ZXIuU3BhbUVudGl0eRoSLlNwYW1GaWx0ZXIuR3JwY0lkIgASQgoQRGVs",
            "ZXRlU3BhbUNvb2tpZRIWLlNwYW1GaWx0ZXIuU3BhbUVudGl0eRoULlNwYW1G",
            "aWx0ZXIuR3JwY0Jvb2wiABJCChBHZXRBbGxTcGFtQ29va2llEhAuU3BhbUZp",
            "bHRlci5QYWdlGhouU3BhbUZpbHRlci5TcGFtRW50aXR5TGlzdCIAEj4KDkFk",
            "ZFNwYW1LZXl3b3JkEhYuU3BhbUZpbHRlci5TcGFtRW50aXR5GhIuU3BhbUZp",
            "bHRlci5HcnBjSWQiABJDChFEZWxldGVTcGFtS2V5d29yZBIWLlNwYW1GaWx0",
            "ZXIuU3BhbUVudGl0eRoULlNwYW1GaWx0ZXIuR3JwY0Jvb2wiABJEChJHZXRB",
            "bGxTcGFtS2V5d29yZHMSEC5TcGFtRmlsdGVyLlBhZ2UaGi5TcGFtRmlsdGVy",
            "LlNwYW1FbnRpdHlMaXN0IgBCIKoCHVNwYW1GaWx0ZXIuU2VydmljZS5Qcm90",
            "b0NsYXNzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.UserInfo), global::SpamFilter.Service.ProtoClass.UserInfo.Parser, new[]{ "Name", "Cookie", "Number", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.GrpcBool), global::SpamFilter.Service.ProtoClass.GrpcBool.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.GrpcId), global::SpamFilter.Service.ProtoClass.GrpcId.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.ItemScore), global::SpamFilter.Service.ProtoClass.ItemScore.Parser, new[]{ "Score", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.SpamScore), global::SpamFilter.Service.ProtoClass.SpamScore.Parser, new[]{ "Score", "Name", "Cookie", "Number", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.SpamEntity), global::SpamFilter.Service.ProtoClass.SpamEntity.Parser, new[]{ "Id", "Item", "AddedBy", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.SpamEntityList), global::SpamFilter.Service.ProtoClass.SpamEntityList.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.Page), global::SpamFilter.Service.ProtoClass.Page.Parser, new[]{ "PageNo", "PageSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpamFilter.Service.ProtoClass.NoInput), global::SpamFilter.Service.ProtoClass.NoInput.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserInfo : pb::IMessage<UserInfo> {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      name_ = other.name_;
      cookie_ = other.cookie_;
      number_ = other.number_;
      email_ = other.email_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cookie" field.</summary>
    public const int CookieFieldNumber = 2;
    private string cookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Number" field.</summary>
    public const int NumberFieldNumber = 3;
    private string number_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Cookie != other.Cookie) return false;
      if (Number != other.Number) return false;
      if (Email != other.Email) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
      if (Number.Length != 0) hash ^= Number.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Cookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cookie);
      }
      if (Number.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Number);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Cookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      if (Number.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Cookie.Length != 0) {
        Cookie = other.Cookie;
      }
      if (other.Number.Length != 0) {
        Number = other.Number;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Cookie = input.ReadString();
            break;
          }
          case 26: {
            Number = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcBool : pb::IMessage<GrpcBool> {
    private static readonly pb::MessageParser<GrpcBool> _parser = new pb::MessageParser<GrpcBool>(() => new GrpcBool());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcBool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBool(GrpcBool other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBool Clone() {
      return new GrpcBool(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcBool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcBool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcBool other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcId : pb::IMessage<GrpcId> {
    private static readonly pb::MessageParser<GrpcId> _parser = new pb::MessageParser<GrpcId>(() => new GrpcId());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcId(GrpcId other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcId Clone() {
      return new GrpcId(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcId other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemScore : pb::IMessage<ItemScore> {
    private static readonly pb::MessageParser<ItemScore> _parser = new pb::MessageParser<ItemScore>(() => new ItemScore());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemScore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemScore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemScore(ItemScore other) : this() {
      score_ = other.score_;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemScore Clone() {
      return new ItemScore(this);
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private float score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemScore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemScore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0F) hash ^= Score.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemScore other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpamScore : pb::IMessage<SpamScore> {
    private static readonly pb::MessageParser<SpamScore> _parser = new pb::MessageParser<SpamScore>(() => new SpamScore());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpamScore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamScore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamScore(SpamScore other) : this() {
      score_ = other.score_;
      Name = other.name_ != null ? other.Name.Clone() : null;
      Cookie = other.cookie_ != null ? other.Cookie.Clone() : null;
      Number = other.number_ != null ? other.Number.Clone() : null;
      Email = other.email_ != null ? other.Email.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamScore Clone() {
      return new SpamScore(this);
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private float score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::SpamFilter.Service.ProtoClass.ItemScore name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpamFilter.Service.ProtoClass.ItemScore Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "Cookie" field.</summary>
    public const int CookieFieldNumber = 3;
    private global::SpamFilter.Service.ProtoClass.ItemScore cookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpamFilter.Service.ProtoClass.ItemScore Cookie {
      get { return cookie_; }
      set {
        cookie_ = value;
      }
    }

    /// <summary>Field number for the "Number" field.</summary>
    public const int NumberFieldNumber = 4;
    private global::SpamFilter.Service.ProtoClass.ItemScore number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpamFilter.Service.ProtoClass.ItemScore Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 5;
    private global::SpamFilter.Service.ProtoClass.ItemScore email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpamFilter.Service.ProtoClass.ItemScore Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpamScore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpamScore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(Cookie, other.Cookie)) return false;
      if (!object.Equals(Number, other.Number)) return false;
      if (!object.Equals(Email, other.Email)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0F) hash ^= Score.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (cookie_ != null) hash ^= Cookie.GetHashCode();
      if (number_ != null) hash ^= Number.GetHashCode();
      if (email_ != null) hash ^= Email.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (cookie_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cookie);
      }
      if (number_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Number);
      }
      if (email_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Email);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (cookie_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cookie);
      }
      if (number_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Number);
      }
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpamScore other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          name_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.cookie_ != null) {
        if (cookie_ == null) {
          cookie_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
        }
        Cookie.MergeFrom(other.Cookie);
      }
      if (other.number_ != null) {
        if (number_ == null) {
          number_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
        }
        Number.MergeFrom(other.Number);
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
        }
        Email.MergeFrom(other.Email);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 18: {
            if (name_ == null) {
              name_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
            }
            input.ReadMessage(name_);
            break;
          }
          case 26: {
            if (cookie_ == null) {
              cookie_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
            }
            input.ReadMessage(cookie_);
            break;
          }
          case 34: {
            if (number_ == null) {
              number_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
            }
            input.ReadMessage(number_);
            break;
          }
          case 42: {
            if (email_ == null) {
              email_ = new global::SpamFilter.Service.ProtoClass.ItemScore();
            }
            input.ReadMessage(email_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpamEntity : pb::IMessage<SpamEntity> {
    private static readonly pb::MessageParser<SpamEntity> _parser = new pb::MessageParser<SpamEntity>(() => new SpamEntity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpamEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamEntity(SpamEntity other) : this() {
      id_ = other.id_;
      item_ = other.item_;
      addedBy_ = other.addedBy_;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamEntity Clone() {
      return new SpamEntity(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Item" field.</summary>
    public const int ItemFieldNumber = 2;
    private string item_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Item {
      get { return item_; }
      set {
        item_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddedBy" field.</summary>
    public const int AddedByFieldNumber = 3;
    private string addedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddedBy {
      get { return addedBy_; }
      set {
        addedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpamEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpamEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Item != other.Item) return false;
      if (AddedBy != other.AddedBy) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Item.Length != 0) hash ^= Item.GetHashCode();
      if (AddedBy.Length != 0) hash ^= AddedBy.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Item.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Item);
      }
      if (AddedBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AddedBy);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Item.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Item);
      }
      if (AddedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddedBy);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpamEntity other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Item.Length != 0) {
        Item = other.Item;
      }
      if (other.AddedBy.Length != 0) {
        AddedBy = other.AddedBy;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Item = input.ReadString();
            break;
          }
          case 26: {
            AddedBy = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpamEntityList : pb::IMessage<SpamEntityList> {
    private static readonly pb::MessageParser<SpamEntityList> _parser = new pb::MessageParser<SpamEntityList>(() => new SpamEntityList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpamEntityList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamEntityList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamEntityList(SpamEntityList other) : this() {
      list_ = other.list_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpamEntityList Clone() {
      return new SpamEntityList(this);
    }

    /// <summary>Field number for the "List" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SpamFilter.Service.ProtoClass.SpamEntity> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::SpamFilter.Service.ProtoClass.SpamEntity.Parser);
    private readonly pbc::RepeatedField<global::SpamFilter.Service.ProtoClass.SpamEntity> list_ = new pbc::RepeatedField<global::SpamFilter.Service.ProtoClass.SpamEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SpamFilter.Service.ProtoClass.SpamEntity> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpamEntityList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpamEntityList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpamEntityList other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Page : pb::IMessage<Page> {
    private static readonly pb::MessageParser<Page> _parser = new pb::MessageParser<Page>(() => new Page());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Page> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Page() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Page(Page other) : this() {
      pageNo_ = other.pageNo_;
      pageSize_ = other.pageSize_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Page Clone() {
      return new Page(this);
    }

    /// <summary>Field number for the "PageNo" field.</summary>
    public const int PageNoFieldNumber = 1;
    private int pageNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageNo {
      get { return pageNo_; }
      set {
        pageNo_ = value;
      }
    }

    /// <summary>Field number for the "PageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Page);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Page other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageNo != other.PageNo) return false;
      if (PageSize != other.PageSize) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageNo != 0) hash ^= PageNo.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageNo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageNo);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNo);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Page other) {
      if (other == null) {
        return;
      }
      if (other.PageNo != 0) {
        PageNo = other.PageNo;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PageNo = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NoInput : pb::IMessage<NoInput> {
    private static readonly pb::MessageParser<NoInput> _parser = new pb::MessageParser<NoInput>(() => new NoInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpamFilter.Service.ProtoClass.SpamFilterReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoInput(NoInput other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoInput Clone() {
      return new NoInput(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoInput other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
