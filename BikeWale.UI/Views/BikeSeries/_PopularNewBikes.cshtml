@model Bikewale.Models.BikeSeries.SeriesPageVM
@using Bikewale.Utility
@if (Model != null && Model.SeriesModels != null && Model.SeriesModels.NewBikes != null && Model.SeriesModels.NewBikes.Any())
{
    <section id="bikeModeleList" data-id="#bikeModeleList" class="bw-model-tabs-data">
		<div class="grid-12">
			<div class="content-box-shadow content-inner-block-1015">
				<ul>
					@{
						var firstModel = Model.SeriesModels.NewBikes.FirstOrDefault();
					}
					@if (firstModel != null)
					{
						<li class="model-card featured-card">
							<a href="@string.Format("/{0}-bikes/{1}/", firstModel.BikeMake.MakeMaskingName, firstModel.BikeModel.MaskingName)" title="@string.Format("{0} {1}", firstModel.BikeMake.MakeName, firstModel.BikeModel.ModelName)">
								<div class="model-card__image">
									<img class="lazy" data-original="@Image.GetPathToShowImages(firstModel.BikeImage.OriginalImagePath, firstModel.BikeImage.HostUrl, ImageSize._310x174, QualityFactor._70)" alt="@string.Format("{0} {1}", firstModel.BikeMake.MakeName, firstModel.BikeModel.ModelName)" src="" border="0">
									<div class="popular-tag">
										<span class="featured-icon">
											<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="19px" height="24px" viewBox="0 0 19 24" version="1.1">
												<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
													<g id="review-copy-6" transform="translate(-227.000000, -2819.000000)" fill="#FF7C6F">
														<g id="Group-27" transform="translate(24.000000, 2717.000000)">
															<g id="Group-11" transform="translate(204.000000, 103.000000)">
																<g id="Group-12">
																	<g id="Group-10">
																		<path d="M5.74758324,12.2666667 L10.5498613,12.2666667 L10.5498613,12.2666667 C11.102146,12.2666667 11.5498613,12.7143819 11.5498613,13.2666667 L11.5498613,21.1118074 L11.5498613,21.1118074 C11.5498613,21.6399904 11.1216843,22.0681673 10.5935014,22.0681673 C10.3398892,22.0681673 10.0966618,21.9674322 9.91731453,21.7881177 L8.96409387,20.835071 L8.96409387,20.835071 C8.58457952,20.4556259 7.97321505,20.4434036 7.57883838,20.8073772 L6.42579649,21.8715292 L6.42579649,21.8715292 C6.01994168,22.2460961 5.38728493,22.2207322 5.01271809,21.8148773 C4.84224335,21.6301627 4.74758324,21.3880227 4.74758324,21.1366641 L4.74758324,13.2666667 L4.74758324,13.2666667 C4.74758324,12.7143819 5.19529849,12.2666667 5.74758324,12.2666667 Z" id="Rectangle-7" />
																		<ellipse id="Oval-3" stroke="#FFFFFF" stroke-width="2" cx="8.30827068" cy="8.05" rx="8.30827068" ry="8.05" />
																	</g>
																	<ellipse id="Oval-3" stroke="#FFFFFF" stroke-width="2" cx="8.30827068" cy="8.21428571" rx="4.32030075" ry="4.27142857" />
																</g>
															</g>
														</g>
													</g>
												</g>
											</svg>
										</span>
										Most Popular
									</div>
								</div>
								<div class="model-card__desc">
									<span class="rating-badge" data-rate-bg="@Math.Round(firstModel.Rating, MidpointRounding.AwayFromZero)">
										<span class="bwsprite star-white"></span>
										<span>@Math.Round(firstModel.Rating, MidpointRounding.AwayFromZero)</span>
									</span>
									<div class="model-card__list">
										<div class="model-card__list-block">
											<h3 class="model-card__label">@string.Format("{0} {1}", firstModel.BikeMake.MakeName, firstModel.BikeModel.ModelName)</h3>
											<ul class="summary-specs-list">
												@Html.Raw(FormatMinSpecs.GetMinSpecsAsLiElement(Convert.ToString(firstModel.MinSpecs.Displacement), Convert.ToString(firstModel.MinSpecs.FuelEfficiencyOverall), Convert.ToString(firstModel.MinSpecs.MaxPower), Convert.ToString(firstModel.MinSpecs.KerbWeight)))
											</ul>
										</div>
										<div class="model-card__list-block">
											@if (firstModel.Price.ExShowroomPrice > 0)
											{
												<p class="model-card__sub-title">@string.Format("Ex-showroom price in {0}", Model.City.CityId == 0 ? BWConfiguration.Instance.DefaultName : Model.City.CityName)</p>


												<p class="font20 text-default">&#x20b9; <span class="font-bold">@Format.FormatPrice(Convert.ToString(firstModel.Price.ExShowroomPrice))</span></p>}
											else
											{
												<p class="model-card__sub-title">Avg. Ex-showroom price</p>


												<p class="font20 text-default">&#x20b9; <span class="font-bold">@Format.FormatPrice(Convert.ToString(firstModel.Price.AvgPrice))</span></p>}
										</div>
									</div>
								</div>
							</a>
							<div class="model-card__btn-block">
								<a href="javascript:void(0)" data-pagecatid="1" data-pqsourceid="@((int)Bikewale.Entities.PriceQuote.PQSourceEnum.Mobile_Series_Page)" data-makename="@firstModel.BikeMake.MakeName" data-modelname="@firstModel.BikeModel.ModelName" data-modelid="@firstModel.BikeModel.ModelId" class="btn btn-white getquotation" rel="nofollow">Check on-road price</a>
							</div>
						</li>
					}
					@if (Model.SeriesModels.NewBikes.Count() > 1)
					{
						foreach (var bike in Model.SeriesModels.NewBikes.Skip(1))
						{
							<li class="model-card">
								<a href="@string.Format("/{0}-bikes/{1}/", bike.BikeMake.MakeMaskingName, bike.BikeModel.MaskingName)" title="@string.Format("{0} {1}", bike.BikeMake.MakeName, bike.BikeModel.ModelName)">
									<div class="model-card__image">
										<img class="lazy" data-original="@Image.GetPathToShowImages(bike.BikeImage.OriginalImagePath, bike.BikeImage.HostUrl, ImageSize._310x174, QualityFactor._70)" alt="@string.Format("{0} {1}", bike.BikeMake.MakeName, bike.BikeModel.ModelName)" src="" border="0">
									</div>
									<div class="model-card__desc">
										<span class="rating-badge" data-rate-bg="@Math.Round(bike.Rating, MidpointRounding.AwayFromZero)">
											<span class="bwsprite star-white"></span>
											<span>@Math.Round(bike.Rating, MidpointRounding.AwayFromZero)</span>
										</span>
										<div class="model-card__list">
											<div class="model-card__list-block">
												<h3 class="model-card__label">@string.Format("{0} {1}", bike.BikeMake.MakeName, bike.BikeModel.ModelName)</h3>
												<ul class="summary-specs-list">
													@Html.Raw(FormatMinSpecs.GetMinSpecsAsLiElement(Convert.ToString(bike.MinSpecs.Displacement), Convert.ToString(bike.MinSpecs.FuelEfficiencyOverall), Convert.ToString(bike.MinSpecs.MaxPower), Convert.ToString(bike.MinSpecs.KerbWeight)))
												</ul>
											</div>
											<div class="model-card__list-block">
												@if (bike.Price.ExShowroomPrice > 0)
												{
													<p class="model-card__sub-title">@string.Format("Ex-showroom price in {0}", Model.City.CityId == 0 ? BWConfiguration.Instance.DefaultName : Model.City.CityName)</p>


													<p class="font20 text-default">&#x20b9; <span class="font-bold">@Format.FormatPrice(Convert.ToString(bike.Price.ExShowroomPrice))</span></p>}
												else
												{
													<p class="model-card__sub-title">Avg. Ex-showroom price</p>


													<p class="font20 text-default">&#x20b9; <span class="font-bold">@Format.FormatPrice(Convert.ToString(bike.Price.AvgPrice))</span></p>}
											</div>
										</div>
									</div>
								</a>
								<div class="model-card__btn-block">
									<a href="javascript:void(0)" data-pagecatid="1" data-pqsourceid="@((int)Bikewale.Entities.PriceQuote.PQSourceEnum.Mobile_Series_Page)" data-makename="@bike.BikeMake.MakeName" data-modelname="@bike.BikeModel.ModelName" data-modelid="@bike.BikeModel.ModelId" class="btn btn-white getquotation" rel="nofollow">Check on-road price</a>
								</div>
							</li>
						}
					}
				</ul>
			</div>
		</div>
		<div class="clear"></div>
    </section>
}