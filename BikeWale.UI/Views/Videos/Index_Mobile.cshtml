@model Bikewale.Models.Videos.VideosLandingPageVM

    <!DOCTYPE html>
    @{
        var StaticUrlPWA = Bikewale.Utility.BWConfiguration.Instance.StaticUrlPWA;
        var StaticUrl = Bikewale.Utility.BWConfiguration.Instance.StaticUrl;

        var VendorJsUrl = (!String.IsNullOrEmpty(StaticUrlPWA) ? StaticUrlPWA : "/Scripts") + "/vendor.bundle.js?" + Bikewale.Utility.BWConfiguration.Instance.StaticVendorFileVersion;
        var AppJsUrl = (!String.IsNullOrEmpty(StaticUrlPWA) ? StaticUrlPWA : "/Scripts") + "/app.bundle.js?" + Bikewale.Utility.BWConfiguration.Instance.StaticAppFileVersion;
        var BwcacheJsUrl = (!String.IsNullOrEmpty(StaticUrl) ? StaticUrl : "") + "/src/bwcache.js?" + Bikewale.Utility.BWConfiguration.Instance.StaticFileVersion;
    }
        <html lang="en" xmlns="http://www.w3.org/1999/xhtml">
        <head>
            <meta charset="utf-8" />
            <title></title>
            <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" />
            <meta name="google-site-verification" content="fG4Dxtv_jDDSh1jFelfDaqJcyDHn7_TCJH3mbvq6xW8" />
            <meta name="theme-color" content="#2a2a2a" />
            <link rel="SHO <link rel='stylesheet' type='text/css' href='/m/css/content/app.css' />RTCUT ICON" href="https://imgd.aeplcdn.com/0x0/bw/static/sprites/d/favicon.png" type="image/png" />
            <link rel='stylesheet' type='text/css' href='/m/css/videos/video-landing.css' />
            <style type='text/css' rel='stylesheet'>
                @@font-face {
                    font-family: 'Open Sans';
                    font-style: normal;
                    font-weight: 400;
                    src: url(https://fonts.gstatic.com/s/opensans/v13/K88pR3goAWT7BTt32Z01m4X0hVgzZQUfRDuZrPvH3D8.ttf) format('ttf');
                    unicode-range: U+0460-052F,U+20B4,U+2DE0-2DFF,U+A640-A69F;
                }

                @@font-face {
                    font-family: 'Open Sans';
                    font-style: normal;
                    font-weight: 600;
                    src: url(https://fonts.gstatic.com/s/opensans/v13/K88pR3goAWT7BTt32Z01m4X0hVgzZQUfRDuZrPvH3D8.ttf) format('ttf');
                    unicode-range: U+0460-052F,U+20B4,U+2DE0-2DFF,U+A640-A69F;
                }

                @@font-face {
                    font-family: 'Open Sans';
                    font-style: normal;
                    font-weight: 700;
                    src: url(https://fonts.gstatic.com/s/opensans/v13/K88pR3goAWT7BTt32Z01m4X0hVgzZQUfRDuZrPvH3D8.ttf) format('ttf');
                    unicode-range: U+0460-052F,U+20B4,U+2DE0-2DFF,U+A640-A69F;
                }
            </style>
            <script defer type="text/javascript">
    !function (a, b) { "use strict"; function f() { if (!d) { d = !0; for (var a = 0; a < c.length; a++) c[a].fn.call(window, c[a].ctx); c = [] } } function g() { "complete" === document.readyState && f() } a = a || "docReady", b = b || window; var c = [], d = !1, e = !1; b[a] = function (a, b) { if ("function" != typeof a) throw new TypeError("callback for docReady(fn) must be a function"); return d ? void setTimeout(function () { a(b) }, 1) : (c.push({ fn: a, ctx: b }), void ("complete" === document.readyState || !document.attachEvent && "interactive" === document.readyState ? setTimeout(f, 1) : e || (document.addEventListener ? (document.addEventListener("DOMContentLoaded", f, !1), window.addEventListener("load", f, !1)) : (document.attachEvent("onreadystatechange", g), window.attachEvent("onload", f)), e = !0))) } }("docReady", window);
            </script>
            <link rel='stylesheet' type='text/css' href='/m/css/videos/video-landing.css' />
            <link rel="dns-prefetch" href="https://imgd.aeplcdn.com/">
            <link rel="dns-prefetch" href="https://stb.aeplcdn.com/">
            @*<script type="text/javascript" src="/Scripts/manifest.bundle.js" defer></script>
            <script type="text/javascript" src="@VendorJsUrl" defer></script>
            <script type="text/javascript" src="@AppJsUrl" defer></script>
            <script type="text/javascript" src="@BwcacheJsUrl" defer></script>*@

        </head>
        <body>
            
           @Html.Raw(Model.ServerRouterWrapper)
            <script type="text/javascript">
                window.state = @Html.Raw(Model.WindowState);
            </script>
            <noscript id="asynced-css">

        @*<link href="@CssBTFUrl" rel="stylesheet" type="text/css" />
            Add async css*@
            
            </noscript>
            <script>
    var loadAsyncCss = function () { var a = document.getElementById("asynced-css"); if (a) { var b = document.createElement("div"); b.style.display = 'none', b.innerHTML = a.textContent, document.body.appendChild(b), a.parentElement.removeChild(a) } }, raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame; raf ? raf(function () { window.setTimeout(loadAsyncCss, 0) }) : window.addEventListener("load", loadAsyncCss);
            </script>
            <script defer type="text/javascript">

        function triggerData(cat,act,lbl) {
            if(typeof triggerDataToBhrigu == 'function') {
                triggerDataToBhrigu(cat,act,lbl);
            }
        }
        //docReady(function () {
        //    try {
        //        AppEntryPoint();
        //    } catch (e) {
        //        console.warn(e.message);
        //    }
        //});

        window.addEventListener('DOMContentLoaded', function() {
            if('serviceWorker' in navigator) {
                navigator.serviceWorker.register("@Url.Content(Bikewale.Utility.BWConfiguration.Instance.ServiceWorkerPath)").then(function(registration) {
                    registration.addEventListener('updatefound', function () {
                        var newWorker = registration.installing;
                        newWorker.addEventListener('statechange', function () {
                            if (newWorker.state == 'redundant') {
                                triggerData('ServiceWorker', 'Registration', 'status=redundant');
                            }
                            else if (newWorker.state == 'activated') {
                                triggerData('ServiceWorker', 'Registration', 'status=successful');
                            }
                        })
                    });


                }).catch(function(err) {
                    triggerData('ServiceWorker','Registration','status=unsuccessful|err='+err);
                    console.log(err);
                })
            }
            else {
                triggerData('ServiceWorker','Registration','status=unavailable');

            }

        })
            </script>

        </body>
    </html>
                          

