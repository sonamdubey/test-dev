@model Bikewale.Models.UpcomingPageVM
@{
    ushort i = 0;
}

@if (Model != null && Model.HasBikes)
{
    if ((Model.MakesList != null && Model.MakesList.Count() > 0) || (Model.YearsList != null && Model.YearsList.Count() > 1))
    {
        <div class="box-shadow padding-top10 padding-bottom10">
            @if (Model.MakesList != null && Model.MakesList.Count() > 0)
            {
                <div class="grid-6 padding-left15 padding-right15 border-solid-right">
                    <p class="font12 text-light-grey">Brand</p>
                    <p id="brand-filter-selection" class="filter-selection-value text-truncate" data-bind="text : selectedMake() ? selectedMake() : '' ">All brands</p>
                </div>
            }
            @if (Model.YearsList != null && Model.YearsList.Count() > 1)
            {
                <div class="grid-6 padding-left15 padding-right15">
                    <p class="font12 text-light-grey">Launch year</p>
                    <p id="year-filter-selection" class="filter-selection-value text-truncate" data-bind="text : selectedYear() ? selectedYear() : '' ">All years</p>
                </div>
            }
            <div class="clear"></div>
        </div>
    }

    <!-- ko if : models() && models().length > 0 -->
    <ul class="bike-listing-vertical">
        @if (Model.UpcomingBikeModels != null)
        {
            foreach (var bike in Model.UpcomingBikeModels)
            {
            <!-- ko if : models()[@i] -->
                <li class="list-item">
                    <p class="border-red-left font12 text-bold margin-bottom10" style="display: @(bike.IsLaunchingThisMonth ? "block" : "none")" data-bind="visible: models()[@i].isLaunchingThisMonth, text: 'Launching this month'">Launching this month</p>
                    <a href="@string.Format("/m/{0}-bikes/{1}/", bike.MakeBase.MaskingName, bike.ModelBase.MaskingName)" title="@bike.MakeBase.MakeName @bike.ModelBase.ModelName" class="block" data-bind="attr : {'href' : '/m/' + models()[@i].makeBase.maskingName + '-bikes/' + models()[@i].modelBase.maskingName + '/',title :models()[@i].makeBase.makeName + ' ' + models()[@i].modelBase.modelName  }">
                        <div class="item-image-content">
                            <img data-bind="attr : { 'data-original' : (models()[@i].hostUrl!='' ? models()[@i].hostUrl : 'https://imgd.aeplcdn.com/' ) +  '/310x174/' + (models()[@i].originalImagePath!='' ? models()[@i].originalImagePath : '/bikewaleimg/images/noimage.png' ), 'src':'' ,'lazyload' : (models()[@i].hostUrl!='' ? models()[@i].hostUrl : 'https://imgd.aeplcdn.com/' ) +  '/310x174/' + (models()[@i].originalImagePath!='' ? models()[@i].originalImagePath : '/bikewaleimg/images/noimage.png' ),'alt' : models()[@i].makeBase.makeName + ' ' + models()[@i].modelBase.modelName,'title' : models()[@i].makeBase.makeName + ' ' + models()[@i].modelBase.modelName  }" class="lazy" data-original="@Bikewale.Utility.Image.GetPathToShowImages(bike.OriginalImagePath, bike.HostUrl, Bikewale.Utility.ImageSize._310x174, Bikewale.Utility.QualityFactor._75)" alt="@bike.MakeBase.MakeName @bike.ModelBase.ModelName" src="" />
                        </div>
                        <h3 data-bind="text : models()[@i].makeBase.makeName + ' ' + models()[@i].modelBase.modelName ">@bike.MakeBase.MakeName @bike.ModelBase.ModelName</h3>
                        <p class="key-size-14 text-truncate">Expected launch</p>
                        <span class="value-size-16" data-bind="formatDate : models()[@i].expectedLaunchedDate">@Convert.ToDateTime(bike.ExpectedLaunchDate).ToString("MMMM yyyy")</span>
                        <p class="key-size-14 text-truncate margin-top10">Expected price</p>
                        <span class="bwmsprite inr-sm-icon"></span>&nbsp;<span class="value-size-18" data-bind="CurrencyText : models()[@i].estimatedPriceMin ">@(bike.EstimatedPriceMin > 0 ? Bikewale.Common.CommonOpn.FormatNumeric(Convert.ToString(bike.EstimatedPriceMin)) : "N/A")</span>&nbsp;<span class="value-size-14">onwards</span>
                    </a>
                </li>
            <!-- /ko -->
                i++;
            }
        }
    </ul>
    <!-- /ko -->

    <div id="brand-slideIn-drawer" class="slideIn-drawer-container fix-only-header">
        <div class="drawer-top-header">
            <span id="close-brand-slideIn-drawer" class="back-arrow-box inline-block">
                <span class="bwmsprite back-long-arrow-left"></span>
            </span><p class="head-label inline-block">Select brand</p>
        </div>
        <div class="drawer-body-content">
            <div class="filter-input-box">
                <div class="form-control-box">
                    <input type="text" id="" class="form-control padding-right40" placeholder="Type to select brand">
                    <span class="bwmsprite search-icon-grey"></span>
                </div>
            </div>
            @if (Model.MakesList != null)
            {
                <ul class="filter-list" data-filter="makewise">
                    <li data-bind="click : function(d,e) { setMakeFilter(e);}"> <span>All brands</span> </li>
                    @foreach (var make in Model.MakesList)
                    {
                        <li data-makeid="@make.MakeId" data-makename="@make.MakeName" data-makename-lower="@make.MakeName.ToLower()" data-bind="click : function(d,e) { setMakeFilter(e);}">
                            <span>@make.MakeName</span>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>

    <div id="year-slideIn-drawer" class="slideIn-drawer-container fix-only-header">
        <div class="drawer-top-header">
            <span id="close-year-slideIn-drawer" class="back-arrow-box inline-block">
                <span class="bwmsprite back-long-arrow-left"></span>
            </span><p class="head-label inline-block">Select year</p>
        </div>
        <div class="drawer-body-content">
            <ul class="filter-list" data-filter="yearwise">
                <li data-bind="click : function(d,e) { setYearFilter(e);}"> <span>All years</span> </li>
                @foreach (var year in Model.YearsList)
                {
                    <li data-bikeyear="@year" data-bind="click : function(d,e) { setYearFilter(e);}">
                        <span>@year</span>
                    </li>
                }
            </ul>
        </div>
    </div>

    <div style="text-align: center;display:@(Model.HasPages ? "none" : "block")" data-bind="visible:noBikes() || TotalBikes()==0">
        <div id="nobike" data-bind="visible : noBikes()">
            <img src="https://imgd3.aeplcdn.com/0x0/bw/static/design15/no-result-m.png" alt="No match found">
        </div>
    </div>
    <div class="margin-right10 margin-left10 padding-top15 padding-bottom15 border-solid-top" data-bind="visible : !noBikes() && TotalBikes() != 0 && Pagination().paginated() > 0" style="display: @(Model.HasPages ? "block" : "none")">
        <div class=" grid-5 omega text-light-grey font13">
            @if (Model.Pager != null)
            {
                <div class="font14" data-bind="visible: TotalBikes() > 0"><span class="text-bold" data-bind="CurrencyText: (Pagination().pageNumber() - 1) * Pagination().pageSize() + 1">@((Model.Pager.PageNo - 1) * Model.Pager.PageSize + 1)</span>-<span class="text-bold" data-bind="    CurrencyText: Math.min(TotalBikes(), Pagination().pageNumber() * Pagination().pageSize())">@Math.Min(Model.Pager.PageNo * Model.Pager.PageSize, Model.Pager.TotalResults)</span> of <span class="text-bold" data-bind="CurrencyText: TotalBikes()">@Model.Pager.TotalResults</span> bikes</div>
            }
        </div>
        @if (Model.Pager != null && Model.Pager.TotalResults > 10) { Html.RenderAction("Index", "Pager", new { objPager = @Model.Pager }); }
        <div class="clear"></div>
    </div>

}

<div id="sort-filters-loader" style="display: none;" data-bind="visible : IsLoading()">
    <div id="popup-loader"></div>
</div>