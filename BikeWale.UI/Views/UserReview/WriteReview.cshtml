@model Bikewale.Models.WriteReviewPageVM
@{
    Model.IsHeaderFix = false;
    Model.Page_ATF_CSS = "<link rel='stylesheet' type='text/css' href='/sass/user-review/write-review.css' inline />";
    Model.Page_JS_Path = "/src/user-review/write-review.js";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Model.ExcludeContestSlug = true;
    Model.PageMetaTags.CanonicalUrl = string.Format("https://www.bikewale.com/rate-your-bike/{0}/", Model.Model.ModelId);
    Model.PageMetaTags.AlternateUrl = string.Format("https://www.bikewale.com/m/rate-your-bike/{0}/", Model.Model.ModelId);
}

@if (Model != null && Model.Make != null && Model.Model != null && Model.Rating != null)
{
    <form action="/user-reviews/save/" method="post">
        <section>
            <div id="write-review-form" class="container section-bottom-margin font14 margin-top20">
                <div class="grid-12">
                    <div class="content-box-shadow">
                        <div class="content-box-shadow padding-15-20 content-box-head">
                            <p class="font22 text-black text-bold inline-block">You rated @Model.Make.MakeName @Model.Model.ModelName</p>
                            <div class="inline-block user-rating-box">
                                <span class="bwsprite star-one"></span>
                                <span class="inline-block">
                                    <span class="font18 text-bold">@Model.Rating.Value</span>&nbsp;<span class="font12 text-xx-light">/&nbsp;5</span>
                                </span>
                            </div>
                        </div>
                        <div class="contest-slug-sm contest-slug-container margin-bottom20">
                            <span class="trophy-fff-14"></span>
                            <p class="contest-slug__title">Rate &amp; write a detailed review and stand a chance to win Amazon vouchers worth &#x20B9; 1,000. Help others in making the right decision.</p>
                        </div>
                        <div class="padding-15-20">
                            <div class="padding-15-20 main-container">
                                <div class="grid-2">
                                    <ul class="review-progress">
                                        <li class="completed review-progress__rate-bike"><p class="review-progress__text">Rate this Bike</p></li>
                                        <li class="active review-progress__write-review"><p class="review-progress__text">Write Review</p></li>
                                        <li class="review-progress__other-details"><p class="review-progress__text">Other details</p></li>
                                    </ul>
                                </div>
                                <div class="grid-10 alpha">
                                    <h2 class="font15 margin-bottom10">@Model.Rating.ResponseHeading</h2>
                                    <p class="text-slate-grey margin-bottom10">Tell us more about it. You may consider writing about:</p>
                                    <ol class="numeric-list margin-bottom20">
                                        <li>Buying experience</li>
                                        <li>Riding experience</li>
                                        <li>Details about looks, performance etc.</li>
                                        <li>Servicing and maintenance</li>
                                        <li>Pros and Cons</li>
                                    </ol>

                                    <div class="textarea-box margin-bottom15">
                                        <textarea data-bind="textInput: detailedReview" id="reviewDesc" data-validate="@((Model.SubmitResponse != null && !string.IsNullOrEmpty(Model.SubmitResponse.ReviewErrorText)) ? Model.SubmitResponse.ReviewErrorText : "")" rows="4" cols="80" maxlength="7900" placeholder="@Html.Raw("Write a detailed review & stand a chance to win Amazon vouchers worth &#x20B9; 1,000.")"></textarea>

                                        <div data-bind="visible: !detailedReviewFlag() && descLength() < 300" class="review-char-count position-abt font12">
                                            <span data-bind="visible: descLength() > 0"><span data-bind="text: descLength"></span>/</span><span data-bind="text: reviewCharLimit"></span>&nbsp;min
                                        </div>

                                        <div data-bind="visible: detailedReviewFlag" class="textarea-error position-abt">
                                            <span class="error-text" data-bind="text: detailedReviewError"></span>
                                        </div>
                                    </div>

                                    <h3 class="font15 text-black margin-bottom10">Give a title to your review</h3>
                                    <p class="text-slate-grey margin-bottom20">A catchy title will grab eyeballs, and more people will read your review.</p>

                                    <div class="input-box form-control-box" data-bind="css: reviewTitle().length > 0 ? 'not-empty' : ''">
                                        <input type="text" name="reviewTitle" id="getReviewTitle" maxlength="149" data-validate="@((Model.SubmitResponse != null && !string.IsNullOrEmpty(Model.SubmitResponse.TitleErrorText)) ? Model.SubmitResponse.TitleErrorText : "")" data-bind="textInput: reviewTitle" />
                                        <label for="getReviewTitle">Your title</label>
                                        <span class="boundary"></span>
                                        <span class="error-text"></span>
                                    </div>

                                    
                                    <div class="clear"></div>

                                    <input type="hidden" id="reviewQuestion" name="reviewQuestion" />
                                    <input type="hidden" id="formattedDescripton" name="reviewDescription" />
                                    <input type="hidden" id="reviewId" name="reviewId" value="@Model.ReviewId" />
                                    <input type="hidden" name="encodedId" value="@Utils.Utils.EncryptTripleDES(string.Format("customerid={0}&reviewid={1}", Model.CustomerId, Model.ReviewId))" />
                                    <input type="hidden" name="userName" value="@Model.UserName" />
                                    <input type="hidden" name="emailId" value="@Model.EmailId" />
                                    <input type="hidden" name="makeName" value="@Model.Make.MakeName" />
                                    <input type="hidden" name="modelName" value="@Model.Model.ModelName" />
                                    <input type="hidden" name="encodedString" value="@Model.EncodedWriteUrl" />
                                    <input type="hidden" name="queryEncoded" value="@Model.EncodedWriteUrl" />
                                    <input type="hidden" name="isDesktop" value="true" />
                                    <input type="hidden" id="overAllRatings" value="@Model.Rating.Value" />
                                    <input type="hidden" id="pageSourceId" value="@Model.PageSourceId" />
                                    <input type="hidden" id="contestSrc" value="@Model.ContestSrc" />    
                                    <input type="hidden" name="fromParametersRatingScreen" value="false" />                              

                                    @Html.AntiForgeryToken()
                                    <input id="submitReviewBtn" type="submit" class="btn btn-orange btn-220-40" value="Submit review" data-bind="click: submitReview" />

                                </div>
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clear"></div>
            </div>
            <span id="review-page-data" class="hide">@Model.JsonReviewSummary</span>
            <span id="review-question-list" class="hide">@Model.JsonQuestionList</span>
            <span id="previousPageUrl" class="hide">@Model.PreviousPageUrl</span>
        </section>       

    </form>
}
<script type="text/javascript">
    var page = "writeReview";
    var vmWriteReview;
    window.addEventListener("beforeunload", function (event) {
        vmWriteReview.SaveToBwCache();
    });
</script>