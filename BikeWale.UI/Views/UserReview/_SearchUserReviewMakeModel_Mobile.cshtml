@model  IEnumerable<Bikewale.Entities.UserReviews.RecentReviewsWidget>
<section>
    <div class="container margin-bottom20">
        <h2 class="font18 text-center margin-top20 margin-bottom10">User reviews</h2>
        <div class="content-box-shadow">
            <div class="user-review__intro">
                <p class="review-intro__title">3000+ unbiased, verified reviews.<br>Know the pros and cons of 200+ bike models.</p>
                <div class="form-control-box margin-bottom15">
                    <input type="text" class="form-control" placeholder="Search bike e.g. Bajaj Dominar 400" id="userReviewList" autocomplete="off">
                </div>
				<ul id="erUserReviewList" class="ui-autocomplete ui-front ui-menu">
					<li class="ui-menu-item" tabindex="-1">
						<span class="text-bold">Oops! No suggestions found</span><br />
						<span class="text-light-grey font12">Search by bike name e.g: Bullet 350</span>
					</li>
				</ul>
				<ul id="new-global-recent-searches" style="position: relative;margin:0;text-align: left" class="ui-autocomplete ui-front ui-menu ui-widget ui-widget-content hide"></ul>
                <button class="btn btn-orange btn-120-32" id="btnUserSearch">Read reviews</button>
            </div>


@if (Model != null && Model.Count() > 0)
{
    <h3 class="font15 text-center">Recently added reviews</h3>
    <div class="swiper-container user-review__swiper">
        <ul class="swiper-wrapper">
@foreach (var review in Model)
{
    <li class="swiper-slide">
        <div class="swiper-card">
            @if (review.IsWinner)
            {  <div class="review-card__winner">
                <span class="vertical-ribbon bg-color--teal trophy-teal-10x12"></span>
                <span class="winner-tag__label">Winner</span>
            </div>
            }
          
            <span class="review-card__author-circle"></span>
            <p class="review-card__author">@review.CustomerName</p>
            <span class="rating-badge" data-rate-bg="@review.Rating">
                <span class="bwmsprite star-white"></span>@review.Rating
            </span>
            <p class="review-card__bike text-truncate" title="@review.BikeName">@review.BikeName</p>
            <p class="review-card__desc">@string.Format("{0}...", review.ReviewDescription)</p>
            <p class="review-card__date">@Bikewale.Utility.FormatDate.GetTimeSpan(review.EntryDate) days ago</p>
            <a href="@string.Format("/m/{0}-bikes/{1}/reviews/{2}/",review.MakeMaskingName,review.ModelMaskingName,review.ReviewId)" title="@string.Format("{0} Review by {1}",review.BikeName,review.CustomerName)" class="font14">Read full review</a>
        </div>
    </li>
}
        </ul>
    </div>
}
         
        </div>
    </div>
</section>
<script type="text/javascript">
    var category;
    function UserReviewRedirection(items) {

        var make = new Object();
        make.maskingName = items.payload.makeMaskingName;
        make.id = items.payload.makeId;
        var model = null;
        if (items.payload.modelId > 0) {
            model = new Object();
            model.maskingName = items.payload.modelMaskingName;
            model.id = items.payload.modelId;
            model.futuristic = items.payload.futuristic;
        }



        if (model != null && model != undefined) {
            window.location.href = "/m/" + make.maskingName + "-bikes/" + model.maskingName + "/reviews/";
            return true;
        }

    }

    var userReviewSearch = function () {
        var self = this;
        self.init = function () {
            try {
                $("#userReviewList").bw_autocomplete({
                    width: 469,
                    source: 5,
                    recordCount: 10,
                    onClear: function () {
                        objBikes = new Object();
                    },
                    click: function (event, ui, orgTxt) {
                        UserReviewRedirection(ui.item);
                        var keywrd = ui.item.label + '_' + $('#userReviewList').val();
                        dataLayer.push({ 'event': 'Bikewale_all', 'cat': category, 'act': 'Review_Search_Keyword_Present_in_Autosuggest', 'lab': keywrd });
                        isMakeModelRedirected = true;
                    },
                    open: function (result) {
                        objBikes.result = result;
                    },

                    focusout: function () {

                        $('#erruserReviewList').hide()
                        focusedMakeModel = new Object();
                        focusedMakeModel = objBikes.result ? objBikes.result[$('li.ui-state-focus').index()] : null;


                    },
                    afterfetch: function (result, searchtext) {
                        if (result != undefined && result.length > 0 && searchtext.trim() != "") {
                            $('#erruserReviewList').hide();
                            NewBikeSearchResult = true;
                        }
                        else {
                            focusedMakeModel = null; NewBikeSearchResult = false;
                            if (searchtext.trim() != "") {
                                $('#erruserReviewList').show();
                                dataLayer.push({ 'event': 'Bikewale_all', 'cat': category, 'act': 'Review_Search_Keyword_Present_in_Autosuggest', 'lab': keywrd });
                            }
                        }
                    },
                    keyup: function () {
                        if ($('#userReviewList').val().trim() != '' && $('li.ui-state-focus a:visible').text() != "") {
                            focusedMakeModel = new Object();
                            focusedMakeModel = objBikes.result ? objBikes.result[$('li.ui-state-focus').index()] : null;
                            $('#erruserReviewList').hide();

                        }

                        if ($('#userReviewList').val().trim() == '' || e.keyCode == 27 || e.keyCode == 13) {
                            if (focusedMakeModel == null || focusedMakeModel == undefined) {
                                if ($('#userReviewList').val().trim() != '') {
                                    $('#erruserReviewList').show();
                                    dataLayer.push({ 'event': 'Bikewale_all', 'cat': category, 'act': 'Review_Search_Keyword_Present_in_Autosuggest', 'lab': keywrd });

                                }
                            }

                        }


                    }
                });
            }
            catch (e) {

            }
        }();
    };
    function btnFindUserReviewNav() {
        if (focusedMakeModel == undefined || focusedMakeModel == null) {
            return false;
        }
        return UserReviewRedirection(focusedMakeModel);
    }
    docReady(function () {
        
        $.fn.hint = bwHint;
        $.fn.bw_autocomplete = bwAutoComplete;
        var vmUserReviewSearch = new userReviewSearch();
        category = $('#source').val();
        $('#btnUserSearch').on('click', function (e) {
            var id = $('#userReviewList');
            var searchVal = id.val();
            var placeHolder = id.attr('placeholder');
            if (btnFindUserReviewNav() || searchVal == placeHolder || (searchVal).trim() == "") {
                return false;
            } else {
                return false;
            }

        });
    });
</script>