@model Bikewale.Models.UserReviews.UserReviewSimilarBikesWidgetVM
<div class="swiper-container card-container user-reviews-type-carousel">
    <div class="swiper-wrapper">
        @foreach (var bike in Model.SimilarBikes)
        {
            var bikeName = string.Format("{0} {1}", bike.Make.MakeName, bike.Model.ModelName);
            <div class="swiper-slide">
                <div class="swiper-card">
                    <a href=@string.Format("/m/{0}-bikes/{1}/", @bike.Make.MaskingName, @bike.Model.MaskingName) title="@bikeName user review" class="block">
                        <div class="swiper-image-preview">
                            <img class="swiper-lazy" data-src="@Bikewale.Utility.Image.GetPathToShowImages(bike.OriginalImagePath, bike.HostUrl, Bikewale.Utility.ImageSize._310x174, Bikewale.Utility.QualityFactor._75)" alt="@bikeName" src="" />
                            <span class="swiper-lazy-preloader"></span>
                        </div>
                        <div class="swiper-details-block">
                            <h3 class="font12 text-black margin-bottom5 text-truncate">@bikeName</h3>
                            <p class="font12 text-slate-grey margin-bottom5">@string.Format("{0}", Model.GlobalCityName == null ? "Ex-showroom, Mumbai" : "On-Road Price, " + Model.GlobalCityName)</p>
                            <p class="font16 text-default margin-bottom5 padding-bottom10 border-divider">
                                &#x20b9;
                                <span class="text-bold">
                                    @{
                                        var priceToShow = bike.OnRoadPriceInCity > bike.ExShowroomPriceMumbai ? bike.OnRoadPriceInCity : bike.ExShowroomPriceMumbai;
                                        var formatedPrice = Bikewale.Utility.Format.FormatPrice(priceToShow.ToString());
                                    }
                                    @string.Format("{0} {1}", formatedPrice, (priceToShow == bike.ExShowroomPriceMumbai ? "onwards" : ""))
                                </span>
                            </p>
                            <a href=@string.Format("/m/{0}-bikes/{1}/reviews/", @bike.Make.MaskingName, @bike.Model.MaskingName) title="@bikeName user review">
                                <div class="rating-container">
                                    <div class="grid-4-inline rate-count-@Math.Round(bike.OverAllRating)" data-rate-bg="@Math.Round(bike.OverAllRating)">
                                        <span class="bwmsprite star-icon star-size-14"></span>
                                        <span class="rating-text-pos">@bike.OverAllRating.ToString("0.0").TrimEnd('0', '.')</span>
                                    </div>
                                    @*<span class="font12 text-light-grey inline-block">@string.Format("{0} rating{1}", bike.NumberOfRating, (bike.NumberOfRating > 1 ? "s" : ""))</span>*@
                                    @if (bike.NumberOfReviews > 0)
                                    {
                                        <div class="grid-8-inline font12 text-default review-left-divider">Read @string.Format("{0} review{1}", bike.NumberOfReviews, (bike.NumberOfReviews > 1 ? "s" : ""))</div>
                                    }
                                    <span class="bwmsprite next-grey-icon-listing"></span>
                                </div>
                            </a>
                        </div>
                    </a>
                </div>
            </div>
                                        }
    </div>
</div>