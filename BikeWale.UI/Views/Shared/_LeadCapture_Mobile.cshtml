@model Bikewale.Entities.PriceQuote.LeadCaptureEntity
@if (Model != null)
{

    <!-- Lead Capture pop up start  -->
    <div id="leadCapturePopup" class="bw-popup bwm-fullscreen-popup contact-details @((Model.IsAmp || Model.IsApp) ? "" : "hide") ">
        <div class="popup-inner-container text-center">
            <div class="bwmsprite close-btn @(Model.IsAmp ? "onlyPopup-leadCapture-close-btn" : (Model.IsApp ? "inapp-leadCapture-close-btn" : "leadCapture-close-btn")) rightfloat" @(Html.Raw(Model.IsApp ? "onclick=\"" + "Android.closeForm()" + "\"" : ""))></div>

            <div id="contactDetailsPopup">
                <p class="font18 margin-top10 margin-bottom10" data-bind="text: (dealerHeading() && dealerHeading() != '') ? dealerHeading() : 'Provide contact details'"></p>
                <p class="text-light-grey margin-bottom20" data-bind="text: (dealerDescription() && dealerDescription() != '') ? dealerDescription() : 'Dealership will get back to you with offers, EMI quotes, exchange benefits and much more!'"></p>

                <div class="personal-info-form-container">
                    @if (Model.CityId <= 0)
                    {
                        <div class="slideIn-input-box-content margin-bottom15" data-bind="css: selectedCity() ? 'selection-done' : '',click : openCityList">
                            <div id="city-select-element" class="slideIn-input-box text-left">
                                <p class="slideIn-input-label city-box-default text-left" data-bind="visible: (selectedCity() && selectedCity().cityName != ''),css : (selectedCity() && selectedCity().cityName != '') ? 'done' : '' ">City<sup>*</sup></p>
                                <p id="city-select-p" class="selected-option-box city-box-default text-truncate" data-bind="text: (selectedCity() && selectedCity().cityName != '') ? selectedCity().cityName : 'Select City'"></p>
                                <span class="boundary"></span>
                                <span class="error-text hide"></span>
                                <span class="bwmsprite grey-right-icon"></span>
                            </div>
                        </div>
                    }

                    <!-- ko if : isDealerBikes() -->
                    <div id="getLeadBike" class="form-control-box margin-bottom15">
                        <div class="input-select-box dealer-search-brand form-control-box">
                            <div class="dealer-search-brand-form font16 text-light-grey">
                                <span id="selectedbike">Select a bike<sup>*</sup></span>
                            </div>
                            <span class="bwmsprite grey-right-icon"></span>
                            <span class="boundary"></span>
                            <span class="error-text"></span>
                            <span class="position-abt progress-bar"></span>
                        </div>
                    </div>
                    <div id="brandSearchBar">
                        <div class="dealer-brand-wrapper bwm-dealer-brand-box form-control-box text-left">
                            <div class="user-input-box">
                                <span class="back-arrow-box"><span class="bwmsprite back-long-arrow-left"></span></span>
                                <input class="form-control" type="text" id="assistanceBrandInput" placeholder="Select a bike" />
                            </div>
                            <ul id="sliderBrandList" class="slider-brand-list margin-top40" data-bind="foreach: dealerBikes ">
                                <li data-bind="attr: { modelid: model.modelid, bikeName: bike, versionId: version.versionId }, text: bike, click: function (data, event) { return $root.selectedBike($data); }"></li>
                            </ul>
                        </div>
                    </div>
                    <!-- /ko -->
                    <div class="input-box form-control-box margin-bottom15">
                        <input type="text" id="getFullName" data-bind="textInput: fullName" maxlength="50">
                        <label for="getFullName">Name<sup>*</sup></label>
                        <span class="boundary"></span>
                        <span class="error-text hide"></span>
                    </div>
                    <div class="input-box input-number-box form-control-box margin-bottom15">
                        <input type="tel" maxlength="10" id="getMobile" data-bind="textInput: mobileNo">
                        <label for="getMobile">Mobile number<sup>*</sup></label>
                        <span class="input-number-prefix">+91</span>
                        <span class="boundary"></span>
                        <span class="error-text hide"></span>
                    </div>
                    <div class="input-box form-control-box margin-bottom15" data-bind="visible : emailRequired() && (mfgCampaignId() > 0)">
                        <input type="email" id="getEmailID" data-bind="textInput: emailId" maxlength="50">
                        <label for="getEmailID">Email<sup>*</sup></label>
                        <span class="boundary"></span>
                        <span class="error-text hide"></span>
                    </div>
                    <div id="getPinCode-input-box" class="input-box form-control-box margin-bottom15" data-bind="visible: pinCodeRequired()">
                        <input type="text" id="getPinCode" autocomplete="off" maxlength="6">
                        <label for="getPinCode">Pincode<sup>*</sup></label>
                        <span class="boundary"></span>
                        <span class="error-text hide"></span>
                        <ul id="errPinCodeSearch" class="ui-autocomplete ui-front ui-menu ui-widget hide">
                            <li class="ui-menu-item" tabindex="-1">
                                <span class="text-bold">Oops! No suggestions found</span><br>
                                <span class="text-light-grey font12">Search by pincode or area e.g: 400708 or airoli</span>
                            </li>
                        </ul>
                    </div>
                    <div id="getDealer-select-box" class="form-control-box margin-bottom30 full-width-select text-left position-rel" data-bind="visible: dealersRequired()">
                        <div class="dropdown-select-wrapper position-rel">
                            <span id="dealerDropdownLabel" class="font16 text-light-grey">Select dealer</span>
                            <select id="ddlMfgDealers" data-title="Select dealer" class="dropdown-select"></select>
                            <span class="boundary"></span>
                            <span class="error-text hide"></span>
                        </div>
                    </div>
                    <div class="clear"></div>
                    <a class="btn btn-orange" id="user-details-submit-btn" data-bind="event: { click: submitLead }">Submit</a>
                    <p class="margin-top20 margin-bottom10 text-left">By proceeding ahead, you agree to BikeWale <span id="visitor-agreement-link" class="terms-target-link" data-link=2>visitor agreement</span> and <span id="privacy-policy-link" class="terms-target-link" data-link=1>privacy policy</span>.</p>
                </div>
            </div>
            <!-- thank you message starts here -->
            <div id="notify-response" class="hide content-inner-block-20 text-center">
                <div class="icon-outer-container rounded-corner50percent">
                    <div class="icon-inner-container rounded-corner50percent">
                        <span class="bwmsprite thankyou-icon margin-top15"></span>
                    </div>
                </div>
                <!-- ko if : !dealerMessage() -->
                <p class="font18 text-bold margin-top20 margin-bottom20">Thank you <span class="notify-leadUser"></span></p>
                <p class="font16 margin-bottom40">Thank you for providing your details. <span data-bind="text : dealerName()"></span><span data-bind="visible  : dealerArea() && dealerArea().length> 0, text: ', ' + dealerArea()"></span>&nbsp; will get in touch with you soon.</p>
                <!-- /ko -->
                <!-- ko ifnot : !dealerMessage() -->
                <p class="font16 margin-bottom40" id="ko_thankyoumessage" data-bind="html: dealerMessage()"></p>
                <!-- /ko -->
                <input type="button" id="notifyOkayBtn" class="btn btn-orange" value="Okay" @(Html.Raw(Model.IsApp ? "onclick=\"" + "Android.leadSubmit()" + "\"" : "")) />
            </div>
            <!-- thank you message ends here -->
            @if (Model.CityId <= 0)
            {
                <!-- city drawer starts here -->
                <div id="pqcity-slideIn-drawer" class="slideIn-drawer-container">
                    <div class="form-control-box text-left">
                        <div class="drawer-top-header">
                            <div>
                                <span id="close-city-filter" class="back-arrow-box inline-block" data-bind="click : closeCityList">
                                    <span class="bwmsprite back-long-arrow-left"></span>
                                </span><p class="head-label inline-block">Select city</p>
                            </div>
                            <div class="filter-input-box">
                                <div class="form-control-box">
                                    <input type="text" id="city-search-box" class="form-control padding-right40" placeholder="Type to select city" data-bind="textInput:cityFilter" autocomplete="off">
                                    <span class="bwmsprite search-icon-grey"></span>
                                </div>
                            </div>
                        </div>
                        <ul class="filter-list" id="pqpopupCityList" data-bind="template: { name: 'pqbindCityList-template', foreach: visibleCities }"></ul>
                        <script type="text/html" id="pqbindCityList-template">
                            <li data-bind="click: $parent.selectCity , attr: { 'cityId': cityId }">
                                <span data-bind="text: cityName"></span>
                            </li>
                        </script>
                    </div>
                </div>
                <!-- city drawer ends here -->
            }

        </div>
    </div>

    <div id="ub-ajax-loader">
        <div class="cover-popup-loader"></div>
    </div>

    <div id="policyPopup" class="bw-popup bwm-fullscreen-popup hide">
        <div class="popup-inner-container">
            <span class="bwmsprite close-btn policy-close-btn"></span>
            <div id="policyPopupContainer" class="policy-container">

            </div>
        </div>
    </div>

    <!-- Lead Capture pop up end  -->

    <script type="text/javascript">

        var gaLabel = "";
        var eventAction = "Lead_Submitted";
        var leadBtnBookNow, leadCapturePopup, leadBike;
        var fullName, emailid, mobile, detailsSubmitBtn;
        var prevEmail = "", prevMobile = "", prevPinCode = "";
        var leadmodelid = parseInt('@Model.ModelId'), leadcityid = parseInt('@Model.CityId'), leadareaid = parseInt('@Model.AreaId');
        var leadBikeName = '@Model.BikeName', leadLocation = '@Model.Location', CityArea = leadLocation;
        var objPinCodes = new Object(), validate, validateInputSelection;
        var brandSearchBar, dealerSearchBrand, dealerSearchBrandForm, windowScreen;
        var dropdown;
        var isBindingApplied = false;
        var fbPixelLeadEvent = "";


        function leadModel() {
            var arr = setuserDetails();
            var self = this;
            if (arr != null && arr.length > 0) {
                self.fullName = ko.observable(arr[0] || '');
                self.emailId = ko.observable((arr[1] && arr[1] != 'undefined') ? arr[1] : '');
                self.mobileNo = ko.observable(arr[2] || '');
            }
            else {
                self.fullName = ko.observable();
                self.emailId = ko.observable();
                self.mobileNo = ko.observable();
            }
            self.msg = "";
            self.pincode = ko.observable();
            self.IsVerified = ko.observable(false);
            self.pqId = ko.observable(0);
            self.dealerId = ko.observable();
            self.modelId = ko.observable(leadmodelid);
            self.versionId = ko.observable();
            self.cityId = ko.observable(leadcityid);
            self.areaId = ko.observable(leadareaid);
            self.dealerName = ko.observable();
            self.leadSourceId = ko.observable();
            self.dealerArea = ko.observable();
            self.pqSourceId = ko.observable();
            self.pageUrl = window.location.href;
            self.clientIP = "";
            self.cityFilter = ko.observable("");
            self.isRegisterPQ = ko.observable(false);
            self.isDealerBikes = ko.observable(false);
            self.dealerBikes = ko.observableArray([]);
            self.selectedBike = ko.observable();
            self.campaignId = ko.observable();
            self.mfgCampaignId = ko.observable();
            self.GAObject = ko.observable();
            self.dealerHeading = ko.observable();
            self.dealerMessage = ko.observable();
            self.dealerDescription = ko.observable();
            self.cityRequired = ko.observable(leadcityid <= 0);
            self.pinCodeRequired = ko.observable();
            self.emailRequired = ko.observable();
            self.dealersRequired = ko.observable();
            self.dealerCityName = ko.observable();
            self.dealerAreaName = ko.observable();
            self.eventCategory = ko.observable();
            self.cities = ko.observableArray();
            self.selectedCity = ko.observable();
            self.ko_DealerName = ko.observable();
            @if (Model.CityId <= 0)
            {
                        <text>
            self.FilterData = function (data, filter) {
                filterObj = data;
                if (filter && filter.length > 1) {
                    var pat = new RegExp(filter, "i");
                    filterObj = data.filter(function (place) {
                        if (pat.test(place.cityName)) return place;
                    });

                }
                return filterObj;
            };

            self.visibleCities = ko.computed(function () {
                return self.FilterData(self.cities(), self.cityFilter());
            });

            self.openCityList = function () {
                var cityListContainer = $('#pqcity-slideIn-drawer');
                cityListContainer.show('slide', { direction: 'right' }, 500, function () {
                    cityListContainer.addClass('fix-header-input');
                });

                if ($(document).height() > $(window).height()) {
                    var windowScrollTop = windowScreen.htmlElement.scrollTop() ? windowScreen.htmlElement.scrollTop() : windowScreen.bodyElement.scrollTop();
                    if (windowScrollTop < 0) {
                        windowScrollTop = 0;
                    }
                    windowScreen.htmlElement.addClass('lock-browser-scroll').css('top', -windowScrollTop);
                }
            };

            self.closeCityList = function () {
                var cityListContainer = $('#pqcity-slideIn-drawer');
                cityListContainer.hide('slide', { direction: 'right' }, 500, function () { });
                cityListContainer.removeClass('fix-header-input');
                windowScreen.unlock();
            };

            self.getModelCities = function (d, e) {
                if (self.modelId() > 0 && self.cityRequired()) {
                    var eleCities = $("#getLeadCity");
                    $.ajax({
                        type: "GET",
                        url: "/api/PQCityList/?modelId=" + self.modelId(),
                        dataType: 'json',
                        success: function (response) {
                            var cities = response.cities;
                            var citySelected = null;
                            if (cities) {
                                self.cities(cities);
                            }
                            else {
                                self.cities([]);
                            }
                            eleCities.trigger("chosen:updated");
                            $(this).parent().removeClass('done');
                        }
                    });
                }
            };

            self.selectCity = function (d, e) {
                self.selectedCity(d);
                if (self.selectedCity() && self.selectedCity().cityId > 0) {
                    self.cityId(self.selectedCity().cityId);

                    if (self.dealersRequired()) {
                        self.getDealersList(self.dealerId());
                    }

                    self.isRegisterPQ(true);
                }
                self.closeCityList();
                self.validateCity();
            };
            </text>
            }

            self.setOptions = function (options) {
                if (options != null) {
                    if (options.eventcategory != null)
                        self.eventCategory(options.eventcategory);

                    if (options.dealercityname != null)
                        self.dealerCityName(options.dealercityname);

                    if (options.dealerareaname != null)
                        self.dealerAreaName(options.dealerareaname);

                    if (options.dealerid != null)
                        self.dealerId(options.dealerid);

                    if (options.dealername != null)
                        self.dealerName(options.dealername);

                    if (options.dealerarea != null)
                        self.dealerArea(options.dealerarea);

                    if (options.versionid != null)
                        self.versionId(options.versionid);

                    if (options.leadsourceid != null)
                        self.leadSourceId(options.leadsourceid);

                    if (options.pqsourceid != null)
                        self.pqSourceId(options.pqsourceid);

                    if (options.isregisterpq != null)
                        self.isRegisterPQ(options.isregisterpq);

                    if (options.campid != null)
                        self.campaignId(options.campid);

                    if (options.mfgCampid != null) {
                        self.mfgCampaignId(options.mfgCampid);
                    }

                    if (options.isdealerbikes != null && options.isdealerbikes) {
                        self.isDealerBikes(options.isdealerbikes);
                        self.getDealerBikes();
                    }
                    if (options.dealerHeading != null && options.dealerHeading != "")
                        self.dealerHeading(options.dealerHeading);

                    if (options.dealerMessage != null && options.dealerMessage != "")
                        self.dealerMessage(options.dealerMessage);

                    if (options.dealerDescription != null && options.dealerDescription != "")
                        self.dealerDescription(options.dealerDescription);

                    if (options.pinCodeRequired != null)
                        self.pinCodeRequired(options.pinCodeRequired != 'True' ? false : true);

                    if (options.emailRequired != null)
                        self.emailRequired(options.emailRequired != 'True' ? false : true);

                    if (options.dealersRequired != null) {
                        self.dealersRequired(options.dealersRequired != 'True' ? false : true);
                        if (self.cityId() && self.dealersRequired()) {
                            self.getDealersList(self.dealerId());
                        }
                    }

                    if (self.cityRequired()) {
                        self.getModelCities();
                    }

                    if (options.pageurl != null)
                        self.pageUrl = options.pageurl;

                    if (options.clientip != null)
                        self.clientIP = options.clientip;

                    if (options.pqid != null && options.pqid)
                        self.pqId(options.pqid);

                    if (options.gaobject != null)
                        self.GAObject(options.gaobject);
                }
            };

            self.getDealerBikes = function (data, event) {

                if (!isNaN(self.dealerId()) && self.dealerId() > 0 && self.campaignId() > 0) {
                    var dealerKey = "dealerDetails_" + self.dealerId() + "_camp_" + self.campaignId();
                    var dealerInfo = lscache.get(dealerKey);

                    if (!dealerInfo) {

                        startLoading(leadBike);
                        leadBike.find(".btnSpinner").show();

                        $.ajax({
                            type: "GET",
                            url: "/api/DealerBikes/?dealerId=" + self.dealerId() + "&campaignId=" + self.campaignId(),
                            contentType: "application/json",
                            dataType: 'json',
                            beforeSend: function (xhr) {
                                self.showLoader();
                                xhr.setRequestHeader('utma', getCookie('__utma'));
                                xhr.setRequestHeader('utmz', getCookie('_bwutmz'));
                            },
                            success: function (response) {
                                lscache.set(dealerKey, response, 30);
                                obj = ko.toJS(response);
                                self.dealerBikes([]);
                                self.dealerBikes(obj.dealerBikes);
                            },
                            complete: function (xhr) {
                                self.hideLoader();
                                if (xhr.status == 204 || xhr.status == 404) {
                                    lscache.set(dealerKey, null, 30);
                                }

                                stopLoading(leadBike);
                                leadBike.find(".btnSpinner").hide();
                            }
                        });
                    }
                    else {
                        obj = ko.toJS(dealerInfo);
                        self.dealerBikes([]);
                        self.dealerBikes(obj.dealerBikes);
                    }
                }
            };

            self.getDealersList = function () {
                $.ajax({
                    type: "GET",
                    url: "/api/ManufacturerCampaign/city/" + self.cityId() + "/dealer/" + self.dealerId() + "/",
                    contentType: "application/json",
                    dataType: 'json',
                    complete: function (xhr, ajaxOptions, thrownError) {
                        if (xhr.status != 200){
                            $("#ddlMfgDealers").html('');
                            $("#ddlMfgDealers").append("<option value selected>No dealer present</option>");
                            $("#getDealer-select-box").find(".dropdown-menu").remove();
                            dropdown.setMenu($("#ddlMfgDealers"));
                        }
                    },
                    success: function (response) {
                        $("#dealerDropdownLabel").hide();

                        var obj = ko.toJS(response);
                        var count = obj.length;
                        if (count >= 1) {
                            if (count == 1) {
                                $("#ddlMfgDealers").html('');
                                $("#ddlMfgDealers").append("<option value='0' data-id='" + obj[0].id + "' >" + obj[0].dealerName + "</option>");
                                $("#ddlMfgDealers").val('0');
                                $("#ddlMfgDealers").closest('.select-box').addClass('done');
                            } else {
                                $("#ddlMfgDealers").html('');
                                $("#ddlMfgDealers").append("<option value selected>Select dealer</option>");
                                for (i = 0; i < count; i++) {
                                    var dt = obj[i];
                                    var areaName = '';
                                    if (dt.area != null) {
                                        areaName = ", " + dt.area;
                                    }
                                    $("#ddlMfgDealers").append("<option value=" + (i + 1) + " data-id='" + dt.id + "'  >" + dt.dealerName + areaName + "</option>");
                                }
                            }
                        }
                        $("#getDealer-select-box").find(".dropdown-menu").remove();
                        dropdown.setMenu($("#ddlMfgDealers"));
                    },
                });
            };

            self.generatePQ = function (data, event) {

                isSuccess = false;
                isValidDetails = false;

                isValidDetails = self.validateUserInfo(fullName, emailid, mobile);

                if (self.isDealerBikes()) {
                    var bike = self.selectedBike();
                    if (bike && bike.version && bike.model) {
                        self.versionId(bike.version.versionId);
                        self.modelId(bike.model.modelId);
                    }
                    else {
                        self.versionId(0);
                        self.modelId(0);
                    }
                }

                if (isValidDetails && self.modelId() && self.versionId()) {

                    var objData = {
                        "dealerId": self.dealerId(),
                        "modelId": self.modelId(),
                        "versionId": self.versionId(),
                        "cityId": self.cityId(),
                        "areaId": self.areaId(),
                        "clientIP": self.clientIP,
                        "pageUrl": self.pageUrl,
                        "sourceType": @Model.PlatformId,
                        "pQLeadId": self.pqSourceId(),
                        "deviceId": getCookie('BWC')
                    };
                    return self.registerPQ(objData);

                }
                return isSuccess;

            };

            self.registerPQ = function (objPQData) {
                var isSuccess = false;
                if (objPQData) {
                    var url = '/api/RegisterPQ/';
                    $.ajax({
                        type: "POST",
                        url: url,
                        async: false,
                        data: ko.toJSON(objPQData),
                        contentType: "application/json",
                        dataType: 'json',
                        beforeSend: function (xhr) {
                            self.showLoader();
                        },
                        success: function (response) {
                            self.pqId(response.quoteId);
                            isSuccess = true;
                        },
                        complete: function (xhr) {
                            self.hideLoader();
                            if (xhr.status != 200) {
                                self.IsVerified(false);
                                isSuccess = false;
                                stopLoading($("#user-details-submit-btn").parent());
                            }

                        }
                    });
                }

                return isSuccess;
            };

            self.pushToGA = function (data, event) {

                if (data != null && data.act != null) {
                    if (data.lab == "lead_label") {
                        data.lab = self.selectedBike().make.makeName + '_' + self.selectedBike().model.modelName + '_' + CityArea;
                    }
                    triggerGA(data.cat, data.act, data.lab)
                }
            };

            self.verifyCustomer = function (data, event) {

                if (self.isRegisterPQ())
                    self.generatePQ(data, event);

                if (self.pqId() && self.dealerId()) {
                    var objCust = {
                        "dealerId": self.dealerId(),
                        "pqId": self.pqId(),
                        "versionId": self.versionId(),
                        "cityId": self.cityId(),
                        "customerName": self.fullName(),
                        "customerMobile": self.mobileNo(),
                        "customerEmail": self.emailId(),
                        "clientIP": clientIP,
                        "PageUrl": pageUrl,
                        "leadSourceId": self.leadSourceId(),
                        "deviceId": getCookie('BWC')
                    };
                    $.ajax({
                        type: "POST",
                        url: "/api/PQCustomerDetail/",
                        data: ko.toJSON(objCust),
                        beforeSend: function (xhr) {
                            self.showLoader();
                            xhr.setRequestHeader('utma', getCookie('__utma'));
                            xhr.setRequestHeader('utmz', getCookie('_bwutmz'));
                        },
                        async: false,
                        contentType: "application/json",
                        dataType: 'json',
                        success: function (response) {
                            var obj = ko.toJS(response);
                            self.IsVerified(obj.isSuccess);
                        },
                        complete: function (xhr, ajaxOptions, thrownError) {
                            self.hideLoader();
                            if (xhr.status != 200)
                                self.IsVerified(false);
                        }
                    });
                }
            };

            self.submitLead = function (data, event) {
                try {
                    if (self.selectedBike() != null)
                        gaLabel = gaLabel = self.selectedBike().bike + "_" + self.dealerCityName() + ((self.dealerAreaName() != null) ? ("_" + self.dealerAreaName()) : "");

                    if (self.mfgCampaignId() > 0) {
                        self.submitCampaignLead(data, event);
                        self.triggerABTestGA(gaLabel);
                    }
                    else {

                        self.IsVerified(false);

                        isValidDetails = self.validateUserInfo(fullName, emailid, mobile);
                        if (self.dealerId() && isValidDetails) {
                            self.verifyCustomer();
                            $("#contactDetailsPopup").hide();
                            $("#personalInfo").hide();
                            $("#notify-response").fadeIn();
                            if (self.IsVerified()) {
                                triggerGA(self.eventCategory(), eventAction, gaLabel);
                            }
                            setPQUserCookie();
                            self.triggerABTestGA(gaLabel);
                            if(fbPixelLeadEvent)
                            {
                                fbq('track', fbPixelLeadEvent);
                            }
                        }
                    }

                    /* <![CDATA[ */
                    window.google_trackConversion({
                        google_conversion_id: 998187973,
                        google_conversion_language: "en",
                        google_conversion_format: "3",
                        google_conversion_color: "ffffff",
                        google_conversion_label: "vUR5CPXFq3EQxcf82wM",
                        google_remarketing_only: false
                    });
                    //]]>
                } catch (e) {
                    console.log(e.message);
                }
            };

            self.validateUserInfo = function () {
                var isValid = true;

                isValid &= self.validateCity();

                isValid = self.validateUserName();

                isValid &= self.validateEmailId();

                isValid &= self.validateMobileNo();

                if (self.pinCodeRequired()) {
                    isValid &= self.validatePinCode();

                }

                if (self.dealersRequired()) {
                    isValid &= self.validateDealer();
                }
                if (self.isDealerBikes())
                    isValid &= self.validateBike();
                return isValid;
            };

            self.validateDealer = function (inputName) {
                var isValid = false;
                if ($('#ddlMfgDealers').val() == "") {
                    validate.setError($('#ddlMfgDealers'), 'Please select dealer');
                }
                else {
                    isValid = true;
                    validate.setError($('#ddlMfgDealers'), '');
                }
                return isValid;
            };

            self.validateUserName = function () {
                leadUsername = fullName;
                var isValid = false;
                var regMaxLen = /^[a-zA-Z ]{1,50}$/;
                if (self.fullName() != null && self.fullName().trim() != "") {
                    nameLength = self.fullName().length;

                    if (self.fullName().indexOf('&') != -1) {
                        validate.setError(leadUsername, 'Invalid name');
                        isValid = false;
                    }
                    else if (nameLength == 0) {
                        validate.setError(leadUsername, 'Please enter your name');
                        isValid = false;
                    }
                    else if (!regMaxLen.test(self.fullName())) {
                        validate.setError(leadUsername, 'Name cannot be more than 50 characters');
                        isValid = false;
                    }
                    else if (nameLength >= 1) {
                        validate.hideError(leadUsername);
                        isValid = true;
                    }
                }
                else {
                    validate.setError(leadUsername, 'Please enter your name');
                    isValid = false;
                }
                return isValid;
            };

            self.validateEmailId = function () {
                var regMaxLen = /^[A-z0-9._+-@@]{1,50}$/;
                leadEmailId = emailid;
                var isValid = true,
                    emailVal = leadEmailId.val(),
                    reEmail = /^[A-z0-9._+-]+@@[A-z0-9.-]+\.[A-z]{2,6}$/;
                if (self.emailRequired() && emailVal == "") {
                    validate.setError(leadEmailId, 'Please enter email id');
                    isValid = false;
                }
                else if (emailVal == "") {
                    isValid = true;
                }
                else if (!reEmail.test(emailVal)) {
                    validate.setError(leadEmailId, 'Invalid Email');
                    isValid = false;
                }
                else if (!regMaxLen.test(emailVal)) {
                    validate.setError(leadEmailId, 'Email cannot be more than 50 characters');
                    isValid = false;
                }
                return isValid;
            };


            self.validatePinCode = function () {
                var leadPinCode = $('#getPinCode'), isValid = true,
                    pinCodeValue = leadPinCode.val().trim(),
                    rePinCode = /^[1-9][0-9]{5}$/;

                if (pinCodeValue.indexOf(',') > 0)
                    pinCodeValue = pinCodeValue.substring(0, 6);

                if (pinCodeValue == "") {
                    validate.setError(leadPinCode, 'Please enter pincode');
                    isValid = false;
                }
                else if (!rePinCode.test(pinCodeValue)) {
                    validate.setError(leadPinCode, 'Invalid pincode');
                    isValid = false;
                }

                if (isValid) isValid &= self.checkPinCode(pinCodeValue);

                return isValid;
            };
            self.validateMobileNo = function () {
                leadMobileNo = mobile;
                var mobileVal = leadMobileNo.val();
                if (!validateMobileNo(mobileVal, self)) {
                    validate.setError(leadMobileNo, self.msg);
                    return false;
                }
                else {
                    validate.hideError(leadMobileNo);
                    return true;
                }
            };

            self.validateCity = function () {
                var isValid = true;
                eleCity = $("#city-select-element").find(".city-box-default");
                if (eleCity != null && self.cityId() != null) {
                    if (self.cityId() > 0) {
                        validateInputSelection.hideError(eleCity);
                        isValid = true;
                    }
                    else {
                        validateInputSelection.setError(eleCity, 'Select a city');
                        isValid = false;
                    }
                }
                else {
                    validateInputSelection.setError(eleCity, 'Select a city');
                    isValid = false;
                }

                return isValid;
            };

            self.validateBike = function () {
                var isValid = true;
                eleBike = $("#getLeadBike").find(".dealer-search-brand-form");
                if (eleBike != null && self.selectedBike() != null) {
                    if (self.selectedBike().model && self.selectedBike().model.modelId > 0) {
                        validateInputSelection.hideError(eleBike);
                        isValid = true;
                    }
                    else {
                        validateInputSelection.setError(eleBike, 'Select a bike');
                        isValid = false;
                    }
                }
                else {
                    validateInputSelection.setError(eleBike, 'Select a bike');
                    isValid = false;
                }

                return isValid;
            };

            self.submitCampaignLead = function (data, event) {

                var isValidCustomer = self.validateUserInfo(fullName, emailid, mobile);

                if (isValidCustomer && self.mfgCampaignId() > 0) {

                    if (!(self.pqId() && self.pqId() != "0"))
                        self.generatePQ(data, event);
                    self.ko_DealerName($('#ddlMfgDealers option:selected').text());
                    $('#processing').show();
                    var objCust = {
                        "dealerId": self.dealerId(),
                        "pqId": self.pqId(),
                        "name": self.fullName(),
                        "mobile": self.mobileNo(),
                        "email": self.emailId(),
                        "versionId": self.versionId(),
                        "cityId": self.cityId(),
                        "leadSourceId": self.leadSourceId(),
                        "pinCode": self.pincode() || 0,
                        "deviceId": getCookie('BWC'),
                        "campaignId": self.mfgCampaignId(),
                        "manufacturerDealerId": $('#ddlMfgDealers :selected').data('id'),
                        "manufacturerDealer": self.ko_DealerName()
                    };
                    $.ajax({
                        type: "POST",
                        url: "/api/ManufacturerLead/",
                        data: ko.toJSON(objCust),
                        beforeSend: function (xhr) {
                            self.showLoader();
                            xhr.setRequestHeader('utma', getCookie('__utma'));
                            xhr.setRequestHeader('utmz', getCookie('_bwutmz'));
                        },
                        async: false,
                        contentType: "application/json",
                        dataType: 'json',
                        success: function (response) {
                            $("#personalInfo,#otpPopup").hide();
                            $('#processing').hide();

                            $("#contactDetailsPopup").hide();
                            $('#notify-response .notify-leadUser').text(self.fullName());
                            $('#notify-response').show();
                            if (self.cityRequired() && self.selectedCity()) {
                                SetCookieInDays("location", self.selectedCity().cityId + "_" + self.selectedCity().cityName, 365);
                            }
                            if(fbPixelLeadEvent)
                            {
                                fbq('track', fbPixelLeadEvent);
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            $('#processing').hide();
                            $("#contactDetailsPopup, #otpPopup").hide();
                        },
                        complete: function (xhr, ajaxOptions, thrownError) {
                            self.hideLoader();
                            if (self.dealerMessage && !isBindingApplied) {
                                ko.applyBindings(self, $('#ko_thankyoumessage div.html_ko')[0]);
                                isBindingApplied = true;
                            }
                        }
                    });

                    setPQUserCookie();
                }
            };

            self.setPinCodeSuggestion = function () {

                $.fn.hint = bwHint;
                $.fn.bw_autocomplete = bwAutoComplete;

                $("#getPinCode").bw_autocomplete({
                    source: 4,
                    recordCount: 3,
                    minLength: 2,
                    onClear: function () {
                        objPinCodes = new Object();
                    },
                    click: function (event, ui, orgTxt) {
                        if (self.selectedBike() && self.selectedBike().make && self.selectedBike().model) {
                            var keywrd = self.selectedBike().make.makeName + '_' + self.selectedBike().model.modelName + '_pinCode_' + $('#getPinCode').val();
                            dataLayer.push({ 'event': 'Bikewale_all', 'cat': 'LeadCapture_Popup', 'act': 'PinCode_Selected', 'lab': keywrd });
                        }
                        if (ui && ui.item) {
                            self.pincode(ui.item.payload.pinCode);
                        }
                        else {
                            self.pincode(0);
                        }

                    },
                    open: function (result) {
                        objPinCodes.result = result;
                    },
                    focusout: function () {
                        if ($('#getPinCode').find('li.ui-state-focus a:visible').text() != "") {
                            $('#errPinCodeSearch').hide();
                            focusedMakeModel = new Object();
                            focusedMakeModel = objPinCodes.result ? objPinCodes.result[$('li.ui-state-focus').index()] : null;
                        }
                        else {
                            $('#errPinCodeSearch').hide();
                        }
                    },
                    afterfetch: function (result, searchtext) {
                        if (result != undefined && result.length > 0 && searchtext.trim() != "") {
                            $('#errPinCodeSearch').hide();
                        }
                        else {
                            focusedMakeModel = null;
                            if (searchtext.trim() != "") {
                                $('#errPinCodeSearch').show();
                                self.pincode(0);
                            }
                        }
                    },
                    keyup: function () {
                        if ($('#getPinCode').val().trim() != '' && $('li.ui-state-focus a:visible').text() != "") {
                            focusedMakeModel = new Object();
                            focusedMakeModel = objPinCodes.result ? objPinCodes.result[$('li.ui-state-focus').index()] : null;
                            $('#errPinCodeSearch').hide();
                        } else {
                            if ($('#getPinCode').val().trim() == '') {
                                $('#errPinCodeSearch').hide();
                            }
                        }

                        if ($('#getPinCode').val().trim() == '' || e.keyCode == 27 || e.keyCode == 13) {
                            if (focusedMakeModel == null || focusedMakeModel == undefined) {
                                if ($('#getPinCode').val().trim() != '') {
                                    $('#errPinCodeSearch').show();
                                    self.pincode(0);
                                }
                            }
                            else {
                                $('#errPinCodeSearch').hide();
                            }

                        }
                    }
                }).autocomplete({ appendTo: $("#getPinCode").closest(".input-box") }).autocomplete("widget").addClass("pincode-autocomplete");
            };

            self.checkPinCode = function (pinCode) {
                isValid = false;
                $.ajax({
                    async: false,
                    type: "GET",
                    url: "/api/autosuggest/?source=4&inputText=" + pinCode + "&noofrecords=5",
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        if (data && data.suggestionList.length > 0) {
                            $('#getPinCode').val(data.suggestionList[0].text);
                            self.pincode(data.suggestionList[0].payload.pinCodeId);
                            isValid = true;
                        }
                        else {
                            validate.setError($('#getPinCode'), 'Invalid pincode');
                            self.pincode(0);
                            isValid = false;
                        }
                    }
                });

                return isValid;
            };

            self.setInputValues = function () {
                var inputBoxes = $('.personal-info-form-container .input-box');
                for (var i = 0; i < inputBoxes.length; i++) {
                    var item = $(inputBoxes[i]),
                    inputValue = item.find('input').val();

                    if (inputValue.length > 0) {
                        item.addClass('not-empty');
                    }

                }
            };

            self.showLoader = function () {
                $('#ub-ajax-loader').show();
            };

            self.hideLoader = function () {
                $('#ub-ajax-loader').hide();
            };

            self.triggerABTestGA = function (galabel) {
                try {
                    var abuser = getCookie("_bwtest"), pgSource = (gaObj ? gaObj.id : 0);
                    triggerGA("Lead_PopUP", "Lead_Success", abuser + "_" + pgSource + "_" + galabel || '');
                }
                catch (e) {
                    console.log(e.message)
                }
            };

        }

        function setuserDetails() {
            var cookieName = "_PQUser";
            if (cookieName != undefined && cookieName != null && cookieName != "" && cookieName != "-1") {
                var keyValue = document.cookie.match('(^|;) ?' + cookieName + '=([^;]*)(;|$)');
                var arr = keyValue ? keyValue[2].split("&") : null;
                return arr;
            }
        }

        function setPQUserCookie() {
            var val = dleadvm.fullName() + '&' + dleadvm.emailId() + '&' + dleadvm.mobileNo();
            SetCookie("_PQUser", val);
        }

        var setError = function (element, msg) {
            element.addClass("border-red").siblings("span.errorIcon, div.errorText").show();
            element.siblings("div.errorText").text(msg);
        };

        var hideError = function (element) {
            element.removeClass("border-red").siblings("span.errorIcon, div.errorText").hide();
        };

        function startLoading(ele) {
            try {
                var _self = $(ele).find(".progress-bar").css({ 'width': '0' }).show();
                _self.animate({ width: '100%' }, 500);
            }
            catch (e) { return };
        }

        function stopLoading(ele) {
            try {
                var _self = $(ele).find(".progress-bar");
                _self.stop(true, true).css({ 'width': '100%' }).fadeOut(1000);
            }
            catch (e) { return };
        }

        function setSelectedElement(_self, selectedElement) {
            _self.parent().prev("input[type='text']").val(selectedElement);
            $("#brandSearchBar").addClass('open').animate({ 'left': '100%' }, 500);
        };

        var agreementPolicyPopup = (function () {
            var policyPopup, closebtn, leadCapturePopup, container;

            function _setSelectors() {
                policyPopup = $('#policyPopup');
                closebtn = $('.policy-close-btn');
                leadCapturePopup = $('#leadCapturePopup');
                container = $('.policy-container');
            }

            function registerEvents() {
                _setSelectors();

                $('#visitor-agreement-link, #privacy-policy-link').on('click', function (e) {
                    e.preventDefault();
                    var containerId = $("#policyPopupContainer");
                    if ($(this).data('link') === 1) {
                        $.ajax({
                            type: "GET",
                            url: "/Privacy/PrivacyPolicy/",
                            contentType: "application/json",
                            dataType: "html",
                            success: function (data) {
                                containerId.html(data);
                            },
                            error: function () {
                                containerId.html("Page Not Found");
                            }
                        });
                    }
                    else if ($(this).data('link') === 2) {
                        $.ajax({
                            type: "GET",
                            url: "/Privacy/VisitorAgreement/",
                            contentType: "application/json",
                            dataType: "html",
                            success: function (data) {
                                containerId.html(data);
                            },
                            error: function () {
                                containerId.html("Page Not Found");
                            }
                        });
                    }
                    agreementPolicyPopup.open();
                });

                $('.policy-close-btn').on('click', function () {
                    if (policyPopup.is(':visible')) {
                        window.history.back();
                    }
                });

                container.on('scroll', function () {
                    if (container.scrollTop() == 0) {
                        $('.policy-container').removeClass('box-shadow-top');
                    }
                    else {
                        $('.policy-container').addClass('box-shadow-top');
                    }
                });

                $(window).on('popstate', function () {
                    if (policyPopup.is(':visible')) {
                        close();
                    }
                });
            }

            function open() {
                popup.lock();
                policyPopup.fadeIn(200);
                $('#policyPopupContainer').scrollTop(0);
                history.pushState('agreementpopup', '', '');
            }

            function close() {
                policyPopup.fadeOut(200);
                popup.unlock();
            }

            return {
                registerEvents: registerEvents,
                open: open,
                close: close
            }
        })();

        docReady(function () {


            leadBtnBookNow = $(".leadcapturebtn"), leadCapturePopup = $("#leadCapturePopup"), leadBike = $("#getLeadBike");
            fullName = $("#getFullName"), emailid = $("#getEmailID"), mobile = $("#getMobile"), detailsSubmitBtn = $("#user-details-submit-btn");
            if(FbPixelEvent)
            {
                fbPixelLeadEvent = FbPixelEvent.lead;
            }
            leadBtnBookNow.on('click', function () {
                $('#selectedbike').html('Select a bike<sup>*</sup>');
                dleadvm.selectedBike(null);
                leadCapturePopup.show();
                $("#notify-response").hide();
                $("div#contactDetailsPopup").show();
                appendState('leadCapture');
                lockPopup();
            });

            windowScreen = {
                htmlElement: $('html'),

                bodyElement: $('body'),

                lock: function () {
                    if ($(document).height() > $(window).height()) {
                        var windowScrollTop = windowScreen.htmlElement.scrollTop() ? windowScreen.htmlElement.scrollTop() : windowScreen.bodyElement.scrollTop();
                        if (windowScrollTop < 0) {
                            windowScrollTop = 0;
                        }
                        windowScreen.htmlElement.addClass('lock-browser-scroll').css('top', -windowScrollTop);
                    }
                },

                unlock: function () {
                    var windowScrollTop = parseInt(windowScreen.htmlElement.css('top'));

                    windowScreen.htmlElement.removeClass('lock-browser-scroll');
                    $('html, body').scrollTop(-windowScrollTop);
                }
            };

            $(".leadCapture-close-btn, .blackOut-window").on("click mouseup", function () {
                leadCapturePopup.hide();
                $("#notify-response").hide();
                $('body').removeClass('lock-browser-scroll');
                unlockPopup();
            });

            @if (Model.IsApp) {
                <text>
            $(".inapp-leadCapture-close-btn").on("click", function() {
                Android.closeForm();
            });
            </text>
            }


            $(document).on('click', '#notifyOkayBtn', function () {
                @if (Model.IsApp) {
                    <text>
                $(".inapp-leadCapture-close-btn").trigger("click");
                </text>
                    }
                    else
                    {
                        <text>
                $(".leadCapture-close-btn").trigger("click");
                </text>
                    }
            });

            $(document).on('keydown', function (e) {
                if (e.keyCode === 27) {
                    @if (Model.IsApp) {
                            <text>
                    leadCapturePopup.find(".inapp-leadCapture-close-btn").trigger("click");
                    </text>
                        }
                        else
                        {
                            <text>
                    leadCapturePopup.find(".leadCapture-close-btn").trigger("click");
                    </text>
                        }

                }
            });

            $("#getFullName").on("focus", function () {
                validate.onFocus($(this), leadCapturePopup);
            });

            $(document).on("focus", "#getPinCode", function () {
                validate.onFocus($(this), leadCapturePopup);
                prevPinCode = $(this).val().trim().substring(0, 6);
            });

            $("#getEmailID").on("focus", function () {
                validate.onFocus($(this), leadCapturePopup);
                prevEmail = $(this).val().trim();
            });

            $("#getMobile").on("focus", function () {
                validate.onFocus($(this), leadCapturePopup);
                prevMobile = $(this).val().trim();
            });

            $("#getFullName").on("blur", function () {
                validate.onBlur($(this));
            });

            $(document).on("blur", "#getPinCode", function () {
                validate.onBlur($(this));
                var pincode = $("#getPinCode");
                var pc = pincode.val().trim();

                if (pc.length > 0 && !(/^[1-9][0-9]{5}$/.test(pc))) {
                    validate.setError($("#getPinCode"), 'Invalid pincode');
                    if (dleadvm.validatePinCode(pincode)) {
                        dleadvm.IsVerified(false);
                        validate.hideError(pincode);
                    }
                }

            });

            $("#getEmailID").on("blur", function () {
                validate.onBlur($(this));
                if (prevEmail != $(this).val().trim()) {
                    if (dleadvm.validateEmailId($(this))) {
                        dleadvm.IsVerified(false);
                    }
                }
            });

            $("#getMobile").on("blur", function () {
                validate.onBlur($(this));
                if (prevMobile != $(this).val().trim()) {
                    if (dleadvm.validateMobileNo($(this))) {
                        dleadvm.IsVerified(false);
                    }
                }
            });

            $(document).on('click', '#templist li', function () {
                validate.setError($('#ddlMfgDealers'), '');
            });
            dleadvm = new leadModel();
            ko.applyBindings(dleadvm, document.getElementById("leadCapturePopup"));
            dleadvm.setInputValues();

            if ($("#getPinCode") && $("#getPinCode").length > 0) {
                dleadvm.setPinCodeSuggestion();
            }

            leadCapturePopup.on('click', ".dealer-search-brand", function () {
                $('.dealer-brand-wrapper').show();
                $("#brandSearchBar").addClass('open').animate({ 'left': '0px' }, 500);
                $("#brandSearchBar").find(".user-input-box").animate({ 'left': '0px' }, 500);
                $("#assistanceBrandInput").focus();
            });

            leadCapturePopup.on("click", "#sliderBrandList li", function () {
                var _self = $(this),
                selectedElement = _self.text();
                setSelectedElement(_self, selectedElement);
                _self.addClass('activeBrand').siblings().removeClass('activeBrand');
                $(".dealer-search-brand-form").addClass('selection-done').find("span").text(selectedElement);
                $("#brandSearchBar").find(".user-input-box").animate({ 'left': '100%' }, 500);
                validateInputSelection.hideError($(".dealer-search-brand-form"));
            });

            leadCapturePopup.on("click", ".dealer-brand-wrapper .back-arrow-box", function () {
                $("#brandSearchBar").removeClass("open").animate({ 'left': '100%' }, 500);
                $("#brandSearchBar").find(".user-input-box").animate({ 'left': '100%' }, 500);
            });

            /* form validation */
            validate = {
                setError: function (element, message) {
                    var elementLength = element.val().length,
                        errorTag = element.siblings('span.error-text');

                    errorTag.show().text(message);
                    if (!elementLength) {
                        element.closest('.input-box').removeClass('not-empty').addClass('invalid');
                    }
                    else {
                        element.closest('.input-box').addClass('not-empty invalid');
                    }
                },

                hideError: function (element) {
                    element.closest('.input-box').removeClass('invalid').addClass('not-empty');
                    element.siblings('span.error-text').text('').hide();
                },

                onFocus: function (inputField, popupContainer) {
                    var inputBox = inputField.closest('.input-box');

                    if (inputBox.hasClass('invalid')) {
                        validate.hideError(inputField);
                    }

                    popupContainer.animate({ scrollTop: inputBox.offset().top - 20 });
                },

                onBlur: function (inputField) {
                    var inputLength = inputField.val().length;
                    if (!inputLength) {
                        inputField.closest('.input-box').removeClass('not-empty');
                    }
                    else {
                        inputField.closest('.input-box').addClass('not-empty');
                    }
                }
            };

            validateInputSelection = {
                setError: function (element, message) {
                    var errorTag = element.siblings('span.error-text');
                    element.closest('.input-select-box,.slideIn-input-box').addClass('invalid');
                    errorTag.text(message).show();
                },

                hideError: function (element) {
                    element.closest('.input-select-box,.slideIn-input-box').removeClass('invalid');
                    element.siblings('span.error-text').text('').hide();
                }
            };

            brandSearchBar = $("#brandSearchBar"), dealerSearchBrand = $(".dealer-search-brand"), dealerSearchBrandForm = $(".dealer-search-brand-form");

            // register agreement and privacy policy popup events
            agreementPolicyPopup.registerEvents();

        });


    </script>

    if (Model.CityId <= 0)
    {
        <link href="@String.Format("{0}/m/css/leadcapture.css?{1}",Bikewale.Utility.BWConfiguration.Instance.StaticUrl,Bikewale.Utility.BWConfiguration.Instance.StaticFileVersion)" rel="stylesheet" type="text/css" />
    }



}