@model Bikewale.Models.QuestionAndAnswers.ModelQuestionsAnswersVM
@using Bikewale.Utility;

@{
    Model.Page_ATF_CSS = "<link rel='stylesheet' type='text/css' href='/sass/partials/question-answer.css' inline/> <link rel='stylesheet' type='text/css' href='/sass/partials/question-answer-popup.css' inline/>";
    Model.Page_JS_Paths = new string[] { "/m/src/qna/landing.js", "/src/question-and-answer.js", "/src/utils/readMore.js" };
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_Mobile.cshtml";
    string makeName = null;
    string modelName = null;
}


@if (Model != null)
{
    <div id="questionAnswerWrapper" data-id="questionAnswerWrapper" class="question-answer-wrapper question-answer-wrapper--screen">
        @if (Model.MakeModelBase != null && Model.MakeModelBase.Make != null && Model.MakeModelBase.Model != null)
        {
             makeName = Model.MakeModelBase.Make.MakeName;
             modelName = Model.MakeModelBase.Model.ModelName;
            <h1>
                @string.Format("{0} {1} - Questions and Answers", makeName, modelName)
            </h1>
        }
        <div class="question-answer-wrapper__image"></div>
        <div class="question-answer-wrapper__container" id="questionAnswerList">
            <div class="question-answer-wrapper__content">
                @if (Model.QuestionAnswerWrapper != null && Model.QuestionAnswerWrapper.QuestionList != null)
                {
                    <ul class="question-answer-wrapper__block">
                        @foreach (var quesAnswer in Model.QuestionAnswerWrapper.QuestionList)
                        {
                           
                                <li class="question-answer-wrapper__list-item">
                                    @{
                                        var quesObj = quesAnswer.Question;
                                            <p class="question-answer-wrapper__question">
                                                @string.Format("Q: {0}", quesObj.Text)
                                            </p>
                                            if (quesObj.AskedBy != null && quesObj.AskedBy.CustomerName != null)
                                            {
                                                <p class="question-answer-wrapper__author">@string.Format("{0} ago by {1}", FormatDate.GetTimeSpan(quesObj.AskedOn), quesObj.AskedBy.CustomerName.Truncate(25)) </p>
                                            }

                                    }


                                    @{
                                        var ansObj = quesAnswer.Answer;
                                            <p class="question-answer-wrapper__answer-box">
                                                <span class="question-answer-wrapper__starting-letter">A: </span>
                                                @if (!string.IsNullOrEmpty(ansObj.StrippedText))
                                                {
                                                    <span class="question-answer-wrapper__ans-trim-content">
                                                        @string.Format("{0} ...", ansObj.StrippedText)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="question-answer-wrapper__ans-trim-content">
                                                        @string.Format("{0} ", ansObj.Text)
                                                    </span>
                                                }
                                                <span class="question-answer-wrapper__ans-full-content ">
                                                    @string.Format("{0} ", ansObj.Text)
                                                </span>
                                                @if (!string.IsNullOrEmpty(ansObj.StrippedText))
                                                {
                                                    <span class="question-answer-wrapper__read-more">Read More</span>
                                                }
                                            </p>
                                        if (ansObj.AnsweredBy != null && !string.IsNullOrEmpty(ansObj.AnsweredBy.CustomerName))
                                        {
                                            <p class="question-answer-wrapper__author">@string.Format("{0} ago by {1}", FormatDate.GetTimeSpan(ansObj.AnsweredOn), ansObj.AnsweredBy.CustomerName.Truncate(25))</p>
                                        }


                                    }
                                </li>
                            
                        }
                    </ul>
                     <!-- ko if: otherQuestions != null -->
                    <ul data-bind="foreach: otherQuestions">
                        <li class="question-answer-wrapper__list-item" data-bind="if:$data">

                            <!-- ko if: $data.question != null &&  $data.answer != null -->
                            <p class="question-answer-wrapper__question" data-bind="text: 'Q: ' + $data.question.text ">
                            </p>

                            <p class="question-answer-wrapper__author" data-bind="text: ($data.question.questionAge) + ' ago by ' + $data.question.askedBy.customerName "> </p>
                           

                            
                            <p class="question-answer-wrapper__answer-box">
                                <span class="question-answer-wrapper__starting-letter">A: </span>
                              
                                    <span class="question-answer-wrapper__ans-trim-content" data-bind="text : $data.answer.strippedText!= '' ?  $data.answer.strippedText + '...' : $data.answer.text ">
                                    </span>
                              
                                
                                <span class="question-answer-wrapper__ans-full-content " data-bind="text: $data.answer.text ">
                                </span>
                               
                                <!-- ko if: $data.answer.strippedText != "" -->
                                <span class="question-answer-wrapper__read-more" data-bind="event : { click : function(d,e) { $parent.readMoreText(d,e); } } ">Read More</span>
                                <!-- /ko -->
                            </p>

                            <p class="question-answer-wrapper__author" data-bind="text: $data.answer.answerAge + ' ago by ' + $data.answer.answeredBy.customerName "></p>
                                
                            <!-- /ko -->
                        </li>

                    </ul>
                    <!-- /ko -->
                    <!-- ko if: (remainingQuestions() > 0) -->
    <button class="btn btn-inv-blue bw-ga" data-cat="QnA_Page" data-act="View_More_Button_Clicked" data-lab="@string.Format("{0}_{1}", makeName, modelName)" data-bind="click: bindNextQuestions">View More</button>
                    <!-- /ko -->

                    <input type="hidden" id="totalAnsweredQuestions" value="@Model.QuestionAnswerWrapper.TotalAnsweredQuestions" />
                }

            </div>
            <div class="question-answer-wrapper__cta-container">
                <p class="question-answer-wrapper__line">Didn't find what you were looking for?</p>
                <button id="askQuestionButton" class="btn btn-blue question-answer-wrapper--ask-link ask-question__link" data-platform="@((int)Model.Platform)" data-source="@((int)Bikewale.Entities.QuestionAndAnswers.Sources.Model_QuestionAnswerDedicatedPage)" data-modelid="@Model.ModelId" data-tags="@Model.Tags">Ask a Question</button>
            </div>
        </div>
    </div>
    if(Model.AskQuestionPopup != null)
    {
        @Html.Partial("~/Views/m/Shared/_question-answer.cshtml", Model.AskQuestionPopup); 
    }
    
}
