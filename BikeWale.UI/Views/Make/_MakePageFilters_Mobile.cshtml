@model Bikewale.Entities.Filters.FilterBase

@if (Model != null)
{
    string[] inputId = new string[4];
    for (int i = 0; i < 4; i++)
    {
        inputId[i] = Model.FilterType + Convert.ToString(i);
    }
    <div class="refine-result">
        <h3 class="refine-result__heading">Refine Your Results</h3>
        <p class="refine-result__instruction">Select a fuel economy range for your driving pattern</p> <!-- Ask PM -->
        <ul class="refine-result__list">
            @if (Model.Unit != null && Model.FilterType != null)
            {
                if (Model.RangeList[0] != null)
                {

                    <li class="refine-result__list-item" data-filter-type="@Model.FilterType">
                        <input type="checkbox" class="refine-result__list-checkbox" name="inpageFilter" id="@inputId[0]" data-valuetext="@string.Format("{0}-{1}", 0, Model.RangeList[0])" value="1">
                        <label class="refine-result__checkbox-label" for="@inputId[0]">
                            Less than

                            @if (Model.FilterType == "budget")
                            {
                                @Html.Raw("<span>&#x20B9;</span>") @Bikewale.Utility.Format.FormatPrice(Model.RangeList[0].ToString());
                            }
                            else
                            {
                                @Bikewale.Utility.FormatMinSpecs.ShowAvailable(@Model.RangeList[0], @Model.Unit);
                            }


                        </label>

                    </li>
                }


                if (Model.RangeList[0] != null && Model.RangeList[1] != null)
                {
                    <li class="refine-result__list-item" data-filter-type="@Model.FilterType">
                        <input type="checkbox" name="inpageFilter" class="refine-result__list-checkbox" id="@inputId[1]" data-valuetext="@string.Format("{0}-{1}", Model.RangeList[0], Model.RangeList[1])" value="2">
                        <label class="refine-result__checkbox-label" for="@inputId[1]">
                            @if (Model.FilterType == "budget")
                            {
                                @Html.Raw("<span>&#x20B9;</span>") @Bikewale.Utility.Format.FormatPrice(Model.RangeList[0].ToString()) @Html.Raw("&#8722;") @Html.Raw("<span>&#x20B9;</span>") @Bikewale.Utility.Format.FormatPrice(@Model.RangeList[1].ToString());
                            }
                            else
                            {
                                @Bikewale.Utility.FormatMinSpecs.ShowAvailable(@Model.RangeList[0], @Model.Unit) @Html.Raw("&#8722;") @Bikewale.Utility.FormatMinSpecs.ShowAvailable(@Model.RangeList[1], @Model.Unit) ;
                            }

                        </label>

                    </li>
                }


                if (Model.RangeList[1] != null && Model.RangeList[2] != null)
                {
                    <li class="refine-result__list-item" data-filter-type="@Model.FilterType">
                        <input type="checkbox" name="inpageFilter" class="refine-result__list-checkbox" id="@inputId[2]" value="3" data-valuetext="@string.Format("{0}-{1}", Model.RangeList[1], Model.RangeList[2])">
                        <label class="refine-result__checkbox-label" for="@inputId[2]">


                            @if (Model.FilterType == "budget")
                            {
                                @Html.Raw("<span>&#x20B9;</span>") @Bikewale.Utility.Format.FormatPrice(Model.RangeList[1].ToString()) @Html.Raw("&#8722;") @Html.Raw("<span>&#x20B9;</span>") @Bikewale.Utility.Format.FormatPrice(@Model.RangeList[2].ToString());
                            }
                            else
                            {
                                @Bikewale.Utility.FormatMinSpecs.ShowAvailable(@Model.RangeList[1], @Model.Unit) @Html.Raw("&#8722;") @Bikewale.Utility.FormatMinSpecs.ShowAvailable(@Model.RangeList[2], @Model.Unit) ;
                            }
                        </label>

                    </li>
                }

                if (Model.RangeList[2] != null)
                {
                    <li class="refine-result__list-item" data-filter-type="@Model.FilterType">
                        <input type="checkbox" name="inpageFilter" class="refine-result__list-checkbox" id="@inputId[3]" value="4" data-valuetext="@string.Format("{0}-{1}", Model.RangeList[2],0)">
                        <label class="refine-result__checkbox-label" for="@inputId[3]">
                            More than

                            @if (Model.FilterType == "budget")
                            {
                                @Html.Raw("<span>&#x20B9;</span>") @Bikewale.Utility.Format.FormatPrice(Model.RangeList[2].ToString());
                            }
                            else
                            {
                                @Bikewale.Utility.FormatMinSpecs.ShowAvailable(@Model.RangeList[2], @Model.Unit);
                            }
                        </label>

                    </li>
                }


            }

        </ul>

        <button type="button" id="refineResultApply" class="inv-blue--disabled btn btn-inv-blue refine-result__view-more refine-result__apply" disabled>Apply</button>
    </div>
}