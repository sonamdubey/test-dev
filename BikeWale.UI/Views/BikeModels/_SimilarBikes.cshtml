@model Bikewale.Models.SimilarBikesWidgetVM
@using Bikewale.Utility;
@foreach (var bike in Model.Bikes)
            {
                string make = bike.MakeBase.MakeName, modelName = bike.ModelBase.ModelName;

                var bikeName = String.Format("{0} {1}", make, modelName);
    <li>
        <a href="@UrlFormatter.BikePageUrl(bike.MakeBase.MaskingName,bike.ModelBase.MaskingName)" title="@bikeName" class="jcarousel-card bw-ga" data-act="Clicked_on_SimilarModel" data-lab="@bikeName">
            <div class="model-jcarousel-image-preview">
                <img class="lazy" data-original="@Image.GetPathToShowImages(bike.OriginalImagePath,bike.HostUrl,ImageSize._310x174,Bikewale.Utility.QualityFactor._75)" alt="@bikeName" src="" border="0" />
            </div>
            <div class="card-desc-block">
                <p class="bikeTitle">@bikeName</p>
                <p class="text-xt-light-grey margin-bottom10">
                    @Html.Raw(FormatMinSpecs.GetMinSpecs(Convert.ToString(bike.Displacement), Convert.ToString(bike.FuelEfficiencyOverall), Convert.ToString(bike.MaxPower), Convert.ToString(bike.KerbWeight)))
                </p>

                @if (bike.VersionPrice == 0 && bike.AvgExShowroomPrice == 0)
                {
                    <p class="text-bold text-default">
                        <span class="font14">Price not available</span>
                    </p>
                }
                else
                {
                    if (bike.VersionPrice > 0)
                    {
                        <p class="text-light-grey margin-bottom5">@string.Format("Ex-showroom, {0}", bike.CityName)</p>
                    }
                    else
                    {
                        <p>
							<span class="text-light-grey margin-bottom5 margin-right5">Avg. Ex-showroom price</span><span class="bwsprite info-icon tooltip-icon-target tooltip-top">
								<span class="bw-tooltip info-tooltip">
									<span class="bw-tooltip-text">@string.Format("Price is not available in {0}", bike.CityName)</span>
								</span>
							</span>
						</p>
                    }

                    @Html.Raw("<span class='font18 text-default'>&#x20B9;</span>")<span class="font18 text-default text-bold">&nbsp;@Bikewale.Utility.Format.FormatPrice(bike.VersionPrice > 0 ? bike.VersionPrice.ToString() : bike.AvgExShowroomPrice.ToString())</span>
                }
            </div>
        </a>
        @if (Model.ShowCheckOnRoadCTA)
        {
            <div class="margin-left20 margin-bottom20">
                <a href="javascript:void(0);" data-pqsourceid="@((int)Model.PQSourceId)" data-makename="@make" data-modelname="@modelName" data-modelid="@bike.ModelBase.ModelId" class="btn btn-grey btn-sm font14  @(bike.AvgExShowroomPrice!=0 ?"":"hide") getquotation" rel="nofollow">Check on-road price</a>
            </div>
        }
        @if (Model.ShowPriceInCityCTA)
        {
            <div class="margin-left20 margin-bottom20">
                <a href="@Bikewale.Utility.UrlFormatter.PriceInCityUrl(bike.MakeBase.MaskingName,bike.ModelBase.MaskingName,bike.CityMaskingName)" class="btn btn-white btn-truncate font14 btn-size-2" title="@String.Format("{0} {1} On-road price in {2}",make,modelName,bike.CityName)">@String.Format("On-road price in {0}", bike.CityName)</a>
            </div>
        }
        @if (Model.Make != null && Model.Model != null && Model.IsNew)
        {
            <a title="@Bikewale.Utility.UrlFormatter.CreateCompareTitle(bike.ModelBase.ModelName, Model.Model.ModelName)" href="/@Bikewale.Utility.UrlFormatter.CreateCompareUrl(Model.Make.MaskingName, Model.Model.MaskingName, bike.MakeBase.MaskingName, bike.ModelBase.MaskingName, Convert.ToString(Model.VersionId),  Convert.ToString(bike.VersionBase.VersionId), (uint)Model.Model.ModelId, (uint)bike.ModelBase.ModelId, Bikewale.Entities.Compare.CompareSources.Desktop_Model_MostPopular_Compare_Widget)" data-act="Clicked_on_CompareCard" data-lab='@string.Format("{0} {1} vs {2}", Model.Make.MakeName, Model.Model.ModelName, bikeName)' class="compare-with-target text-truncate bw-ga">
                <span class="bwsprite compare-sm"></span>Compare with @Model.Model.ModelName<span class="bwsprite next-grey-icon"></span>
            </a>
        }
    </li>
}
<li>
    <a href="@((Model.BodyStyle.Equals(Bikewale.Entities.GenericBikes.EnumBikeBodyStyles.Scooter))? "/scooters/" : "/new-bikes-in-india/")" title="@(string.Format("Explore more {0}", (Model.BodyStyle.Equals(Bikewale.Entities.GenericBikes.EnumBikeBodyStyles.Scooter))? "scooters" : "bikes"))" class="jcarousel-card bw-ga" data-cat="@Model.Page" data-act="Clicked_ExploreMore_Card" data-lab="@Model.Model.ModelName">
        <div class="model-jcarousel-image-preview">
            <div class="exploremore__imagebackground">
                <div class="exploremore__icon-background">
                </div>
            </div>
        </div>
        <div class="card-desc-block">
            <div class="exploremore-detailblock">
                <p class="detailblock__title">Couldn’t find what you were looking for?</p>
                <p class="detailblock__description">@(Model.BodyStyle.Equals(Bikewale.Entities.GenericBikes.EnumBikeBodyStyles.Scooter) ? "View 60+ scooters from over 10 brands" : " View 200+ bikes from over 30 brands")</p>
            </div>
        </div>
        @if (Model.IsNew)
        {
            <div class="compare-with-target text-truncate">
                @(string.Format("Explore more {0}", (Model.BodyStyle.Equals(Bikewale.Entities.GenericBikes.EnumBikeBodyStyles.Scooter)) ? "scooters" : "bikes"))<span class="bwsprite next-grey-icon"></span>
            </div>
        }
    </a>
</li>
