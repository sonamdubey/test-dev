@model Bikewale.Models.BikeModels.EditorialPopularBikesWidget
@using Bikewale.Utility;

@if (Model != null)
{
    var bikeList = Model.MostPopularBikeList;

    if (bikeList != null && bikeList.Any())
    {
        <ul class="sidebar-bike-list sidebar-list__popuplar-bikes">
            @foreach (var bike in bikeList)
            {
                if (bike.objMake == null || bike.objModel == null) {
                    continue;
                }
                var bikeName = string.Format("{0} {1}", bike.objMake.MakeName, bike.objModel.ModelName);
                <li>
                    <a href="@UrlFormatter.BikePageUrl(bike.objMake.MaskingName, bike.objModel.MaskingName)" title="@bikeName " class="bike-target-link" data-newlaunch="@string.Format("{0}", bike.IsAdPromoted ? 1 : 0)">
                        <div class="bike-target-image inline-block">
                            <img src="@Image.GetPathToShowImages(bike.OriginalImagePath, bike.HostURL, ImageSize._110x61, QualityFactor._70)" alt="@bikeName" />
                        </div>
                        <div class="bike-target-content inline-block padding-left10">
                            @if (bike.IsAdPromoted)
                            {
                                <span class="model-category__tag category--newlaunch">Newly Launched</span>
                            }
                            <h3>@bikeName</h3>
                            @if (bike.VersionPrice > 0)
                            {
                                <p class="font11 text-light-grey">@String.Format("Ex-showroom, {0}", !string.IsNullOrEmpty(bike.CityName) ? bike.CityName : Bikewale.Common.Configuration.GetDefaultCityName)</p>
                                @Html.Raw("<span class='font16'> &#x20B9;</span>")<span class="font16 text-bold">&nbsp;@Format.FormatPrice(Convert.ToString(bike.VersionPrice))</span>
                            }
                            else
                            {
                                <span class='font14 text-light-grey'>Price not available</span>
                            }
                        </div>
                    </a>
                    @if (Model.ShowPriceInCityCTA && bike.VersionPrice > 0)
                    {
                        <a href="@UrlFormatter.PriceInCityUrl(bike.objMake.MaskingName, bike.objModel.MaskingName, bike.CityMaskingName)" class="bike-target__price-link text-truncate" title="@String.Format("{0} {1} Price in {2}", bike.objMake.MakeName, bike.objModel.ModelName, bike.CityName)">@String.Format("Price in {0}", bike.CityName)</a>
                    }
                </li>
            }
        </ul>
    }
}
