@model Bikewale.Models.QuestionAndAnswers.ThankYouPageVM
@using Bikewale.Utility;
@{
    Model.Page_ATF_CSS = "<link rel='stylesheet' type='text/css' href='/UI/sass/partials/question-answer.css' inline/> <link rel='stylesheet' type='text/css' href='/UI/sass/partials/qna-answer.css' inline/> ";
    Model.Page_JS_Paths = new string[] { "/UI/src/utils/text-area.js", "/UI/src/question-and-answer.js" };
        ViewBag.Title = "Index";
        Layout = "~/UI/Views/Shared/_Layout_Mobile.cshtml";
    }

@if (Model != null)
{
    <section>
        <div class="qna-question-container container--height">
            <!-- for thankyou scenario replace class with thankyou-container -->
            <div class="qna-ans-head">
                <div class="lead-popup__thankyou-icon icon-container--round">
                </div>
                <p class="qna-head__title">
                    Thanks for answering the question.
                </p>
                <p class="qna-head__desc">
                    We appreciate your effort. We will display your answer once our internal team has reviewed it.
                </p>
                <button class="btn btn-blue qna__submit-btn">
                    okay
                </button>
            </div>
            <div class="qna-question__content">
                @if (Model.Questions != null && Model.Questions.Any())
                {
                    <h2 class="question-answer-wrapper__title">
                        @{
                    String bikeMessage = "";
                    if (!String.IsNullOrEmpty(Model.BikeName))
                    {
                        bikeMessage = String.Format("on {0}", Model.BikeName);
                    }
                        }
                        Answer more questions on  @Model.BikeName asked by your fellow riders
                    </h2>
                    <ul class="question-answer-wrapper__list">
                        @foreach (Bikewale.Entities.QuestionAndAnswers.QuestionUrl question in Model.Questions)
                        {
                            <li class="question-answer-wrapper__list-item">
                                <p class="question-answer-wrapper__question question-answer-wrapper__question--normal">
                                    Q: @(question.QuestionData.Text)
                                </p>
                                <a href="@(question.AnsweringUrl)" title="Answer this Question" class="qna-answer__link">Answer this Question</a>
                            </li>
                        }
                    </ul>

        

                }
                @if (!String.IsNullOrEmpty(Model.ReturnUrl))
                {
                    <div class="qna-question__btn">
                        <a class="btn btn-blue" href="@string.Format("{0}/m{1}", BWConfiguration.Instance.BwHostUrl, HttpUtility.UrlDecode(Model.ReturnUrl))">Done</a>
                    </div>
                }
            </div>

        </div>
    </section>
}
