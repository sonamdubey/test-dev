@model Bikewale.Models.QuestionAndAnswers.QuestionAnswerSectionVM

@if (Model.Questions != null)
{
<div id="questionAnswerWrapper" data-id="questionAnswerWrapper" class="question-answer-wrapper qna-wrapper--model bw-model-tabs-data">
    <h2 class="question-answer-wrapper__title">
        @(Model.BikeName) Questions and
        Answers
    </h2>
    <div class="qna-search__form-control qna-search__control--nobel js-qna-popup-link qna-search__popup bw-ga" data-popup="qnaSearchPopup" data-sourceid="@((int)Bikewale.Entities.QuestionAndAnswers.Sources.ModelPage_Questions_Answer_Section_Search)" data-cat="Model_Page" data-act="Search_Bar_Clicked" data-lab="@string.Format("{0}_{1}", Model.MakeName, Model.ModelName)">
        <div class="qna-search__input-icon search-icon--nobel"></div>
        <div class="qna-search__input">Have a question? Search here</div>
    </div>
    <div class="question-answer-wrapper__container">
        <div class="question-answer-wrapper__content">
            <ul class="question-answer-wrapper__list">
                @{var baseUrl = string.Format("{0}/m/{1}-bikes/{2}/questions-and-answers", Bikewale.Utility.BWConfiguration.Instance.BwHostUrl, Model.MakeMasking, Model.ModelMasking);}
                @foreach (Bikewale.Entities.QuestionAndAnswers.QuestionAnswer question in Model.Questions)
                {
                    
                    
                    <li class="question-answer-wrapper__list-item">
                        <p class="question-answer-wrapper__question">
                            <a title="@question.Question.Text" href="@string.Format("{0}/{1}", baseUrl,question.Url)" class="text-black">
                                @string.Format("Q: {0}", question.Question.Text)
                            </a>
                        </p>

                        
                    @{
                        if (question.Answer != null)
                        {
                            string answerText = question.Answer.Text;
                            string smallDescription = answerText;
                            bool showReadMore = false;
                            if (answerText.Length > 150)
                            {
                                smallDescription = Bikewale.Utility.StringExtention.StringHelper.Truncate(answerText, 150) + "...";
                                showReadMore = true;
                            }
                        <p class="question-answer-wrapper__answer-box">

                            <span class="question-answer-wrapper__starting-letter">A: </span>
                            <span class="question-answer-wrapper__ans-trim-content">@(smallDescription)</span>
                            <span class="question-answer-wrapper__ans-full-content ">
                                @(answerText)
                            </span>
                            @if (showReadMore)
                            {
                                <span class="question-answer-wrapper__read-more">Read More</span>
                            }
                        </p>
                        <p class="question-answer-wrapper__author">@string.Format("{0} by {1}", Bikewale.Utility.FormatDate.GetDaysAgo(question.Answer.AnsweredOn), Bikewale.Utility.StringExtention.StringHelper.Truncate(question.Answer.AnsweredBy.CustomerName, 25))</p>
                        }
                        if (question.AnswerCount > 1)
                        {
                            <a class="question-answer-wrapper__answers-link" href="@string.Format("{0}/{1}", baseUrl,question.Url)">
                                Read @(question.AnswerCount-1) More @(question.AnswerCount > 2 ? Html.Raw("Answers") : Html.Raw("Answer"))</a>
                        }
}

                    </li>
                }
            </ul>
            @if (Model.QACount > 3)
            {
                <a title="@(Model.BikeName) Questions and Answers" href="@(Model.ViewAllURL)" class="bw-ga btn question-answer-wrapper__view-question-btn" data-cat="@Model.GAPageType" data-act="View_All_Button_Clicked" data-lab="@String.Format("{0}_{1}", Model.MakeName, Model.ModelName)">
                	Read All @(Model.QACount) Q&As
                </a>
            }
        </div>
        <div class="question-answer-wrapper__cta-container">
            <p class="question-answer-wrapper__line">Didn't find what you were looking for?</p>
            <button class="btn btn-blue question-answer-wrapper--ask-link ask-question__link" data-sourceid="@((int)Bikewale.Entities.QuestionAndAnswers.Sources.ModelPage_Question_Answer_Section)">Ask a Question</button>
        </div>
    </div>
</div>
}
