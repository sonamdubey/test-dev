@model Bikewale.Models.BikeModels.ModelPageVM
@using Bikewale.Utility;

@if (!Model.ModelPageEntity.ModelDetails.Futuristic)
{

    <div class="grid-12 version-city__content dropdown-box" id="ddlNewVersionList" data-pageurl="@(string.Format("/m{0}",Bikewale.Utility.UrlFormatter.BikePageUrl(Model.ModelPageEntity.ModelDetails.MakeBase.MaskingName,Model.ModelPageEntity.ModelDetails.MaskingName)))" data-selected-version="Model.VersionId">
        <div class="grid-6 version-city-content__tab dropdown-box__menu-tab">
            <p class="dropdown-box__menu-title">Version</p>
            <span id="defversion" class="dropdown-box__menu-value">@(Model.SelectedVersion != null ? Model.SelectedVersion.VersionName : Model.VersionName)</span>
        </div>
        <div class="grid-6 version-city-content__tab">
            <p class="font12 text-light-grey">Location:</p>
            @if (!Model.IsDiscontinuedBike)
            {       
                <div class="font14 text-bold">
                    <a href="javascript:void(0)" data-cat="Model_Page" data-act="City_Change_Svg_Initiated" data-lab="@Model.BikeName" data-reload="true" data-persistent=" true" data-modelid='@Model.ModelId' data-pqsourceid="@Convert.ToUInt16(Bikewale.Entities.PriceQuote.PQSourceEnum.Mobile_ModelPage_LocationSelector)" class="getquotation changeCity bw-ga @(Model.IsLocationSelected && !Model.ShowOnRoadButton ? "location--active" : (Model.LocationCookie.CityId > 0 ? "location--active" : ""))" rel="nofollow">
                        @* TODO: Add class location--active when city is selected. *@
                        <span class="selected-location-label inline-block text-default text-truncate">@(Model.IsLocationSelected && !Model.ShowOnRoadButton ? Model.Location : (Model.LocationCookie.CityId > 0 ? Model.LocationCookie.City : "Select city"))</span>
                        <span class="location-map-icon"></span>
                    </a>
                </div>
            }
            else
            {
                <span class="text-bold font14 text-truncate block margin-top5">@Model.Location</span>
            }
        </div>
        <div class="clear"></div>
        @if (Model.ModelPageEntity.ModelVersions != null && Model.ModelPageEntity.ModelVersions.Any())
        {
            <ul class="dropdown-box__submenu-list">
                @foreach (var version in Model.ModelPageEntity.ModelVersions)
                {
                    <li class="dropdown-box-submenu-list__item @(version.VersionId == Model.VersionId ? "submenu-list-item--active" : "")" data-value="@version.VersionId" data-pqsourceid="@Convert.ToUInt16(Bikewale.Entities.PriceQuote.PQSourceEnum.Mobile_ModelPage_VersionSelector)">
                        <div class="submenu-list-item__title">
                            <p class="submenu-list-item-title__left-col">@version.VersionName</p>
                            <p class="submenu-list-item-title__right-col">@Html.Raw(version.Price != 0 ? string.Format("{0} {1}", "&#x20b9;", Format.FormatPrice(Convert.ToString(version.Price))) : (version.AverageExShowroom != 0 ? string.Format("{0} {1}", "&#x20b9;", Format.FormatPrice(Convert.ToString(version.AverageExShowroom))) : string.Empty))</p>
                        </div>
                        @if (version.MinSpecsList != null && version.MinSpecsList.Any()) { 
                        <ul class="dropdown-box-submenu__specs-list">
                            @Html.Raw(FormatMinSpecs.GetMinSpecsAsLiElement(version.MinSpecsList != null ? version.MinSpecsList.Take(4) : null , "dropdown-box-specs-list__item"))
                        </ul>
                        }
                    </li>
                }
            </ul>
        }
    </div>
    <div class="clear"></div>
}
