@model Bikewale.Models.BikeModels.ModelPageVM
@using Bikewale.Utility

@{ string bikeName = string.Format("{0}_{1}", Model.ModelPageEntity.ModelDetails.MakeBase.MakeName, Model.ModelPageEntity.ModelDetails.ModelName);
}

<div class="bw-tabs-panel">
    @if (Model.ColorImages != null && Model.ColorImages.Count() > 0)
    {
        <div class="bw-tabs bw-group-flex text-center margin-bottom5">
            <ul>
                <li data-tabs="imageCarousel" class="tabs-group__list-item active bw-ga" data-lab="@bikeName" data-act="Image_Tab_Clicked" data-cat="Model_Page">
                    <span class="label-count">@Model.ModelPageEntity.AllPhotos.Count() Images</span>
                    <span class="label-overview">See Images</span>
                </li>
                <li data-tabs="colourCarousel" class="tabs-group__list-item bw-ga" data-lab="@bikeName" data-act="Colours_Tab_Clicked" data-cat="Model_Page">
                    <span class="label-count">@Model.ColorImages.Count() Colour@(Model.ColorImages.Count() != 1 ? "s" : "")</span>
                    <span class="label-overview">See Colour@(Model.ColorImages.Count() != 1 ? "s" : "")</span>
                </li>
            </ul>
        </div>
        <div class="bw-tabs-data hide" id="colourCarousel">
            <div class="carousel-type-color">
                <span href="@String.Format("{0}?q={1}", Bikewale.Utility.UrlFormatter.FormatPhotoPageUrl(Model.ModelPageEntity.ModelDetails.MakeBase.MaskingName, Model.ModelPageEntity.ModelDetails.MaskingName), Bikewale.Utility.EncodingDecodingHelper.EncodeTo64(string.Format("imageindex={0}&retUrl={1}", 0, Model.PageMetaTags.CanonicalUrl)))" class="carousel-img-container">
                    <img class="bw-ga" data-lab="@bikeName" data-act="Main_Image_Clicked" data-cat="Model_Page" src="@Bikewale.Utility.Image.GetPathToShowImages(Model.ModelPageEntity.ModelDetails.OriginalImagePath, Model.ModelPageEntity.ModelDetails.HostUrl, Bikewale.Utility.ImageSize._393x221, Bikewale.Utility.QualityFactor._85)" alt="@Model.ModelPageEntity.ModelDetails.ModelName Model Image" title="@Model.ModelPageEntity.ModelDetails.ModelName Model Image" border="0">
                </span>
            </div>

            @if (Model.ModelPageEntity != null && Model.ModelPageEntity.ModelColors != null)
            {
                var colorImages = Model.ModelPageEntity.ModelColors.Where(x => x.ColorImageId > 0);

                if (colorImages != null)
                {
                <div class="text-center">
                    <span class="margin-top12 text-light-grey vertical-top margin-right10">Colours:</span>
                    <ul id="model-color-list" class="color-box-list vertical-top">

                        @foreach (var modelColor in colorImages)
                            {
                            <li class="bw-ga" data-lab="@bikeName&#95;@modelColor.ColorName" data-act="Bottom_Colour_List_Clicked" data-cat="Model_Page">
                                <div data-colorid="@modelColor.ColorImageId" title="@modelColor.ColorName" class="color-box inline-block @(modelColor.HexCodes.Count() == 1 ? " color-count-one" : (modelColor.HexCodes.Count() == 3 ? "color-count-three" : "color-count-two"))">

                                    @foreach (var HexCode in modelColor.HexCodes)
                                        {
                                        <span style="background-color: #@HexCode"></span>
                                        }
                                </div>
                            </li>
                            }
                    </ul>
                </div>
                }

            }
        </div>
    }

    <input hidden id="canonical" value="@Model.PageMetaTags.CanonicalUrl" />
    <input hidden id="imageUrl" value="@Bikewale.Utility.UrlFormatter.FormatPhotoPageUrl(Model.ModelPageEntity.ModelDetails.MakeBase.MaskingName, Model.ModelPageEntity.ModelDetails.MaskingName)" />


    <div class="bw-tabs-data connected-carousels carousel-controls" id="imageCarousel">
        <div class="stage">
            <div class="carousel carousel-stage">
                <ul>
                    @if (Model.ModelPageEntity.AllPhotos != null && Model.ModelPageEntity.AllPhotos.Count() > 0)
                    {
                        int imageIndex = 0;
                        foreach (var image in Model.ModelPageEntity.AllPhotos)
                        {
                            string imageProperty = string.Format("{0} {1}", Model.BikeName, image.ImageCategory);

                        <li>
                            @if (imageIndex == 0)
                            {
                                <a href="@String.Format(@"{0}", Bikewale.Utility.UrlFormatter.FormatPhotoPageUrl(Model.ModelPageEntity.ModelDetails.MakeBase.MaskingName, Model.ModelPageEntity.ModelDetails.MaskingName))" data-url="@String.Format("{0}?q={1}", Bikewale.Utility.UrlFormatter.FormatPhotoPageUrl(Model.ModelPageEntity.ModelDetails.MakeBase.MaskingName, Model.ModelPageEntity.ModelDetails.MaskingName), Bikewale.Utility.EncodingDecodingHelper.EncodeTo64(string.Format("imageindex={0}&retUrl={1}", 0, Model.PageMetaTags.CanonicalUrl)))" class="carousel-img-container redirect-url">
                                    <img class="bw-ga" data-lab="@bikeName" data-act="Main_Image_Clicked" data-cat="Model_Page" data-colorid="@image.ColorId" data-original="" src="@Bikewale.Utility.Image.GetPathToShowImages(image.OriginalImgPath, image.HostUrl, Bikewale.Utility.ImageSize._393x221, Bikewale.Utility.QualityFactor._85)" alt="@imageProperty" title="@imageProperty" border="0"
                                     data-imgcat="@image.ImageCategory" data-imgtype="@image.ImageType" data-imgid="@image.ImageId" />
                                </a>
                            }
                            else
                            {
                                    <span href="@String.Format(@"{0}?q={1}", Bikewale.Utility.UrlFormatter.FormatPhotoPageUrl(Model.ModelPageEntity.ModelDetails.MakeBase.MaskingName, Model.ModelPageEntity.ModelDetails.MaskingName), Bikewale.Utility.EncodingDecodingHelper.EncodeTo64(string.Format("imageindex={0}&retUrl={1}", imageIndex, Model.PageMetaTags.CanonicalUrl)))" class="carousel-img-container">

                                    @if (imageIndex < 4)
                                    {
                                        <img class="bw-ga" data-lab="@bikeName" data-act="Main_Image_Clicked" data-cat="Model_Page" data-colorid="@image.ColorId" data-original="" src="@Bikewale.Utility.Image.GetPathToShowImages(image.OriginalImgPath, image.HostUrl, Bikewale.Utility.ImageSize._393x221, Bikewale.Utility.QualityFactor._85)" alt="@imageProperty" title="@imageProperty" border="0"
                                             data-imgcat="@image.ImageCategory" data-imgtype="@image.ImageType" data-imgid="@image.ImageId" />
                                    }
                                    else
                                    {
                                        <img data-lab="@bikeName" data-act="Main_Image_Clicked" data-cat="Model_Page" data-colorid="@image.ColorId" class="lazy bw-ga" src="" data-original="@Bikewale.Utility.Image.GetPathToShowImages(image.OriginalImgPath, image.HostUrl, Bikewale.Utility.ImageSize._393x221, Bikewale.Utility.QualityFactor._80)" alt="@imageProperty" title="@imageProperty" border="0"
                                             data-imgcat="@image.ImageCategory" data-imgtype="@image.ImageType" data-imgid="@image.ImageId" />

                                    }
                                </span>
                                }
                        </li>
                            imageIndex++;
                        }
                    }
                    else
                    {
                        <li>
                            <div class="model-thumbnail-image">
                                <a>
                                    <div class="bg-light-grey">
                                        <span class="bwsprite no-image-icon margin-bottom15"></span>
                                        <p class="font12 text-bold text-light-grey">Image not available</p>
                                    </div>
                                </a>
                            </div>
                        </li>
                    }
                </ul>
            </div>
            @if (Model.ModelPageEntity.AllPhotos != null && Model.ModelPageEntity.AllPhotos.Count() > 1)
            {
                <a href="#!" class="prev-control prev-stage bwsprite bw-ga" rel="nofollow" data-lab="@bikeName&#95;Previous" data-act="Top_Image_Carousel_Clicked" data-cat="Model_Page"></a>
                <a href="#!" class="next-control next-stage bwsprite bw-ga" rel="nofollow" data-lab="@bikeName&#95;Next" data-act="Top_Image_Carousel_Clicked" data-cat="Model_Page"></a>
            }
        </div>

        @if (Model.ModelPageEntity.AllPhotos != null && Model.ModelPageEntity.AllPhotos.Count() > 1)
            {
            <div class="navigation">
                <a href="#!" class="prev-control prev-navigation bwsprite bw-ga" rel="nofollow" data-lab="@bikeName&#95;Previous" data-act="Bottom_Image_Carousel_Clicked" data-cat="Model_Page"></a>
                <a href="#!" class="next-control next-navigation bwsprite bw-ga" rel="nofollow" data-lab="@bikeName&#95;Next" data-act="Bottom_Image_Carousel_Clicked" data-cat="Model_Page"></a>
                <div class="carousel carousel-navigation">
                    <ul>
                        @{
                            int imageIndex = 0;
                            foreach (var image in Model.ModelPageEntity.AllPhotos)
                            {
                                string imageProperty = string.Format("{0} {1}", Model.BikeName, image.ImageCategory);

                            <li class="bw-ga" data-lab="@bikeName&#95;@image.ImageCategory" data-act="Image_Carousel_Clicked" data-cat="Model_Page" data-imgcat="@image.ImageCategory" data-imgtype="@image.ImageType" data-imgid="@image.ImageId">

                                <span class="carousel-nav-img-container">
                                    @if (imageIndex < 7)
                                        {
                                        <img data-original="" src="@Bikewale.Utility.Image.GetPathToShowImages(image.OriginalImgPath, image.HostUrl, Bikewale.Utility.ImageSize._110x61, Bikewale.Utility.QualityFactor._80)" alt="@imageProperty" title="@imageProperty" border="0" />
                                        }
                                        else
                                        {
                                        <img class="lazy" src="https://imgd.aeplcdn.com/0x0/bw/static/sprites/d/loader.gif" data-original="@Bikewale.Utility.Image.GetPathToShowImages(image.OriginalImgPath, image.HostUrl, Bikewale.Utility.ImageSize._110x61, Bikewale.Utility.QualityFactor._80)" alt="@imageProperty" title="@imageProperty" border="0" />

                                        }
                                </span>


                            </li>

                                imageIndex++;
                            }
                        }

                        @if (Model.ModelPageEntity != null && Model.ModelPageEntity.AllPhotos != null && Model.ModelPageEntity.AllPhotos.Count() > 4)
                        {
                            <li class="all-photos-target">
                                <a href="@Bikewale.Utility.UrlFormatter.FormatPhotoPageUrl(Model.ModelPageEntity.ModelDetails.MakeBase.MaskingName,Model.ModelPageEntity.ModelDetails.MaskingName)" title="@Model.BikeName Images">All Images</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
                            }
    </div>
</div>
