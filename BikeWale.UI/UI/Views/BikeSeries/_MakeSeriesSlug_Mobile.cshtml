@model Bikewale.Models.BikeSeries.MakeSeriesSlugVM
@using Bikewale.Entities.BikeData;

@if (Model != null && Model.MakeSeriesList != null && Model.MakeSeriesList.Any())
{
    
    <div class="swiper-container carousel__explore-bikes" data-spacebetween="0">
        <ul class="swiper-wrapper">
            @foreach (BikeSeriesEntity makeSeries in Model.MakeSeriesList)
            {
                var title = makeSeries.BodyStyle.Equals(Bikewale.Entities.GenericBikes.EnumBikeBodyStyles.Scooter) ? String.Format("{0} {1} Scooters", Model.MakeName, makeSeries.SeriesName) : String.Format("{0} {1} Bikes", Model.MakeName, makeSeries.SeriesName);
                <li class="swiper-slide carousel-slide">
                    <a href="@String.Format("/m{0}", Bikewale.Utility.UrlFormatter.BikeSeriesUrl(Model.MakeMaskingName, makeSeries.MaskingName))" title="@title" class="model__explore-card">
                        <h3 class="explore-card__title">@title</h3>
                        <div class="explore-card__list">
                            <span class="explore-card-list__item">@Html.Raw(makeSeries.ModelsCount) Bikes</span>
                            <span class="explore-card-list__item">&#x20b9; @Html.Raw(makeSeries.MinPrice > 0 ? String.Format("{0} Onwards", Bikewale.Utility.Format.FormatPrice(Convert.ToString(makeSeries.MinPrice))) : Bikewale.Utility.Format.FormatPrice(Convert.ToString(makeSeries.MinPrice)))</span>
                        </div>
                    </a>
                </li>
            }
        </ul>
    </div>
        
}