@model Bikewale.Entities.PriceQuote.LeadCaptureEntity

<!-- lead capture popup start-->
<div id="leadCapturePopup" class="lead-popup">
    <div class="popoup-content">
        <!-- contact details starts here -->
        <div id="contactDetailsPopup" class="contact-detail-screen">
            <div class="leadCapture-close-btn lead-popup__close-btn" data-act="MLA_Closed_Clicked"></div>
            <div class="lead-contact-detail__head">
                <span class="lead-popup__contact-icon icon-container--round"></span>
                <div class="lead-popup__contact-desc">
                    <p class="lead-contact-head__title" data-bind="text: (dealerHeading() != null && dealerHeading() != '') ? dealerHeading() : 'Provide contact details'"></p>
                    <p class="lead-contact-head__subtitle" data-bind="text: (dealerDescription() != null && dealerDescription() != '') ? dealerDescription() : 'Dealership will get back to you with offers, EMI quotes, exchange benefits and much more!'"></p>
                </div>
            </div>
            <div class="personal-info-form-container">
                @if (Model.CityId <= 0)
                {
                    <div class="form-control-box personal-info-list position-rel" data-bind="visible: cityRequired() ">
                        <div class="select-box full-width-select text-left">
                            <p class="select-label">Select City</p>
                            <select id="getLeadCity" data-title="Select City" data-bind="value: selectedCity, options: cities, optionValue: 'cityId', optionsText: 'cityName',event : { change : selectCity } " class="chosen-select margin-bottom10"></select>
                            <span class="boundary"></span>
                            <span class="error-text"></span>
                        </div>
                    </div>
                }

                <!-- ko if : isDealerBikes() -->
                <div data-bind="visible: isDealerBikes()" class="form-control-box personal-info-list position-rel">
                    <div class="placeholder-loading-text position-abt form-control border-solid" style="display: none; height: 40px; border: 1px solid #e2e2e2;">Loading dealer bikes..<span class="fa fa-spinner fa-spin position-abt text-black btnSpinner"></span></div>
                    <div class="select-box">
                        <select id="getLeadBike" class="chosen-select form-control chosen-select margin-bottom10" data-placeholder="Choose a bike model" data-bind="chosen: { width: '100%' }, value: selectedBike, options: dealerBikes, optionValue: function (i) { return i.model.modelId; }, optionsText: 'bike', optionsCaption: 'Select a bike'"></select>
                        <span class="error-text"></span>
                    </div>
                    <span class="bwsprite error-icon errorIcon"></span>
                    <div class="bw-blackbg-tooltip errorText"></div>
                    <span class="position-abt progress-bar" style="width: 100%; overflow: hidden; display: none;"></span>
                </div>
                <!-- /ko -->
                <div class="input-box form-control-box personal-info-list">
                    <input type="text" class="get-first-name" id="getFullName" data-bind="textInput: fullName" tabindex="1" maxlength="50">
                    <label for="getFullName">Name<sup>*</sup></label>
                    <span class="boundary"></span>
                    <span class="error-text"></span>
                </div>

                <div class="input-box input-number-box form-control-box personal-info-list">
                    <input type="text" class="get-mobile-no" id="getMobile" maxlength="10" data-bind="textInput: mobileNo" tabindex="2">
                    <label for="getMobile">Mobile number<sup>*</sup></label>
                    <span class="input-number-prefix">+91</span>
                    <span class="boundary"></span>
                    <span class="error-text"></span>
                </div>
                <div class="input-box form-control-box personal-info-list" data-bind="visible : emailRequired() && (mfgCampaignId() > 0)">
                    <input type="text" class="get-email-id" id="getEmailID" data-bind="textInput: emailId" tabindex="3" maxlength="50">
                    <label for="getEmailID" data-bind="visible: emailOption() == 'Required'">Email<sup>*</sup></label>
                    <label for="getEmailID" data-bind="visible : emailOption()== 'Optional'">Email (optional)</label>
                    <span class="boundary"></span>
                    <span class="error-text"></span>
                </div>
                <div id="getPincode-input-box" class="input-box form-control-box personal-info-list" data-bind="visible : pinCodeRequired()">
                    <input type="text" id="getPinCode" autocomplete="off" tabindex="4" maxlength="6">
                    <label for="getPinCode">Pincode<sup>*</sup></label>
                    <span class="boundary"></span>
                    <span class="error-text"></span>

                    <ul id="errPinCodeSearch" class="ui-autocomplete ui-front ui-menu ui-widget hide">
                        <li class="ui-menu-item" tabindex="-1">
                            <span class="text-bold">Oops! No suggestions found</span><br>
                            <span class="text-light-grey font12">Search by pincode or area e.g: 400708 or airoli</span>
                        </li>
                    </ul>
                </div>
                <div class="form-control-box personal-info-list position-rel" data-bind="visible: dealersRequired() ">
                    <div class="select-box select-box-no-input full-width-select text-left">
                        <p class="select-label">Select dealer</p>
                        <select id="ddlMfgDealers" data-title="Select dealer" class="chosen-select margin-bottom10"></select>
                        <span class="boundary"></span>
                        <span class="error-text"></span>
                    </div>
                </div>
                <div class="clear"></div>
                <button class="btn btn-orange contact-details__submit bw-ga" id="user-details-submit-btn" data-bind="click: function(data, event){ @(Model.IsMLAActive && !Model.IsManufacturerCampaign ? "getMLADealers();" : "") submitLead(data, event); }" tabindex="5">Submit</button>
                <p class="agreement-and-policy">By proceeding ahead, you agree to BikeWale <a title="Visitor agreement" href="/visitoragreement.aspx" target="_blank" rel="noopener">visitor agreement</a> and <a title="Privacy policy" href="/privacypolicy.aspx" target="_blank" rel="noopener">privacy policy</a>.</p>
            </div>
        </div>
        <div id="dealer-lead-msg" class="additional-screen">
            <div class="leadcapture-close__container">
                <div class="leadCapture-close-btn lead-popup__close-btn" data-act="MLA_Closed_Clicked"></div>
            </div>
            <div id="notify-response" class="notify-response__container">
                <div class="lead-popup__thankyou-icon icon-container--round">
                </div>
                <p class="lead-popup-thankyou__title">Thank you!</p>
                <!-- ko if : !dealerMessage() -->
                <p class="lead-popup-thankyou__desc">Thank you for providing your details. <span data-bind="text: dealerName()"></span><span data-bind="visible : dealerArea() && dealerArea().length > 0, text: ', ' + dealerArea()"></span>&nbsp; will get in touch with you soon.</p>
                <!-- /ko -->
                <!-- ko ifnot : !dealerMessage()-->
                <p class="thankyou-with-code" id="ko_thankyoumessage" data-bind="html: dealerMessage()"></p>
                <!-- /ko -->
                <button id="notifyOkayBtn" class="btn btn-orange notify-response__submit">Okay</button>
            </div>
            @if (Model.IsMLAActive && !Model.IsManufacturerCampaign)
            {
                <div id="otherDealers" class="dealers__container">
                    <div class="dealers__content selection-container">
                        <div class="dealers__head">
                            <div class="dealers-head__left">
                                <p class="dealer-head__title">
                                    Other Dealers
                                </p>
                                <p class="dealer-head__subtitle">
                                    Check offers from other dealers
                                </p>
                            </div>
                            <div class="dealer-head__right">
                                <label class="checkbox-toggle checkbox-container">
                                    <input type="checkbox" class="checkbox-container__input" data-bind="click: modifyMLADealerIds , checked: isSelectAllChecked" />
                                    <span class="checkbox-container__label">
                                        Select All
                                    </span>
                                    <span class="checkbox-container__icon">
                                    </span>

                                </label>
                            </div>
                        </div>
                        <ul class="dealers__list selection-checkbox-container" data-bind="foreach: MLADealers">
                            <li class="dealers-list__item">
                                <label>
                                    <span class="dealers-item__content">
                                        <span class="dealers-item__name" data-bind="text: name">

                                        </span>
                                        <span class="dealers-item__info">
                                            <span class="dealers__location dealer-info__item" data-bind="text: area">

                                            </span>
                                            <span class="dealers__distance dealer-info__item" data-bind="text: distance">

                                            </span>
                                        </span>
                                    </span>
                                    <span class="checkbox-container">
                                        <input type="checkbox" class="checkbox-container__input" data-bind="checkedValue: dealerId, checked: $parent.selectedMLADealerIds" />
                                        <span class="checkbox-container__icon"></span>
                                    </span>
                                </label>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="dealers__btn-container">
                    <button id="otherDealerBtn" class="btn btn-orange dealers__submit-btn" data-bind="enable : selectedMLADealerIds().length != 0, click:submitLeadToMLADealers">
                        Submit
                    </button>
                    <button id="otherDealerSkipBtn" class="dealers__skip-btn" data-act="MLA_Not_Interested_Clicked" data-bind="click: triggerMlaGAs">
                        not interested
                    </button>
                </div>
            }
        </div>
    </div>
</div>
<!-- lead capture popup End-->
<div id="ub-ajax-loader">
    <div id="spinner-content">
        <svg class="bw-spinner" width="50px" height="50px" viewBox="0 0 50 50">
            <circle class="circle-path" fill="none" stroke-width="4" stroke-linecap="round" cx="25" cy="25" r="22"></circle>
        </svg>
    </div>
</div>
<!-- scripts goes here -->

<script type="text/javascript">

    var LeadPopupStateEnum = {"Open":1,"Close":2,"Final":3};
    var LeadPopupState = (function () {
        var leadCapturePopup = document.getElementById('leadCapturePopup');
        function close() {
            $(leadCapturePopup).removeClass('lead-popup--active');
            $("#notify-response").removeClass('notify-response--active');
            $('.additional-screen').removeClass('dealers--active');
            $('.popoup-content').removeClass('dealer-screen--active');
            this.status = LeadPopupStateEnum.Close;
        }
        function open() {
            $(leadCapturePopup).addClass('lead-popup--active');
            $('.additional-screen').removeClass('additional-screen--active');
            $("#notify-response").removeClass('notify-response');
            $('#contactDetailsPopup').addClass('contact-detail--active');
            dleadvm.selectedMLADealerIds([]);
            this.status = LeadPopupStateEnum.Open;
        }
        function setFinalScreen() {
            $('.additional-screen').addClass('additional-screen--active');
            $('.popoup-content').addClass('dealer-screen--active');
            $('#contactDetailsPopup').removeClass('contact-detail--active');
            this.status = LeadPopupStateEnum.Final;
        }

        return {
            close: close,
            open: open,
            setFinalScreen: setFinalScreen,
            status: status
        }
    })();
    var gaLabel = "";
    var eventAction = "Lead_Submitted";
    var leadBtnBookNow, leadCapturePopup, leadBike;
    var fullName, emailid, mobile;
    var assistanceGetName, assistanceGetEmail, assistanceGetMobile, detailsSubmitBtn;
    var prevEmail = "", prevMobile = "", prevPinCode = "";
    var leadmodelid = parseInt('@Model.ModelId'), leadcityid = parseInt('@Model.CityId'), leadareaid = parseInt('@Model.AreaId');
    var leadBikeName = '@Model.BikeName', leadLocation = '@Model.Location';
    var objPinCodes = new Object(), dleadvm, validate;
    var fbPixelLeadEvent = "";

    function leadModel() {
        var arr = setuserDetails();
        var globalLocation = GetGlobalLocationObject();
        var self = this;
        if (arr != null && arr.length > 0) {
            self.fullName = ko.observable(arr[0] || '');
            self.emailId = ko.observable((arr[1] && arr[1] != 'undefined') ? arr[1] : '');
            self.mobileNo = ko.observable(arr[2] || '');
        }
        else {
            self.fullName = ko.observable();
            self.emailId = ko.observable();
            self.mobileNo = ko.observable();
        }
        self.msg = "";
        var dummyOption = { id: 0, name: '', isPopular: false, hasAreas: false };
        self.IsVerified = ko.observable(false);
        self.pqGUId = ko.observable();
        self.dealerId = ko.observable();
        self.modelId = ko.observable(leadmodelid);
        self.versionId = ko.observable();
        self.cityId = ko.observable(leadcityid);
        self.areaId = ko.observable(leadareaid);
        self.dealerName = ko.observable();
        self.leadSourceId = ko.observable();
        self.dealerArea = ko.observable();
        self.pqSourceId = ko.observable();
        self.pageUrl = window.location.href;
        self.clientIP = "";
        self.isRegisterPQ = ko.observable(false);
        self.isDealerBikes = ko.observable(false);
        self.dealerBikes = ko.observableArray([]);
        self.selectedBike = ko.observable();
        self.campaignId = ko.observable();
        self.GAObject = ko.observable();
        self.mfgCampaignId = ko.observable();
        self.IsLeadPopup = ko.observable(true);
        self.dealerHeading = ko.observable();
        self.dealerMessage = ko.observable();
        self.dealerDescription = ko.observable();
        self.pinCodeRequired = ko.observable();
        self.emailRequired = ko.observable();
        self.emailOption = ko.observable();
        self.dealersRequired = ko.observable();
        self.cityRequired = ko.observable(leadcityid <= 0);
        self.pincode = ko.observable();
        self.dealerCityName = ko.observable();
        self.dealerAreaName = ko.observable();
        self.eventCategory = ko.observable();
        self.cities = ko.observableArray();
        self.selectedCity = ko.observable();
        self.ko_DealerName = ko.observable();
        self.sendLeadSMSCustomer = ko.observable(false);
        self.organizationName = ko.observable();
        self.leadId = ko.observable(0);
        self.selectedMLADealerIds = ko.observableArray([]);
        self.MLADealers = ko.observableArray([]);
        self.isBikeSelected = ko.observable(false);
        self.isUserAreaAvailable = ko.computed(function () {
            return self.cityId() == globalLocation.CityId && globalLocation.AreaId > 0;
        });
        self.selectedBike.subscribe(function (data) {
            if( data != null && gaObj.id == gaEnum.Dealer_Locator_City_Page && !self.isBikeSelected())
            {
                @if (Model.IsMLAActive && !Model.IsManufacturerCampaign)
                {
                    <text>
                    triggerNonInteractiveGA(gaObj.name, "MLA_Eligible_Lead_Popup_Shown", self.selectedBike().bike + "_" + (self.isUserAreaAvailable() ? globalLocation.CityName : self.dealerCityName()) + "_" + (self.isUserAreaAvailable()  ? globalLocation.AreaName : null));
                    </text>
                }
                self.isBikeSelected(true);
            }
        });
        function Dealer(dealerId, name, area, distance, areaId) {
            this.dealerId = dealerId;
            this.name = name;
            this.area = area;
            this.distance = distance != 0 ? (distance != Math.round(distance) ? distance.toFixed(1): distance) + " Kms" : "";
            this.areaId = areaId;
        }

        @if (Model.IsMLAActive && !Model.IsManufacturerCampaign)
        {
            <text>
        self.setMLADealers = function (mlaDealers) {
            if (mlaDealers != undefined && mlaDealers.length > 0) {
                self.MLADealers.removeAll();
                mlaDealers.forEach(function (dealer) {
                    if (dealer.DealerId != self.dealerId()) {
                        var dealerDistance = self.isUserAreaAvailable() ? dealer.Distance : 0;
                        self.MLADealers.push(new Dealer(dealer.DealerId, dealer.Name, dealer.Area, dealerDistance, dealer.AreaId));
                    }
                });
                if (self.MLADealers() != null && self.MLADealers().length > 0) {
                    $('.additional-screen').addClass('dealers--active');
                }
            }
        };
        self.getMLADealers = function () {
            var isValidUserDetails = self.validateUserInfo(fullName, emailid, mobile);
            if (isValidUserDetails) {
                if (gaObj.id == gaEnum.Dealer_Locator_City_Page ) {
                    if (self.selectedBike() != null && self.selectedBike().model.modelId > 0) {
                        var url = "/api/dealers/model/" + self.selectedBike().model.modelId + "/city/" + leadcityid + "/dealerId/" + self.dealerId() + "/?areaId=" + (self.isUserAreaAvailable() ? globalLocation.AreaId : "0");
                        $.getJSON(url, function (data) {
                            self.setMLADealers(data);
                            triggerNonInteractiveGA(gaObj.name, "MLA_Primary_Lead_Success_" + self.MLADealers().length + "_dealers_shown", self.selectedBike().bike + "_" + (self.isUserAreaAvailable() ? globalLocation.CityName : self.dealerCityName()) + "_" + (self.isUserAreaAvailable() ? globalLocation.AreaName : "null"));
                        });
                    }
                }
                else {
                    self.setMLADealers(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MLADealers)));
                    triggerNonInteractiveGA(gaObj.name, "MLA_Primary_Lead_Success_" + self.MLADealers().length + "_dealers_shown", "@Model.BikeName" + "_" + "@Model.City" + "_" + "@Model.Area");
                }
            }
        };
        self.modifyMLADealerIds = ko.computed({
            read: function() {
            },
            write: function(value,event) {
                if(!self.isSelectAllChecked())
                {
                    self.selectedMLADealerIds([]);
                    ko.utils.arrayForEach(self.MLADealers(), function (dealer) {
                        self.selectedMLADealerIds.push(dealer.dealerId);
                    });
                }
                else{
                    self.selectedMLADealerIds([]);
                }
                if (gaObj.id == gaEnum.Model_Page || gaObj.id == gaEnum.DealerPriceQuote_Page)
                {
                    triggerGA(gaObj.name,"MLA_Select All_Clicked","@Model.BikeName" + "_" +  "@Model.City" + "_" + "@Model.Area");
                }
                else{
                    triggerGA(gaObj.name,"MLA_Select All_Clicked",self.selectedBike().bike +"_" +  (self.isUserAreaAvailable() ? globalLocation.CityName : self.dealerCityName() )+ "_" + (self.isUserAreaAvailable() ? globalLocation.AreaName : "null"));
                }
            }
        }).extend({ rateLimit: 1 });

        self.isSelectAllChecked = ko.computed(function(){
            return (self.selectedMLADealerIds().length == self.MLADealers().length);
        }).extend({ rateLimit: 1 });

        self.triggerMlaGAs = function (data, event) {
            if (gaObj.id == gaEnum.Model_Page || gaObj.id == gaEnum.DealerPriceQuote_Page) {
                triggerGA(gaObj.name, event.target.dataset.act, "@Model.BikeName" + "_" + "@Model.City" + "_" + "@Model.Area");
            }
            else {
                if (self.selectedBike() != null) {
                    triggerGA(gaObj.name, event.target.dataset.act, self.selectedBike().bike + "_" + (self.isUserAreaAvailable() ? globalLocation.CityName : self.dealerCityName()) + "_" + (self.isUserAreaAvailable() ? globalLocation.AreaName : "null"));
                }
            }
        }
        </text>
        };

        self.triggerCloseBtnGA = function (event) {
            @if(Model.IsMLAActive && !Model.IsManufacturerCampaign) {
                <text>
            if (LeadPopupStateEnum.Final == LeadPopupState.status) {
                self.triggerMlaGAs(null, event);
            }
            </text>
            }
        };

        self.submitLeadToMLADealers = function () {
            var objCust = {
                "dealerId": self.dealerId(),
                "pqId": self.pqGUId(),
                "customerName": self.fullName(),
                "customerMobile": self.mobileNo(),
                "customerEmail": self.emailId(),
                "versionId": self.versionId(),
                "cityId": self.cityId(),
                "cityName": self.isUserAreaAvailable() ? globalLocation.CityName : self.dealerCityName(),
                "areaId": self.isUserAreaAvailable() ? globalLocation.AreaId : 0,
                "areaName": self.isUserAreaAvailable() ? globalLocation.AreaName : 0,
                "leadSourceId": (gaObj.id == gaEnum.Dealer_Locator_City_Page ? "69" : (gaObj.id == gaEnum.Dealer_Locator_Details_Page ? "71" : @Model.MlaLeadSourceId)),
                "pinCode": self.pincode() || 0,
                "deviceId": getCookie('BWC'),
                "campaignId": self.campaignId(),
                "manufacturerDealerId": $('#ddlMfgDealers :selected').data('id'),
                "manufacturerDealer": self.ko_DealerName(),
                "bikeName": leadBikeName,
                "dealerName": self.organizationName() ? self.organizationName() : self.dealerName(),
                "sendLeadSMSCustomer": self.sendLeadSMSCustomer(),
                "leadId": self.leadId(),
                "dealerIds": self.selectedMLADealerIds(),
                "platformId": @Model.PlatformId,
                "pageId": @Model.PageId
            };
            if (gaObj.id == gaEnum.Model_Page || gaObj.id == gaEnum.DealerPriceQuote_Page) {
                triggerGA(gaObj.name, "MLA_Lead_Success_" + self.selectedMLADealerIds().length + "/" + self.MLADealers().length + "_dealers_Lead Submitted", "@Model.BikeName" + "_" + "@Model.City" + "_" + "@Model.Area");
            }
            else {
                triggerGA(gaObj.name, "MLA_Lead_Success_" + self.selectedMLADealerIds().length + "/" + self.MLADealers().length + "_dealers_Lead Submitted", self.selectedBike().bike + "_" + (self.isUserAreaAvailable() ? globalLocation.CityName : self.dealerCityName()) + "_" + (self.isUserAreaAvailable() ? globalLocation.AreaName : "null"));
            }
            $.ajax({
                type: "POST",
                url: "/api/submitmlaleads/",
                data: ko.toJSON(objCust),
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('utma', getCookie('__utma'));
                    xhr.setRequestHeader('utmz', getCookie('_bwutmz'));
                },
                async: true,
                contentType: "application/json",
                dataType: 'json',
                success: function (response) {
                }
            });
        };

        self.setOptions = function (options) {
            if (options != null) {
                if (options.eventcategory != null)
                    self.eventCategory(options.eventcategory);

                if (options.dealercityname != null)
                    self.dealerCityName(options.dealercityname);

                if (options.dealerareaname != null)
                    self.dealerAreaName(options.dealerareaname);

                if (options.dealerid != null)
                    self.dealerId(options.dealerid);

                if (options.dealername != null)
                    self.dealerName(options.dealername);

                if (options.dealerarea != null)
                    self.dealerArea(options.dealerarea);

                if (options.versionid != null)
                    self.versionId(options.versionid);

                if (options.leadsourceid != null)
                    self.leadSourceId(options.leadsourceid);

                if (options.pqsourceid != null)
                    self.pqSourceId(options.pqsourceid);

                if (options.isregisterpq != null)
                    self.isRegisterPQ(options.isregisterpq);

                if (options.campaignId != null)
                    self.campaignId(options.campaignId);

                if (options.mfgCampid != null) {
                    self.mfgCampaignId(options.mfgCampid);
                }

                if (options.dealerHeading != null && options.dealerHeading != "")
                    self.dealerHeading(options.dealerHeading);

                if (options.dealerMessage != null && options.dealerMessage != "")
                    self.dealerMessage(options.dealerMessage);

                if (options.dealerDescription != null && options.dealerDescription != "")
                    self.dealerDescription(options.dealerDescription);

                if (options.pinCodeRequired != null)
                    self.pinCodeRequired(options.pinCodeRequired == 'True');

                if (options.emailRequired != null)
                {
                    self.emailRequired(options.emailRequired != 'Not_Required');
                    self.emailOption(options.emailRequired);
                }
                if (options.dealersRequired != null) {
                    self.dealersRequired(options.dealersRequired == 'True');
                    if (self.cityId() && self.dealersRequired()) {
                        self.getDealersList(self.dealerId());
                    }
                }

                if (options.isdealerbikes != null) {
                    self.isDealerBikes(options.isdealerbikes);
                    self.getDealerBikes();
                }

                if (self.cityRequired()) {
                    self.getModelCities();
                }

                if (options.isleadpopup != null)
                    self.IsLeadPopup(options.isleadpopup != "false");
                else self.IsLeadPopup(true);

                if (options.pqguid != null && options.pqguid)
                    self.pqGUId(options.pqguid);

                if (options.gaobject != null) {
                    self.GAObject(options.gaobject);
                }
                if (options.pageurl != null)
                    self.pageUrl = options.pageurl;

                if (options.clientip != null)
                    self.clientIP = options.clientip;

                if (options.sendLeadSMSCustomer != null) {
                    self.sendLeadSMSCustomer(options.sendLeadSMSCustomer);
                }

                if (options.organizationName != null) {
                    self.organizationName(options.organizationName);
                }
                self.isBikeSelected(false);
            }
        };

        @if(Model.CityId <=0)
        {
        <text>
        self.getModelCities = function (d, e) {
            if (self.modelId() > 0 && self.cityRequired() && !self.selectedCity()) {
                var eleCities = $("#getLeadCity");
                $.ajax({
                    type: "GET",
                    url: "/api/PQCityList/?modelId=" + self.modelId(),
                    dataType: 'json',
                    success: function (response) {
                        var cities = response.cities;
                        if (cities && cities.length > 0) {
                            cities.splice(0, 0, dummyOption);
                            self.cities(cities);
                        }
                        else {
                            self.cities([]);
                        }

                    },
                    complete: function (xhr) {
                        if (xhr.status != 200) {

                        }

                        eleCities.trigger("chosen:updated");
                        $(this).parent().removeClass('done');
                    }
                });
            }
        };

        self.selectCity = function (d, e) {
            var ele = $("#getLeadCity");
            if (self.selectedCity() && self.selectedCity().cityId > 0) {
                hideError(ele);
                ele.parent().addClass('done');
                self.cityId(self.selectedCity().cityId);
                self.isRegisterPQ(true);

                if (self.dealersRequired()) {
                    self.getDealersList(self.dealerId());
                }
            }
        };
        </text>
        }


        self.getDealerBikes = function (data, event) {
            if (!isNaN(self.dealerId()) && self.dealerId() > 0 && self.campaignId() > 0) {
                var dealerKey = "dealerDetails_" + self.dealerId() + "_camp_" + self.campaignId();
                var dealerInfo = lscache.get(dealerKey);

                if (!dealerInfo) {

                    startLoading(leadBike.parent());
                    leadBike.prev().show();
                    $.ajax({
                        type: "GET",
                        url: "/api/DealerBikes/?dealerId=" + self.dealerId() + "&campaignId=" + self.campaignId(),
                        contentType: "application/json",
                        dataType: 'json',
                        beforeSend: function (xhr) {
                            self.showLoader();
                            xhr.setRequestHeader('utma', getCookie('__utma'));
                            xhr.setRequestHeader('utmz', getCookie('_bwutmz'));
                        },
                        success: function (response) {
                            lscache.set(dealerKey, response, 30);
                            obj = ko.toJS(response);
                            self.dealerBikes([]);
                            self.dealerBikes(obj.dealerBikes);
                            $('#getLeadBike').trigger("chosen:updated");
                        },
                        complete: function (xhr) {
                            self.hideLoader();
                            if (xhr.status == 204 || xhr.status == 404) {
                                lscache.set(dealerKey, null, 30);
                            }

                            stopLoading(leadBike.parent());
                            leadBike.prev().hide();
                        }
                    });
                }
                else {
                    obj = ko.toJS(dealerInfo);
                    self.dealerBikes([]);
                    self.dealerBikes(obj.dealerBikes);
                    $('#getLeadBike').trigger("chosen:updated");
                }
            }
        };

        self.getDealersList = function () {
            $.ajax({
                type: "GET",
                url: "/api/ManufacturerCampaign/city/" + self.cityId() + "/dealer/" + self.dealerId() + "/",
                contentType: "application/json",
                dataType: 'json',
                success: function (response) {
                    var obj = ko.toJS(response);
                    var count = obj.length;
                    var objMfgDealers = $("#ddlMfgDealers");
                    if (count >= 1) {
                        objMfgDealers.html('');
                        if (count > 1) { objMfgDealers.append("<option value selected></option>"); }
                        for (i = 0; i < count; i++) {
                            var dt = obj[i];
                            var areaName = '';
                            if (dt.area != null) {
                                areaName = ", " + dt.area;
                            }
                            objMfgDealers.append("<option value=" + (i + 1) + " data-id='" + dt.id + "' >" + dt.dealerName + areaName + "</option>");
                        }
                        if (count == 1) {
                            objMfgDealers.val('0');
                            objMfgDealers.closest('.select-box').addClass('done');
                        }
                    }
                    objMfgDealers.trigger("chosen:updated");
                },
            });
        };

        self.generatePQ = function (data, event) {

            isSuccess = false;
            isValidDetails = false;

            isValidDetails = self.validateUserInfo(fullName, emailid, mobile);

            if (self.isDealerBikes()) {
                var bike = self.selectedBike();
                if (bike && bike.version && bike.model) {
                    self.versionId(bike.version.versionId);
                    self.modelId(bike.model.modelId);
                }
                else {
                    self.versionId(0);
                    self.modelId(0);
                }
            }

            if (isValidDetails && self.modelId() && self.versionId()) {

                var objData = {
                    "dealerId": self.dealerId(),
                    "modelId": self.modelId(),
                    "versionId": self.versionId(),
                    "cityId": self.cityId(),
                    "areaId": self.areaId(),
                    "clientIP": self.clientIP,
                    "pageUrl": self.pageUrl,
                    "sourceType": 1,
                    "pQLeadId": self.pqSourceId(),
                    "deviceId": getCookie('BWC')
                };

                return self.registerPQ(objData);
            }

            return isSuccess;

        };

        self.registerPQ = function (objPQData) {
            var isSuccess = false;
            if (objPQData) {
                var url = '/api/v1/registerpq/';
                $.ajax({
                    type: "POST",
                    url: url,
                    async: false,
                    data: ko.toJSON(objPQData),
                    contentType: "application/json",
                    dataType: 'json',
                    beforeSend: function (xhr) {
                        self.showLoader();
                    },
                    success: function (response) {
                        self.pqGUId(response.quoteId);
                        isSuccess = true;
                    },
                    complete: function (xhr) {
                        self.hideLoader();
                        if (xhr.status != 200) {
                            self.IsVerified(false);
                            isSuccess = false;
                            stopLoading($("#user-details-submit-btn").parent());
                        }

                    }
                });
            }

            return isSuccess;
        };

        self.pushToGA = function (data, event) {
            if (data != null && data.act != null) {
                triggerGA(data.cat, data.act, data.lab);
            }
        };

        self.verifyCustomer = function (data, event) {

            if (self.isRegisterPQ())
                self.generatePQ(data, event);

            if (self.pqGUId() && self.dealerId()) {
                var objCust = {
                    "dealerId": self.dealerId(),
                    "pqId": self.pqGUId(),
                    "versionId": self.versionId(),
                    "cityId": self.cityId(),
                    "customerName": self.fullName(),
                    "customerMobile": self.mobileNo(),
                    "customerEmail": self.emailId(),
                    "clientIP": self.clientIP,
                    "PageUrl": self.pageUrl,
                    "leadSourceId": self.leadSourceId(),
                    "deviceId": getCookie('BWC'),
                    "leadId": self.leadId(),
                    "areaId": self.isUserAreaAvailable() ? globalLocation.AreaId : "0",
                    "platformId": @Model.PlatformId,
                    "pageId": @Model.PageId,
                    "campaignId": self.campaignId()
                };
                $.ajax({
                    type: "POST",
                    url: "/api/v1/PQCustomerDetail/",
                    data: ko.toJSON(objCust),
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader('utma', getCookie('__utma'));
                        xhr.setRequestHeader('utmz', getCookie('_bwutmz'));
                    },
                    async: true,
                    contentType: "application/json",
                    dataType: 'json',
                    success: function (response) {
                        var obj = ko.toJS(response);
                        self.IsVerified(obj.isSuccess);
                        self.leadId(obj.leadId);
                    },
                    complete: function (xhr, ajaxOptions, thrownError) {
                        if (xhr.status != 200)
                            self.IsVerified(false);


                    }
                });
            }
        };

        self.submitCampaignLead = function (data, event) {

            var isValidCustomer = self.validateUserInfo(fullName, emailid, mobile);

            if (isValidCustomer && self.mfgCampaignId() > 0) {

                if (!(self.pqGUId() && self.pqGUId() != ""))
                    self.generatePQ(data, event);

                self.ko_DealerName($('#ddlMfgDealers option:selected').text());

                $('#processing').show();
                var objCust = {
                    "dealerId": self.dealerId(),
                    "pqId": 0,
                    "pqguid": self.pqGUId(),
                    "name": self.fullName(),
                    "mobile": self.mobileNo(),
                    "email": self.emailId(),
                    "versionId": self.versionId(),
                    "cityId": self.cityId(),
                    "leadSourceId": self.leadSourceId(),
                    "pinCode": self.pincode() || 0,
                    "campaignId": self.mfgCampaignId(),
                    "deviceId": getCookie('BWC'),
                    "manufacturerDealerId": $('#ddlMfgDealers :selected').data('id'),
                    "manufacturerDealer": self.ko_DealerName(),
                    "bikeName": leadBikeName,
                    "dealerName": self.organizationName() ? self.organizationName() : self.dealerName(),
                    "sendLeadSMSCustomer": self.sendLeadSMSCustomer(),
                    "leadId": self.leadId(),
                    "platformId": @Model.PlatformId,
                    "pageId": @Model.PageId,
                    "emailOption": self.emailOption()
                };
                $.ajax({
                    type: "POST",
                    url: "/api/ManufacturerLead/",
                    data: ko.toJSON(objCust),
                    beforeSend: function (xhr) {
                        self.showLoader();
                        xhr.setRequestHeader('utma', getCookie('__utma'));
                        xhr.setRequestHeader('utmz', getCookie('_bwutmz'));
                    },
                    async: true,
                    contentType: "application/json",
                    dataType: 'json',
                    success: function (response) {
                        self.leadId(response);
                        $("#contactDetailsPopup").removeClass('contact-detail--active');
                        $("#personalInfo").hide();
                        $("#dealer-lead-msg").fadeIn();
                        LeadPopupState.setFinalScreen();
                        if (self.cityRequired() && self.selectedCity()) {
                            SetCookieInDays("location", self.selectedCity().cityId + "_" + self.selectedCity().cityName, 365);
                        }
                        if (fbPixelLeadEvent) {
                            fbq('track', fbPixelLeadEvent);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        $("#leadCapturePopup").show();
                        popup.lock();
                    },
                    complete: function (xhr, ajaxOptions, thrownError) {
                        self.hideLoader();
                    }
                });
                setPQUserCookie();
                // triggerGA(eventCategory, eventAction, gaLabel)
            }
        };

        self.submitLead = function (data, event) {
            try {
                if (self.selectedBike() != null)
                    gaLabel = self.selectedBike().bike + "_" + self.dealerCityName() + ((self.dealerAreaName() != null) ? ("_" + self.dealerAreaName()) : "");


                if (self.mfgCampaignId() > 0) {
                    self.submitCampaignLead(data, event);
                    self.triggerABTestGA(gaLabel);
                }
                else {
                    self.IsVerified(false);
                    var eventButtonId = $(event.currentTarget).attr('id');
                    switch (eventButtonId) {
                        // model 'get offers from dealers', dealer locator listing 'submit'
                        case 'user-details-submit-btn':
                            isValidDetails = self.validateUserInfo('#getFullName', '#getEmailID', '#getMobile');
                            break;
                            // model 'get dealer assistance'
                            // dealer details 'get assistance'
                        case 'dealer-assist-btn':
                        case 'assistFormSubmit':
                            isValidDetails = self.validateUserInfo('#assistGetName', '#assistGetEmail', '#assistGetMobile');
                            break;
                        default:
                            break;
                    }

                    if (self.dealerId() && isValidDetails) {
                        self.verifyCustomer();
                        LeadPopupState.setFinalScreen();
                        if (self.IsLeadPopup()) {
                            $("#personalInfo").hide();
                        }
                        else {
                            $("#buyingAssistance").hide();
                            $("#dealer-assist-msg").fadeIn();
                        }
                        triggerGA(self.eventCategory(), eventAction, gaLabel);
                        setPQUserCookie();
                        self.triggerABTestGA(gaLabel);
                        if (fbPixelLeadEvent) {
                            fbq('track', fbPixelLeadEvent);
                        }
                    }

                }


                /* <![CDATA[ */
                window.google_trackConversion({
                    google_conversion_id: 998187973,
                    google_conversion_language: "en",
                    google_conversion_format: "3",
                    google_conversion_color: "ffffff",
                    google_conversion_label: "vUR5CPXFq3EQxcf82wM",
                    google_remarketing_only: false
                });
                // ]]>

            } catch (e) {
                console.log(e.message);
            }
        };

        self.HiddenSubmitLead = function (d, e) {
            try {
                ele = $(e.target);
                var leadOptions = {
                    "dealerid": ele.attr('data-item-id'),
                    "dealername": ele.attr('data-item-name'),
                    "dealerarea": ele.attr('data-item-area'),
                    "versionid": ele.attr('data-versionid'),
                    "leadsourceid": ele.attr('data-leadsourceid'),
                    "pqsourceid": ele.attr('data-pqsourceid'),
                    "isleadpopup": ele.attr('data-isleadpopup'),
                    "mfgCampid": ele.attr('data-mfgcampid'),
                    "pqguid": pqId,
                    "isregisterpq": ele.attr('data-isregisterpq'),
                    "pageurl": pageUrl,
                    "clientip": clientIP,
                    "eventcategory": ele.attr("data-cat"),
                    "dealercityname": ele.attr('data-cityname'),
                    "campaignId": ele.attr("data-campaignid")
                };

                if (!isNaN(leadOptions.versionid) && leadOptions.versionid != "0")
                {
                    if (!self.modelId() && ele.attr('data-modelId')) {
                        self.modelId(ele.attr('data-modelId'));
                    }
                    self.setOptions(leadOptions);
                    self.submitLead(d, e);
                }

            } catch (e) {

            }
        };

        self.setPinCodeSuggestion = function () {
            $.fn.hint = bwHint;
            $.fn.bw_autocomplete = bwAutoComplete;
            $("#getPinCode").bw_autocomplete({
                source: 4,
                recordCount: 3,
                minLength: 2,
                onClear: function () {
                    objPinCodes = new Object();
                },
                click: function (event, ui, orgTxt) {
                    if (self.selectedBike() && self.selectedBike().make && self.selectedBike().model) {
                        var keywrd = self.selectedBike().make.makeName + '_' + self.selectedBike().model.modelName + '_pinCode_' + $('#getPinCode').val();
                        dataLayer.push({ 'event': 'Bikewale_all', 'cat': 'LeadCapture_Popup', 'act': 'PinCode_Selected', 'lab': keywrd });
                    }
                    if (ui && ui.item) {
                        self.pincode(ui.item.payload.pinCode);
                    }
                    else {
                        self.pincode(0);
                    }

                },
                open: function (result) {
                    objPinCodes.result = result;
                },
                focusout: function () {
                    if ($('#getPinCode').find('li.ui-state-focus a:visible').text() != "") {
                        $('#errPinCodeSearch').hide();
                        focusedMakeModel = new Object();
                        focusedMakeModel = objPinCodes.result ? objPinCodes.result[$('li.ui-state-focus').index()] : null;
                    }
                    else {
                        $('#errPinCodeSearch').hide();
                    }
                },
                afterfetch: function (result, searchtext) {
                    if (result != undefined && result.length > 0 && searchtext.trim() != "") {
                        $('#errPinCodeSearch').hide();
                    }
                    else {
                        focusedMakeModel = null;
                        if (searchtext.trim() != "") {
                            $('#errPinCodeSearch').show();
                            self.pincode(0);
                        }
                    }
                },
                keyup: function () {
                    if ($('#getPinCode').val().trim() != '' && $('li.ui-state-focus a:visible').text() != "") {
                        focusedMakeModel = new Object();
                        focusedMakeModel = objPinCodes.result ? objPinCodes.result[$('li.ui-state-focus').index()] : null;
                        $('#errPinCodeSearch').hide();
                    } else {
                        if ($('#getPinCode').val().trim() == '') {
                            $('#errPinCodeSearch').hide();
                        }
                    }

                    if ($('#getPinCode').val().trim() == '' || e.keyCode == 27 || e.keyCode == 13) {
                        if (focusedMakeModel == null || focusedMakeModel == undefined) {
                            if ($('#getPinCode').val().trim() != '') {
                                $('#errPinCodeSearch').show();
                                self.pincode(0);
                            }
                        }
                        else {
                            $('#errPinCodeSearch').hide();
                        }

                    }
                }
            }).autocomplete({ appendTo: $("#getPinCode").closest(".input-box") }).autocomplete("widget").addClass("pincode-autocomplete");
        };

        self.checkPinCode = function (pinCode) {
            isValid = false;
            $.ajax({
                async: false,
                type: "GET",
                url: "/api/autosuggest/?source=4&inputText=" + pinCode + "&noofrecords=5",
                contentType: "application/json",
                dataType: "json",
                success: function (data) {
                    if (data && data.suggestionList.length > 0) {
                        $('#getPinCode').val(data.suggestionList[0].text);
                        self.pincode(data.suggestionList[0].payload.pinCodeId);
                        isValid = true;
                    }
                    else {
                        validate.setError($('#getPinCode'), 'Invalid pincode');
                        self.pincode(0);
                        isValid = false;
                    }
                }
            });
            return isValid;
        };

        self.validateUserInfo = function (inputName, inputEmail, inputMobile) {
            var isValid = true;
            isValid = self.validateUserName(inputName);

            isValid &= self.validateEmailId(inputEmail);

            isValid &= self.validateMobileNo(inputMobile);
            isValid &= self.validateCity();

            if (self.dealersRequired()) {
                isValid &= self.validateDealer();
            }

            if (self.pinCodeRequired()) {
                isValid &= self.validatePinCode();
            }

            if (self.isDealerBikes())
                isValid &= self.validateBike();

            return isValid;
        };

        self.validateDealer = function (inputName) {
            var isValid = false;
            if ($('#ddlMfgDealers :selected').text() == "") {
                validate.setError($('#ddlMfgDealers'), 'Please select dealer');
            }
            else {
                isValid = true;
            }
            return isValid;
        };

        self.validateUserName = function (inputName) {
            var isValid = false;
            if (self.fullName() != null && self.fullName().trim() != "") {
                var nameLength = self.fullName().length;

                if (self.fullName().indexOf('&') != -1) {
                    validate.setError($(inputName), 'Invalid name');
                    isValid = false;
                }
                else if (nameLength >= 1) {
                    validate.hideError($(inputName));
                    isValid = true;
                }
            }
            else {
                validate.setError($(inputName), 'Please enter your name');
                isValid = false;
            }
            return isValid;
        };

        self.validateEmailId = function (inputEmail) {
            var isValid = true,
                emailVal = $(inputEmail).val(),
                reEmail = /^[A-z0-9._+-]+@@[A-z0-9.-]+\.[A-z]{2,6}$/;

            if (self.emailOption() == 'Required' && emailVal == "") {
                validate.setError($(inputEmail), 'Please enter email id');
                isValid = false;
            }
            else if (emailVal == "") {
                isValid = true;
            }
            else if (!reEmail.test(emailVal)) {
                validate.setError($(inputEmail), 'Invalid Email');
                isValid = false;
            }
            return isValid;
        };

        self.validatePinCode = function () {
            var leadPinCode = $('#getPinCode'), isValid = true,
                pinCodeValue = leadPinCode.val().trim(),
                rePinCode = /^[1-9][0-9]{5}$/;

            if (pinCodeValue.indexOf(',') > 0)
                pinCodeValue = pinCodeValue.substring(0, 6);

            if (pinCodeValue == "") {
                validate.setError(leadPinCode, 'Please enter pincode');
                isValid = false;
            }
            else if (!rePinCode.test(pinCodeValue)) {
                validate.setError(leadPinCode, 'Invalid pincode');
                isValid = false;
            }

            if (isValid) isValid &= self.checkPinCode(pinCodeValue);

            return isValid;
        };

        self.validateMobileNo = function (inputMobile) {

            mobileVal = $(inputMobile).val();
            if (!validateMobileNo(mobileVal, self)) {
                validate.setError($(inputMobile), self.msg);
                return false;
            }
            else {
                validate.hideError($(inputMobile));
                return true;
            }
        };

        self.validateBike = function () {
            var isValid = true;
            eleBike = $("#getLeadBike");
            if (eleBike != null && self.selectedBike() != null) {
                if (self.selectedBike().model && self.selectedBike().model.modelId > 0) {
                    hideError(eleBike);
                    isValid = true;
                }
                else {
                    setError(eleBike, 'Select a bike');
                    isValid = false;
                }
            }
            else {
                setError(eleBike, 'Select a bike');
                isValid = false;
            }

            return isValid;
        };

        self.validateCity = function () {
            var isValid = true;
            eleCity = $("#getLeadCity");
            if (eleCity != null && self.cityId() != null) {
                if (self.cityId() > 0) {
                    hideError(eleCity);
                    isValid = true;
                }
                else {
                    setError(eleCity, 'Select a city');
                    isValid = false;
                }
            }
            else {
                setError(eleCity, 'Select a city');
                isValid = false;
            }

            return isValid;
        };

        self.setInputValues = function () {
            var inputBoxes = $('.personal-info-form-container .input-box, #buyingAssistance .input-box');
            for (var i = 0; i < inputBoxes.length; i++) {
                var item = $(inputBoxes[i]),
                    inputValue = item.find('input').val();

                if (inputValue.length > 0) {
                    item.addClass('not-empty');
                }

            }
        };

        self.showLoader = function () {
            $('#ub-ajax-loader').show();
        };

        self.hideLoader = function () {
            $('#ub-ajax-loader').hide();
        };

        self.triggerABTestGA = function (galabel) {
            try {
                var abuser = getCookie("_bwtest"), pgSource = (gaObj ? gaObj.id : 0);
                triggerGA("Lead_PopUP", "Lead_Success", abuser + "_" + pgSource + "_" + galabel || '');
            }
            catch (e) {
                console.log(e.message);
            }
        };

    }


    function setuserDetails() {
        var cookieName = "_PQUser";
        if (cookieName != undefined && cookieName != null && cookieName != "" && cookieName != "-1") {
            var keyValue = document.cookie.match('(^|;) ?' + cookieName + '=([^;]*)(;|$)');
            var arr = keyValue ? keyValue[2].split("&") : null;
            return arr;
        }
    }

    function setPQUserCookie() {
        var val = dleadvm.fullName() + '&' + dleadvm.emailId() + '&' + dleadvm.mobileNo();
        SetCookie("_PQUser", val);
    }

    var setError = function (element, msg) {
        element.addClass("border-red").siblings("span.errorIcon, div.errorText").show();
        element.siblings("div.errorText").show().text(msg);
        validate.setError(element, 'Please select a bike');
    };

    var hideError = function (element) {
        element.removeClass("border-red").siblings("span.errorIcon, div.errorText").hide();
        validate.setError(element, '');
    };

    function startLoading(ele) {
        try {
            var _self = $(ele).find(".progress-bar").css({ 'width': '0' }).show();
            _self.animate({ width: '100%' }, 500);
        }
        catch (e) { return };
    }

    function stopLoading(ele) {
        try {
            var _self = $(ele).find(".progress-bar");
            _self.stop(true, true).css({ 'width': '100%' }).fadeOut(1000);
        }
        catch (e) { return };
    }

    docReady(function () {
        leadBtnBookNow = $(".leadcapturebtn"), leadCapturePopup = $("#leadCapturePopup"), leadBike = $("#getLeadBike");
        fullName = $("#getFullName"), emailid = $("#getEmailID"), mobile = $("#getMobile");
        assistanceGetName = $('#assistanceGetName'), assistanceGetEmail = $('#assistanceGetEmail'), assistanceGetMobile = $('#assistanceGetMobile');
        detailsSubmitBtn = $("#user-details-submit-btn");
        if (FbPixelEvent)
        {
            fbPixelLeadEvent = FbPixelEvent.lead;
        }
        /* form validation */
        validate = {
            setError: function (element, message) {
                if (element.val()) {
                    var elementLength = element.val().length;
                }
                var errorTag = element.siblings('span.error-text');
                errorTag.text(message);
                if (!elementLength) {
                    element.closest('.input-box').removeClass('not-empty').addClass('invalid');

                }
                else {
                    element.closest('.input-box').addClass('not-empty invalid');
                }
            },

            hideError: function (element) {
                element.closest('.input-box').removeClass('invalid').addClass('not-empty');
                element.siblings('span.error-text').text('');
            },

            onFocus: function (inputField) {
                if (inputField.closest('.input-box').hasClass('invalid')) {
                    validate.hideError(inputField);
                }
            },

            onBlur: function (inputField) {
                var inputLength = inputField.val().length;
                if (!inputLength) {
                    inputField.closest('.input-box').removeClass('not-empty');
                }
                else {
                    inputField.closest('.input-box').addClass('not-empty');
                }
            }
        };

        function closeLeadPopup() {
            LeadPopupState.close();
            popup.unlock();
        }

        $(document).on('click', ".leadcapturebtn", function () {
            LeadPopupState.open();
            @if (Model.IsMLAActive && !Model.IsManufacturerCampaign)
            {
                <text>
            if(gaObj.id == gaEnum.Model_Page || gaObj.id == gaEnum.DealerPriceQuote_Page)
                {
                    triggerNonInteractiveGA(gaObj.name,"MLA_Eligible_Lead_Popup_Shown",  "@Model.BikeName" + "_" +  "@Model.City" + "_" + "@Model.Area");
                }
                </text>
            }
            popup.lock();
        });

        $(".leadCapture-close-btn").on("click", function (event) {
            dleadvm.triggerCloseBtnGA(event);
            closeLeadPopup();
        });

        $(".blackOut-window, .dealers__skip-btn, .dealers__submit-btn").on("click mouseup", function () {
            closeLeadPopup();
        });

        $(document).on('click', '#dealer-lead-msg #notifyOkayBtn', function () {
            closeLeadPopup();
        });

        $(document).on('keydown', function (e) {
            if (e.keyCode === 27) {
                closeLeadPopup();
            }
        });

        $("#dealer-assist-msg .assistance-response-close").on("click", function () {
            $("#dealer-assist-msg").parent().slideUp();
        });

        $("#getFullName, #assistGetName").on("focus", function () {
            validate.onFocus($(this));
        });

        $("#getEmailID, #assistGetEmail").on("focus", function () {
            validate.onFocus($(this));
            prevEmail = $(this).val().trim();
        });

        $("#getMobile, #assistGetMobile").on("focus", function () {
            validate.onFocus($(this));
            prevMobile = $(this).val().trim();
        });

        $(document).on("focus", "#getPinCode", function () {
            validate.onFocus($(this));
            prevPinCode = $(this).val().trim().substring(0, 6);
        });

        $("#getFullName, #assistGetName").on("blur", function () {
            validate.onBlur($(this));
        });

        $("#getMobile, #assistGetMobile").on("blur", function () {
            validate.onBlur($(this));
            if (prevMobile != $(this).val().trim()) {
                if (dleadvm.validateMobileNo($(this))) {
                    dleadvm.IsVerified(false);
                }
            }
        });

        $(document).on("blur", "#getPinCode", function () {
            validate.onBlur($(this));
            var pc = $(this).val().trim();
            if (pc.indexOf(',') > 0)
                pc = pc.substring(0, 6);
            if (pc.length > 0 && !(/^[1-9][0-9]{5}$/.test(pc))) {
                validate.setError($("#getPinCode"), 'Invalid pincode');
            }
        });

        $(document).on("change", "#getLeadBike", function () {
            if ($(this).val() != null && $(this).val() != "0")
                hideError($(this));
            else setError($(this));
        });

        $("#getEmailID, #assistGetEmail").on("blur", function () {
            validate.onBlur($(this));
            if (prevEmail != $(this).val().trim()) {
                if (dleadvm.validateEmailId($(this))) {
                    dleadvm.IsVerified(false);
                }
            }
        });

        dleadvm = new leadModel();
        ko.applyBindings(dleadvm, document.getElementById("leadCapturePopup"));

        if ($("#dealerAssistance") && $("#dealerAssistance").length > 0) {
            ko.applyBindings(dleadvm, document.getElementById("dealerAssistance"));
        }

        if ($("#getPinCode") && $("#getPinCode").length > 0) {
            dleadvm.setPinCodeSuggestion();
        }

        dleadvm.setInputValues();

    });
</script>
