using System;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Xml;
using Bikewale.Common;
using System.Data;
using System.Data.SqlClient;

namespace Bikewale.New
{
    /// <summary>
    ///     Created By : Ashish G. Kamble on 18 Nov 2012
    ///     Class to create upcoming bikes feed
    /// </summary>
    public class UpcomingBikesFeed : System.Web.UI.Page
    {
        XmlTextWriter writer;
        DataSet ds = new DataSet();

        protected override void OnInit(EventArgs e)
        {
            base.Load += new EventHandler(this.Page_Load);
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                writer = new XmlTextWriter(Response.OutputStream, System.Text.Encoding.UTF8);
                GetUpcomingBikesFeed();
            }
        }

        /// <summary>
        /// Get the list of Upcoming Bikes and add to RSS
        /// </summary>
        private void GetUpcomingBikesFeed()
        {
            Database db = new Database();
            using (SqlCommand cmd = new SqlCommand("GetUpcomingBikesList"))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                using (DataTable dt = db.SelectAdaptQry(cmd).Tables[0])
                {
                    if (dt.Rows.Count > 0)
                    {
                        WriteRSSPrologue();
                        for (int index = 0; index < dt.Rows.Count; index++)
                        {
                            //Create the items in the RSS documents in the Channel element.
                            AddRSSItem(
                                dt.Rows[index]["ExpectedLaunchId"].ToString(),
                                dt.Rows[index]["BikeName"].ToString(),
                                "http://www.bikewale.com/" + dt.Rows[index]["MakeMaskingName"].ToString().ToLower() + "-bikes/" + dt.Rows[index]["ModelMaskingName"].ToString().ToLower() + "/",
                                dt.Rows[index]["ExpectedLaunch"].ToString(),
                                dt.Rows[index]["EstimatedPriceMin"].ToString(),
                                dt.Rows[index]["EstimatedPriceMax"].ToString(),
                                //Bikewale.Common.ImagingFunctions.GetImagePath("/cars/") + dt.Rows[index]["LargePic"].ToString(),
                                Bikewale.Common.ImagingFunctions.GetPathToShowImages(dt.Rows[index]["LargePicImagePath"].ToString(), dt.Rows[index]["HostURL"].ToString()),
                                dt.Rows[index]["Description"].ToString().Replace("\n", "").Replace("\r", "").Replace("\t", ""), "", ""
                                //dt.Rows[index]["UpdatedDate"].ToString(),
                                //dt.Rows[index]["CWConfidenceText"].ToString()
                                );
                        }
                        WriteRSSClosing();

                        writer.Flush();
                        writer.Close();

                        Response.ContentEncoding = System.Text.Encoding.UTF8;
                        Response.ContentType = "text/xml";
                        Response.Cache.SetCacheability(HttpCacheability.Public);
                    }
                }
            }
        }

        /// <summary>
        /// Writes the beginning of a RSS document to an XmlTextWriter
        /// </summary>                      
        public void WriteRSSPrologue()
        {
            writer.WriteStartDocument();
            //writer.WriteComment("RSS generated by BikeWale at " + DateTime.Now.ToString("r"));
            writer.WriteStartElement("rss");
            writer.WriteAttributeString("version", "2.0");
            writer.WriteAttributeString("xmlns:atom", "http://www.w3.org/2005/Atom");
            writer.WriteAttributeString("xmlns:bw", "http://www.bikewale.com/cwChannelModule");
            writer.WriteStartElement("channel");
            writer.WriteElementString("title", "Upcoming Bikes in India - Expected Launches in India");
            writer.WriteElementString("link", "http://www.bikewale.com/upcoming-bikes/");
            writer.WriteElementString("description", "Find out upcoming new bikes in India. From small to super-luxury, from announced to highly speculated models, from near future to end of year, know about every upcoming bike launch in India this year.");
            writer.WriteElementString("copyright", "Copyright 2012 BikeWale");
            writer.WriteElementString("generator", "BikeWale RSS Generator");
            writer.WriteStartElement("atom:link");
            writer.WriteAttributeString("href", "http://www.bikewale.com/upcoming-bikes/feed/");
            writer.WriteAttributeString("rel", "self");
            writer.WriteAttributeString("type", "application/rss+xml");
            writer.WriteEndElement();
        }

        /// <summary>
        /// Adds a single item to the XmlTextWriter supplied
        /// </summary>
        /// <param name="eLId">The Id of the RSS item</param>
        /// <param name="eLBikeName">The Name of the Bike</param>
        /// <param name="eLURL">The URL of the Bike</param>
        /// <param name="eLLaunchDate">The Date on which the Bike is launched</param>
        /// <param name="eLExpMinPrice">Min Expected Price of the Bike</param>
        /// <param name="eLExpMaxPrice">Max Expected Price of the Bike</param>
        /// <param name="eLLargeImg">Large image of the Bike</param>
        /// <param name="eLDescription">The description of the upcoming Bike</param>
        /// <param name="eLUpdatedOn">The date on which the entry was updated</param>
        /// <param name="eLCWConfidence">The BikeWale Confidence value</param>
        public void AddRSSItem(string eLId, string eLBikeName, string eLURL, string eLLaunchDate, string eLExpMinPrice, string eLExpMaxPrice,
            string eLLargeImg, string eLDescription, string eLUpdatedOn, string eLCWConfidence)
        {
            writer.WriteStartElement("item");
            writer.WriteElementString("bw:id", eLId);
            writer.WriteStartElement("title");
            writer.WriteCData(eLBikeName);
            writer.WriteEndElement();
            writer.WriteElementString("link", eLURL);
            writer.WriteElementString("guid", eLURL);
            writer.WriteElementString("bw:launchDate", eLLaunchDate);
            writer.WriteElementString("bw:expectedMinPrice", eLExpMinPrice);
            writer.WriteElementString("bw:expectedMaxPrice", eLExpMaxPrice);
            writer.WriteElementString("bw:largeImg", eLLargeImg);
            writer.WriteStartElement("description");
            writer.WriteCData(eLDescription);
            writer.WriteEndElement();
            writer.WriteElementString("bw:lastUpdatedOn", eLUpdatedOn);
            writer.WriteElementString("bw:cwConfidence", eLCWConfidence);
            writer.WriteEndElement();
        }

        /// <summary>
        /// Finishes up the XmlTextWriter by closing open elements and the document itself
        /// </summary>          
        public void WriteRSSClosing()
        {
            writer.WriteEndElement();
            writer.WriteEndElement();
            writer.WriteEndDocument();
        }

    }   // End of class
}   // End of namesapce