¡
;D:\work\bikewaleweb\Bikewale.Cache.Core\CacheRefreshTime.cs
	namespace 	
Bikewale
 
. 
Cache 
. 
Core 
{		 
public 

class 
CacheRefreshTime !
{ 
public 
static 
TimeSpan 
GetInMinutes +
(+ ,
string, 2
key3 6
)6 7
{ 	
string 
refreshTime 
=   
ConfigurationManager! 5
.5 6
AppSettings6 A
[A B
keyB E
]E F
;F G
return 
string 
. 
IsNullOrEmpty '
(' (
refreshTime( 3
)3 4
?5 6
DefaultRefreshTime7 I
(I J
)J K
:L M
TimeSpanN V
.V W
FromMinutesW b
(b c
Convertc j
.j k
ToDoublek s
(s t
refreshTimet 
)	 Ä
)
Ä Å
;
Å Ç
} 	
public 
static 
TimeSpan 
DefaultRefreshTime 1
(1 2
)2 3
{   	
return!! 
new!! 
TimeSpan!! 
(!!  
$num!!  !
,!!! "
$num!!# %
,!!% &
$num!!' (
)!!( )
;!!) *
}"" 	
}## 
}$$ ã
8D:\work\bikewaleweb\Bikewale.Cache.Core\ICacheManager.cs
	namespace 	
Bikewale
 
. 

Interfaces 
. 
Cache #
.# $
Core$ (
{ 
public 

	interface 
ICacheManager "
{ 
T 	
GetFromCache
 
< 
T 
> 
( 
string  
key! $
,$ %
TimeSpan& .
cacheDuration/ <
,< =
Func> B
<B C
TC D
>D E

dbCallbackF P
)P Q
;Q R
T		 	
GetFromCache		
 
<		 
T		 
>		 
(		 
string		  
key		! $
,		$ %
TimeSpan		& .
cacheDuration		/ <
,		< =
Func		> B
<		B C
T		C D
>		D E

dbCallback		F P
,		P Q
out		R U
bool		V Z
isDataFromCache		[ j
)		j k
;		k l
void

 
RefreshCache

 
(

 
string

  
key

! $
)

$ %
;

% &
IEnumerable 
< 
T 
> 
GetListFromCache '
<' (
T( )
>) *
(* +
IDictionary+ 6
<6 7
string7 =
,= >
string> D
>D E
keyValuePairF R
,R S
TimeSpanT \
cacheDuration] j
,j k
Funcl p
<p q
stringq w
,w x
IEnumerable	y Ñ
<
Ñ Ö
T
Ö Ü
>
Ü á
>
á à

doCallback
â ì
)
ì î
;
î ï
} 
} Ò'
<D:\work\bikewaleweb\Bikewale.Cache.Core\LocalcacheManager.cs
	namespace 	
Bikewale
 
. 
Cache 
. 
Core 
{ 
public 

class 
LocalcacheManager "
:# $
ICacheManager% 2
{		 
public

 
T

 
GetFromCache

 
<

 
T

 
>

  
(

  !
string

! '
key

( +
,

+ ,
TimeSpan

- 5
cacheDuration

6 C
,

C D
Func

E I
<

I J
T

J K
>

K L
callback

M U
)

U V
{ 	
T 
t 
= 
default 
( 
T 
) 
; 
try 
{ 
if 
( 
HttpContext 
.  
Current  '
.' (
Cache( -
[- .
key. 1
]1 2
==3 5
null6 :
): ;
{ 
lock 
( 
this 
) 
{ 
if 
( 
HttpContext '
.' (
Current( /
./ 0
Cache0 5
[5 6
key6 9
]9 :
==; =
null> B
)B C
{ 
t 
= 
callback  (
(( )
)) *
;* +
HttpContext '
.' (
Current( /
./ 0
Cache0 5
.5 6
Insert6 <
(< =
key= @
,@ A
tB C
,C D
nullE I
,I J
SystemK Q
.Q R
WebR U
.U V
CachingV ]
.] ^
Cache^ c
.c d 
NoAbsoluteExpirationd x
,x y
cacheDuration	z á
)
á à
;
à â
} 
else 
{ 
HttpContext '
.' (
Current( /
./ 0
Trace0 5
.5 6
Warn6 :
(: ;
$str; L
)L M
;M N
t 
= 
(  !
T! "
)" #
HttpContext# .
.. /
Current/ 6
.6 7
Cache7 <
[< =
key= @
]@ A
;A B
} 
}   
}!! 
else"" 
{## 
HttpContext%% 
.%%  
Current%%  '
.%%' (
Trace%%( -
.%%- .
Warn%%. 2
(%%2 3
$str%%3 D
)%%D E
;%%E F
t&& 
=&& 
(&& 
T&& 
)&& 
HttpContext&& &
.&&& '
Current&&' .
.&&. /
Cache&&/ 4
[&&4 5
key&&5 8
]&&8 9
;&&9 :
}'' 
}(( 
catch)) 
()) 
	Exception)) 
ex)) 
)))  
{** 
}-- 
return// 
t// 
;// 
}00 	
public22 
void22 
RefreshCache22  
(22  !
string22! '
key22( +
)22+ ,
{33 	
try44 
{55 
lock66 
(66 
this66 
)66 
{77 
HttpContext99 
.99  
Current99  '
.99' (
Cache99( -
.99- .
Remove99. 4
(994 5
key995 8
)998 9
;999 :
}:: 
};; 
catch<< 
(<< 
	Exception<< 
ex<< 
)<<  
{== 
}@@ 
}AA 	
publicDD 
TDD 
GetFromCacheDD 
<DD 
TDD 
>DD  
(DD  !
stringDD! '
keyDD( +
,DD+ ,
TimeSpanDD- 5
cacheDurationDD6 C
,DDC D
FuncDDE I
<DDI J
TDDJ K
>DDK L

dbCallbackDDM W
,DDW X
outDDY \
boolDD] a
isDataFromCacheDDb q
)DDq r
{EE 	
throwFF 
newFF #
NotImplementedExceptionFF -
(FF- .
)FF. /
;FF/ 0
}GG 	
publicII 
IEnumerableII 
<II 
TII 
>II 
GetListFromCacheII .
<II. /
TII/ 0
>II0 1
(II1 2
IDictionaryII2 =
<II= >
stringII> D
,IID E
stringIIF L
>IIL M
keyValuePairIIN Z
,IIZ [
TimeSpanII\ d
cacheDurationIIe r
,IIr s
FuncIIt x
<IIx y
stringIIy 
,	II Ä
IEnumerable
IIÅ å
<
IIå ç
T
IIç é
>
IIé è
>
IIè ê

doCallback
IIë õ
)
IIõ ú
{JJ 	
throwKK 
newKK #
NotImplementedExceptionKK -
(KK- .
)KK. /
;KK/ 0
}LL 	
}MM 
}NN Ï∞
6D:\work\bikewaleweb\Bikewale.Cache.Core\MemcacheLog.cs
	namespace		 	
Bikewale		
 
.		 
Cache		 
.		 
Core		 
{

 
class 	
MemcacheLog
 
: 
Enyim 
. 
Caching %
.% &
ILog& *
{ 
private 
ILog 
log 
; 
bool 
Enyim 
. 
Caching 
. 
ILog 
.  
IsDebugEnabled  .
{ 	
get 
{ 
return 
this 
. 
log 
.  
IsDebugEnabled  .
;. /
} 
} 	
bool 
Enyim 
. 
Caching 
. 
ILog 
.  
IsErrorEnabled  .
{ 	
get 
{ 
return 
this 
. 
log 
.  
IsErrorEnabled  .
;. /
} 
} 	
bool   
Enyim   
.   
Caching   
.   
ILog   
.    
IsFatalEnabled    .
{!! 	
get"" 
{## 
return$$ 
this$$ 
.$$ 
log$$ 
.$$  
IsFatalEnabled$$  .
;$$. /
}%% 
}&& 	
bool(( 
Enyim(( 
.(( 
Caching(( 
.(( 
ILog(( 
.((  
IsInfoEnabled((  -
{)) 	
get** 
{++ 
return,, 
this,, 
.,, 
log,, 
.,,  
IsInfoEnabled,,  -
;,,- .
}-- 
}.. 	
bool00 
Enyim00 
.00 
Caching00 
.00 
ILog00 
.00  
IsWarnEnabled00  -
{11 	
get22 
{33 
return44 
this44 
.44 
log44 
.44  
IsWarnEnabled44  -
;44- .
}55 
}66 	
public88 
MemcacheLog88 
(88 
ILog88 
log88  #
)88# $
{99 	
this:: 
.:: 
log:: 
=:: 
log:: 
;:: 
};; 	
void== 
Enyim== 
.== 
Caching== 
.== 
ILog== 
.==  
Debug==  %
(==% &
object==& ,
message==- 4
)==4 5
{>> 	
this?? 
.?? 
log?? 
.?? 
Debug?? 
(?? 
message?? "
)??" #
;??# $
}@@ 	
voidBB 
EnyimBB 
.BB 
CachingBB 
.BB 
ILogBB 
.BB  
DebugBB  %
(BB% &
objectBB& ,
messageBB- 4
,BB4 5
	ExceptionBB6 ?
	exceptionBB@ I
)BBI J
{CC 	
thisDD 
.DD 
logDD 
.DD 
DebugDD 
(DD 
messageDD "
,DD" #
	exceptionDD$ -
)DD- .
;DD. /
}EE 	
voidGG 
EnyimGG 
.GG 
CachingGG 
.GG 
ILogGG 
.GG  
DebugFormatGG  +
(GG+ ,
stringGG, 2
formatGG3 9
,GG9 :
objectGG; A
arg0GGB F
)GGF G
{HH 	
thisII 
.II 
logII 
.II 
DebugFormatII  
(II  !
formatII! '
,II' (
arg0II) -
)II- .
;II. /
}JJ 	
voidLL 
EnyimLL 
.LL 
CachingLL 
.LL 
ILogLL 
.LL  
DebugFormatLL  +
(LL+ ,
stringLL, 2
formatLL3 9
,LL9 :
objectLL; A
arg0LLB F
,LLF G
objectLLH N
arg1LLO S
)LLS T
{MM 	
thisNN 
.NN 
logNN 
.NN 
DebugFormatNN  
(NN  !
formatNN! '
,NN' (
arg0NN) -
,NN- .
arg1NN/ 3
)NN3 4
;NN4 5
}OO 	
voidQQ 
EnyimQQ 
.QQ 
CachingQQ 
.QQ 
ILogQQ 
.QQ  
DebugFormatQQ  +
(QQ+ ,
stringQQ, 2
formatQQ3 9
,QQ9 :
objectQQ; A
arg0QQB F
,QQF G
objectQQH N
arg1QQO S
,QQS T
objectQQU [
arg2QQ\ `
)QQ` a
{RR 	
thisSS 
.SS 
logSS 
.SS 
DebugFormatSS  
(SS  !
formatSS! '
,SS' (
arg0SS) -
,SS- .
arg1SS/ 3
,SS3 4
arg2SS5 9
)SS9 :
;SS: ;
}TT 	
voidVV 
EnyimVV 
.VV 
CachingVV 
.VV 
ILogVV 
.VV  
DebugFormatVV  +
(VV+ ,
stringVV, 2
formatVV3 9
,VV9 :
paramsVV; A
objectVVB H
[VVH I
]VVI J
argsVVK O
)VVO P
{WW 	
thisXX 
.XX 
logXX 
.XX 
DebugFormatXX  
(XX  !
formatXX! '
,XX' (
argsXX) -
)XX- .
;XX. /
}YY 	
void[[ 
Enyim[[ 
.[[ 
Caching[[ 
.[[ 
ILog[[ 
.[[  
DebugFormat[[  +
([[+ ,
IFormatProvider[[, ;
provider[[< D
,[[D E
string[[F L
format[[M S
,[[S T
params[[U [
object[[\ b
[[[b c
][[c d
args[[e i
)[[i j
{\\ 	
this]] 
.]] 
log]] 
.]] 
DebugFormat]]  
(]]  !
provider]]! )
,]]) *
format]]+ 1
,]]1 2
args]]3 7
)]]7 8
;]]8 9
}^^ 	
void`` 
Enyim`` 
.`` 
Caching`` 
.`` 
ILog`` 
.``  
Error``  %
(``% &
object``& ,
message``- 4
)``4 5
{aa 	
thisbb 
.bb 
logbb 
.bb 
Errorbb 
(bb 
messagebb "
)bb" #
;bb# $
}dd 	
voidff 
Enyimff 
.ff 
Cachingff 
.ff 
ILogff 
.ff  
Errorff  %
(ff% &
objectff& ,
messageff- 4
,ff4 5
	Exceptionff6 ?
	exceptionff@ I
)ffI J
{gg 	
thishh 
.hh 
loghh 
.hh 
Errorhh 
(hh 
messagehh "
,hh" #
	exceptionhh$ -
)hh- .
;hh. /
}ii 	
voidkk 
Enyimkk 
.kk 
Cachingkk 
.kk 
ILogkk 
.kk  
ErrorFormatkk  +
(kk+ ,
stringkk, 2
formatkk3 9
,kk9 :
objectkk; A
arg0kkB F
)kkF G
{ll 	
thismm 
.mm 
logmm 
.mm 
ErrorFormatmm  
(mm  !
formatmm! '
,mm' (
arg0mm) -
)mm- .
;mm. /
}nn 	
voidpp 
Enyimpp 
.pp 
Cachingpp 
.pp 
ILogpp 
.pp  
ErrorFormatpp  +
(pp+ ,
stringpp, 2
formatpp3 9
,pp9 :
objectpp; A
arg0ppB F
,ppF G
objectppH N
arg1ppO S
)ppS T
{qq 	
thisrr 
.rr 
logrr 
.rr 
ErrorFormatrr  
(rr  !
formatrr! '
,rr' (
arg0rr) -
,rr- .
arg1rr/ 3
)rr3 4
;rr4 5
}ss 	
voiduu 
Enyimuu 
.uu 
Cachinguu 
.uu 
ILoguu 
.uu  
ErrorFormatuu  +
(uu+ ,
stringuu, 2
formatuu3 9
,uu9 :
objectuu; A
arg0uuB F
,uuF G
objectuuH N
arg1uuO S
,uuS T
objectuuU [
arg2uu\ `
)uu` a
{vv 	
thisww 
.ww 
logww 
.ww 
ErrorFormatww  
(ww  !
formatww! '
,ww' (
arg0ww) -
,ww- .
arg1ww/ 3
,ww3 4
arg2ww5 9
)ww9 :
;ww: ;
}xx 	
voidzz 
Enyimzz 
.zz 
Cachingzz 
.zz 
ILogzz 
.zz  
ErrorFormatzz  +
(zz+ ,
stringzz, 2
formatzz3 9
,zz9 :
paramszz; A
objectzzB H
[zzH I
]zzI J
argszzK O
)zzO P
{{{ 	
this|| 
.|| 
log|| 
.|| 
ErrorFormat||  
(||  !
format||! '
,||' (
args||) -
)||- .
;||. /
}}} 	
void 
Enyim 
. 
Caching 
. 
ILog 
.  
ErrorFormat  +
(+ ,
IFormatProvider, ;
provider< D
,D E
stringF L
formatM S
,S T
paramsU [
object\ b
[b c
]c d
argse i
)i j
{
ÄÄ 	
this
ÅÅ 
.
ÅÅ 
log
ÅÅ 
.
ÅÅ 
ErrorFormat
ÅÅ  
(
ÅÅ  !
provider
ÅÅ! )
,
ÅÅ) *
format
ÅÅ+ 1
,
ÅÅ1 2
args
ÅÅ3 7
)
ÅÅ7 8
;
ÅÅ8 9
}
ÇÇ 	
void
ÑÑ 
Enyim
ÑÑ 
.
ÑÑ 
Caching
ÑÑ 
.
ÑÑ 
ILog
ÑÑ 
.
ÑÑ  
Fatal
ÑÑ  %
(
ÑÑ% &
object
ÑÑ& ,
message
ÑÑ- 4
)
ÑÑ4 5
{
ÖÖ 	
this
ÜÜ 
.
ÜÜ 
log
ÜÜ 
.
ÜÜ 
Fatal
ÜÜ 
(
ÜÜ 
message
ÜÜ "
)
ÜÜ" #
;
ÜÜ# $
}
áá 	
void
ââ 
Enyim
ââ 
.
ââ 
Caching
ââ 
.
ââ 
ILog
ââ 
.
ââ  
Fatal
ââ  %
(
ââ% &
object
ââ& ,
message
ââ- 4
,
ââ4 5
	Exception
ââ6 ?
	exception
ââ@ I
)
ââI J
{
ää 	
this
ãã 
.
ãã 
log
ãã 
.
ãã 
Fatal
ãã 
(
ãã 
message
ãã "
,
ãã" #
	exception
ãã$ -
)
ãã- .
;
ãã. /
}
åå 	
void
éé 
Enyim
éé 
.
éé 
Caching
éé 
.
éé 
ILog
éé 
.
éé  
FatalFormat
éé  +
(
éé+ ,
string
éé, 2
format
éé3 9
,
éé9 :
object
éé; A
arg0
ééB F
)
ééF G
{
èè 	
this
êê 
.
êê 
log
êê 
.
êê 
FatalFormat
êê  
(
êê  !
format
êê! '
,
êê' (
arg0
êê) -
)
êê- .
;
êê. /
}
ëë 	
void
ìì 
Enyim
ìì 
.
ìì 
Caching
ìì 
.
ìì 
ILog
ìì 
.
ìì  
FatalFormat
ìì  +
(
ìì+ ,
string
ìì, 2
format
ìì3 9
,
ìì9 :
object
ìì; A
arg0
ììB F
,
ììF G
object
ììH N
arg1
ììO S
)
ììS T
{
îî 	
this
ïï 
.
ïï 
log
ïï 
.
ïï 
FatalFormat
ïï  
(
ïï  !
format
ïï! '
,
ïï' (
arg0
ïï) -
,
ïï- .
arg1
ïï/ 3
)
ïï3 4
;
ïï4 5
}
ññ 	
void
òò 
Enyim
òò 
.
òò 
Caching
òò 
.
òò 
ILog
òò 
.
òò  
FatalFormat
òò  +
(
òò+ ,
string
òò, 2
format
òò3 9
,
òò9 :
object
òò; A
arg0
òòB F
,
òòF G
object
òòH N
arg1
òòO S
,
òòS T
object
òòU [
arg2
òò\ `
)
òò` a
{
ôô 	
this
öö 
.
öö 
log
öö 
.
öö 
FatalFormat
öö  
(
öö  !
format
öö! '
,
öö' (
arg0
öö) -
,
öö- .
arg1
öö/ 3
,
öö3 4
arg2
öö5 9
)
öö9 :
;
öö: ;
}
õõ 	
void
ùù 
Enyim
ùù 
.
ùù 
Caching
ùù 
.
ùù 
ILog
ùù 
.
ùù  
FatalFormat
ùù  +
(
ùù+ ,
string
ùù, 2
format
ùù3 9
,
ùù9 :
params
ùù; A
object
ùùB H
[
ùùH I
]
ùùI J
args
ùùK O
)
ùùO P
{
ûû 	
this
üü 
.
üü 
log
üü 
.
üü 
FatalFormat
üü  
(
üü  !
format
üü! '
,
üü' (
args
üü) -
)
üü- .
;
üü. /
}
†† 	
void
¢¢ 
Enyim
¢¢ 
.
¢¢ 
Caching
¢¢ 
.
¢¢ 
ILog
¢¢ 
.
¢¢  
FatalFormat
¢¢  +
(
¢¢+ ,
IFormatProvider
¢¢, ;
provider
¢¢< D
,
¢¢D E
string
¢¢F L
format
¢¢M S
,
¢¢S T
params
¢¢U [
object
¢¢\ b
[
¢¢b c
]
¢¢c d
args
¢¢e i
)
¢¢i j
{
££ 	
this
§§ 
.
§§ 
log
§§ 
.
§§ 
FatalFormat
§§  
(
§§  !
provider
§§! )
,
§§) *
format
§§+ 1
,
§§1 2
args
§§3 7
)
§§7 8
;
§§8 9
}
•• 	
void
ßß 
Enyim
ßß 
.
ßß 
Caching
ßß 
.
ßß 
ILog
ßß 
.
ßß  
Info
ßß  $
(
ßß$ %
object
ßß% +
message
ßß, 3
)
ßß3 4
{
®® 	
this
©© 
.
©© 
log
©© 
.
©© 
Info
©© 
(
©© 
message
©© !
)
©©! "
;
©©" #
}
™™ 	
void
¨¨ 
Enyim
¨¨ 
.
¨¨ 
Caching
¨¨ 
.
¨¨ 
ILog
¨¨ 
.
¨¨  
Info
¨¨  $
(
¨¨$ %
object
¨¨% +
message
¨¨, 3
,
¨¨3 4
	Exception
¨¨5 >
	exception
¨¨? H
)
¨¨H I
{
≠≠ 	
this
ÆÆ 
.
ÆÆ 
log
ÆÆ 
.
ÆÆ 
Info
ÆÆ 
(
ÆÆ 
message
ÆÆ !
,
ÆÆ! "
	exception
ÆÆ# ,
)
ÆÆ, -
;
ÆÆ- .
}
ØØ 	
void
±± 
Enyim
±± 
.
±± 
Caching
±± 
.
±± 
ILog
±± 
.
±±  

InfoFormat
±±  *
(
±±* +
string
±±+ 1
format
±±2 8
,
±±8 9
object
±±: @
arg0
±±A E
)
±±E F
{
≤≤ 	
this
≥≥ 
.
≥≥ 
log
≥≥ 
.
≥≥ 

InfoFormat
≥≥ 
(
≥≥  
format
≥≥  &
,
≥≥& '
arg0
≥≥( ,
)
≥≥, -
;
≥≥- .
}
¥¥ 	
void
∂∂ 
Enyim
∂∂ 
.
∂∂ 
Caching
∂∂ 
.
∂∂ 
ILog
∂∂ 
.
∂∂  

InfoFormat
∂∂  *
(
∂∂* +
string
∂∂+ 1
format
∂∂2 8
,
∂∂8 9
object
∂∂: @
arg0
∂∂A E
,
∂∂E F
object
∂∂G M
arg1
∂∂N R
)
∂∂R S
{
∑∑ 	
this
∏∏ 
.
∏∏ 
log
∏∏ 
.
∏∏ 

InfoFormat
∏∏ 
(
∏∏  
format
∏∏  &
,
∏∏& '
arg0
∏∏( ,
,
∏∏, -
arg1
∏∏. 2
)
∏∏2 3
;
∏∏3 4
}
ππ 	
void
ªª 
Enyim
ªª 
.
ªª 
Caching
ªª 
.
ªª 
ILog
ªª 
.
ªª  

InfoFormat
ªª  *
(
ªª* +
string
ªª+ 1
format
ªª2 8
,
ªª8 9
object
ªª: @
arg0
ªªA E
,
ªªE F
object
ªªG M
arg1
ªªN R
,
ªªR S
object
ªªT Z
arg2
ªª[ _
)
ªª_ `
{
ºº 	
this
ΩΩ 
.
ΩΩ 
log
ΩΩ 
.
ΩΩ 

InfoFormat
ΩΩ 
(
ΩΩ  
format
ΩΩ  &
,
ΩΩ& '
arg0
ΩΩ( ,
,
ΩΩ, -
arg1
ΩΩ. 2
,
ΩΩ2 3
arg2
ΩΩ4 8
)
ΩΩ8 9
;
ΩΩ9 :
}
ææ 	
void
¿¿ 
Enyim
¿¿ 
.
¿¿ 
Caching
¿¿ 
.
¿¿ 
ILog
¿¿ 
.
¿¿  

InfoFormat
¿¿  *
(
¿¿* +
string
¿¿+ 1
format
¿¿2 8
,
¿¿8 9
params
¿¿: @
object
¿¿A G
[
¿¿G H
]
¿¿H I
args
¿¿J N
)
¿¿N O
{
¡¡ 	
this
¬¬ 
.
¬¬ 
log
¬¬ 
.
¬¬ 

InfoFormat
¬¬ 
(
¬¬  
format
¬¬  &
,
¬¬& '
args
¬¬( ,
)
¬¬, -
;
¬¬- .
}
√√ 	
void
≈≈ 
Enyim
≈≈ 
.
≈≈ 
Caching
≈≈ 
.
≈≈ 
ILog
≈≈ 
.
≈≈  

InfoFormat
≈≈  *
(
≈≈* +
IFormatProvider
≈≈+ :
provider
≈≈; C
,
≈≈C D
string
≈≈E K
format
≈≈L R
,
≈≈R S
params
≈≈T Z
object
≈≈[ a
[
≈≈a b
]
≈≈b c
args
≈≈d h
)
≈≈h i
{
∆∆ 	
this
«« 
.
«« 
log
«« 
.
«« 

InfoFormat
«« 
(
««  
provider
««  (
,
««( )
format
««* 0
,
««0 1
args
««2 6
)
««6 7
;
««7 8
}
»» 	
void
   
Enyim
   
.
   
Caching
   
.
   
ILog
   
.
    
Warn
    $
(
  $ %
object
  % +
message
  , 3
)
  3 4
{
ÀÀ 	
this
ÃÃ 
.
ÃÃ 
log
ÃÃ 
.
ÃÃ 
Warn
ÃÃ 
(
ÃÃ 
message
ÃÃ !
)
ÃÃ! "
;
ÃÃ" #
}
ÕÕ 	
void
œœ 
Enyim
œœ 
.
œœ 
Caching
œœ 
.
œœ 
ILog
œœ 
.
œœ  
Warn
œœ  $
(
œœ$ %
object
œœ% +
message
œœ, 3
,
œœ3 4
	Exception
œœ5 >
	exception
œœ? H
)
œœH I
{
–– 	
this
—— 
.
—— 
log
—— 
.
—— 
Warn
—— 
(
—— 
message
—— !
,
——! "
	exception
——# ,
)
——, -
;
——- .
}
““ 	
void
‘‘ 
Enyim
‘‘ 
.
‘‘ 
Caching
‘‘ 
.
‘‘ 
ILog
‘‘ 
.
‘‘  

WarnFormat
‘‘  *
(
‘‘* +
string
‘‘+ 1
format
‘‘2 8
,
‘‘8 9
object
‘‘: @
arg0
‘‘A E
)
‘‘E F
{
’’ 	
this
÷÷ 
.
÷÷ 
log
÷÷ 
.
÷÷ 

WarnFormat
÷÷ 
(
÷÷  
format
÷÷  &
,
÷÷& '
arg0
÷÷( ,
)
÷÷, -
;
÷÷- .
}
◊◊ 	
void
ŸŸ 
Enyim
ŸŸ 
.
ŸŸ 
Caching
ŸŸ 
.
ŸŸ 
ILog
ŸŸ 
.
ŸŸ  

WarnFormat
ŸŸ  *
(
ŸŸ* +
string
ŸŸ+ 1
format
ŸŸ2 8
,
ŸŸ8 9
object
ŸŸ: @
arg0
ŸŸA E
,
ŸŸE F
object
ŸŸG M
arg1
ŸŸN R
)
ŸŸR S
{
⁄⁄ 	
this
€€ 
.
€€ 
log
€€ 
.
€€ 

WarnFormat
€€ 
(
€€  
format
€€  &
,
€€& '
arg0
€€( ,
,
€€, -
arg1
€€. 2
)
€€2 3
;
€€3 4
}
‹‹ 	
void
ﬁﬁ 
Enyim
ﬁﬁ 
.
ﬁﬁ 
Caching
ﬁﬁ 
.
ﬁﬁ 
ILog
ﬁﬁ 
.
ﬁﬁ  

WarnFormat
ﬁﬁ  *
(
ﬁﬁ* +
string
ﬁﬁ+ 1
format
ﬁﬁ2 8
,
ﬁﬁ8 9
object
ﬁﬁ: @
arg0
ﬁﬁA E
,
ﬁﬁE F
object
ﬁﬁG M
arg1
ﬁﬁN R
,
ﬁﬁR S
object
ﬁﬁT Z
arg2
ﬁﬁ[ _
)
ﬁﬁ_ `
{
ﬂﬂ 	
this
‡‡ 
.
‡‡ 
log
‡‡ 
.
‡‡ 

WarnFormat
‡‡ 
(
‡‡  
format
‡‡  &
,
‡‡& '
arg0
‡‡( ,
,
‡‡, -
arg1
‡‡. 2
,
‡‡2 3
arg2
‡‡4 8
)
‡‡8 9
;
‡‡9 :
}
·· 	
void
„„ 
Enyim
„„ 
.
„„ 
Caching
„„ 
.
„„ 
ILog
„„ 
.
„„  

WarnFormat
„„  *
(
„„* +
string
„„+ 1
format
„„2 8
,
„„8 9
params
„„: @
object
„„A G
[
„„G H
]
„„H I
args
„„J N
)
„„N O
{
‰‰ 	
this
ÂÂ 
.
ÂÂ 
log
ÂÂ 
.
ÂÂ 

WarnFormat
ÂÂ 
(
ÂÂ  
format
ÂÂ  &
,
ÂÂ& '
args
ÂÂ( ,
)
ÂÂ, -
;
ÂÂ- .
}
ÊÊ 	
void
ËË 
Enyim
ËË 
.
ËË 
Caching
ËË 
.
ËË 
ILog
ËË 
.
ËË  

WarnFormat
ËË  *
(
ËË* +
IFormatProvider
ËË+ :
provider
ËË; C
,
ËËC D
string
ËËE K
format
ËËL R
,
ËËR S
params
ËËT Z
object
ËË[ a
[
ËËa b
]
ËËb c
args
ËËd h
)
ËËh i
{
ÈÈ 	
this
ÍÍ 
.
ÍÍ 
log
ÍÍ 
.
ÍÍ 

WarnFormat
ÍÍ 
(
ÍÍ  
provider
ÍÍ  (
,
ÍÍ( )
format
ÍÍ* 0
,
ÍÍ0 1
args
ÍÍ2 6
)
ÍÍ6 7
;
ÍÍ7 8
}
ÎÎ 	
}
ÏÏ 
}ÌÌ §
=D:\work\bikewaleweb\Bikewale.Cache.Core\MemcacheLogFactory.cs
	namespace 	
Bikewale
 
. 
Cache 
. 
Core 
{		 
class

 	
MemcacheLogFactory


 
:

 
Enyim

 #
.

# $
Caching

$ +
.

+ ,
ILogFactory

, 7
{ 
public 
MemcacheLogFactory !
(! "
)" #
{ 	
} 	
Enyim 
. 
Caching 
. 
ILog 
Enyim  
.  !
Caching! (
.( )
ILogFactory) 4
.4 5
	GetLogger5 >
(> ?
string? E
nameF J
)J K
{ 	
return 
new 
MemcacheLog "
(" #

LogManager# -
.- .
	GetLogger. 7
(7 8
name8 <
)< =
)= >
;> ?
} 	
Enyim 
. 
Caching 
. 
ILog 
Enyim  
.  !
Caching! (
.( )
ILogFactory) 4
.4 5
	GetLogger5 >
(> ?
Type? C
typeD H
)H I
{ 	
return 
new 
MemcacheLog "
(" #

LogManager# -
.- .
	GetLogger. 7
(7 8
type8 <
)< =
)= >
;> ?
} 	
} 
} ™á
:D:\work\bikewaleweb\Bikewale.Cache.Core\MemcacheManager.cs
	namespace

 	
Bikewale


 
.

 
Cache

 
.

 
Core

 
{ 
public 

class 
MemcacheManager  
:! "
ICacheManager# 0
{ 
private 
static 
MemcachedClient &
mc' )
=* +
null, 0
;0 1
private 
bool 
_useMemcached "
;" #
public 
MemcacheManager 
( 
)  
{ 	
bool 
. 
TryParse 
(  
ConfigurationManager .
.. /
AppSettings/ :
[: ;
$str; L
]L M
.M N
ToLowerN U
(U V
)V W
,W X
outY \
_useMemcached] j
)j k
;k l

LogManager 
. 
AssignFactory $
($ %
new% (
MemcacheLogFactory) ;
(; <
)< =
)= >
;> ?
if 
( 
mc 
== 
null 
&& 
_useMemcached +
)+ ,
{ 
mc 
= 
new 
MemcachedClient (
(( )
$str) 4
)4 5
;5 6
} 
} 	
private 
IList 
< 
T 
> 
	GetFromDb "
<" #
T# $
>$ %
(% &
IDictionary& 1
<1 2
string2 8
,8 9
string: @
>@ A
keyValuePairB N
,N O
TimeSpanP X
cacheDurationY f
,f g
Funch l
<l m
stringm s
,s t
IEnumerable	u Ä
<
Ä Å
T
Å Ç
>
Ç É
>
É Ñ

doCallback
Ö è
)
è ê
{ 	
IList 
< 
T 
> 
list 
= 
null  
;  !
try 
{ 
var   
dataList   
=   

doCallback   )
(  ) *
String  * 0
.  0 1
Join  1 5
(  5 6
$str  6 9
,  9 :
keyValuePair  ; G
.  G H
Keys  H L
.  L M
ToArray  M T
(  T U
)  U V
)  V W
)  W X
;  X Y
if"" 
("" 
dataList"" 
!="" 
null""  $
&&""% '
dataList""( 0
.""0 1
Count""1 6
(""6 7
)""7 8
>""9 :
$num""; <
)""< =
{## 
list$$ 
=$$ 
dataList$$ #
.$$# $
ToList$$$ *
($$* +
)$$+ ,
;$$, -
if%% 
(%% 
_useMemcached%% %
&&%%& (
list%%) -
.%%- .
Count%%. 3
>%%4 5
$num%%6 7
&&%%8 :
keyValuePair%%; G
.%%G H
Count%%H M
==%%N P
list%%Q U
.%%U V
Count%%V [
)%%[ \
{&& 
int'' 
i'' 
='' 
$num''  !
;''! "
foreach(( 
(((  !
var((! $
item((% )
in((* ,
keyValuePair((- 9
)((9 :
{)) 
if** 
(**  
mc**  "
.**" #
Store**# (
(**( )
	StoreMode**) 2
.**2 3
Add**3 6
,**6 7
item**8 <
.**< =
Value**= B
+**C D
$str**E L
,**L M
$str**N T
,**T U
DateTime**V ^
.**^ _
Now**_ b
.**b c

AddSeconds**c m
(**m n
$num**n p
)**p q
)**q r
)**r s
{++ 
var,,  #
data,,$ (
=,,) *
list,,+ /
[,,/ 0
i,,0 1
++,,1 3
],,3 4
;,,4 5
if--  "
(--# $
data--$ (
!=--) +
null--, 0
)--0 1
{..  !
mc//$ &
.//& '
Store//' ,
(//, -
	StoreMode//- 6
.//6 7
Add//7 :
,//: ;
item//< @
.//@ A
Value//A F
,//F G
data//H L
,//L M
DateTime//N V
.//V W
Now//W Z
.//Z [
Add//[ ^
(//^ _
cacheDuration//_ l
)//l m
)//m n
;//n o
}00  !
mc11  "
.11" #
Remove11# )
(11) *
item11* .
.11. /
Value11/ 4
+115 6
$str117 >
)11> ?
;11? @
}22 
}33 
}44 
}55 
}66 
catch77 
(77 
	Exception77 
)77 
{77 
}77  !
return99 
list99 
;99 
}:: 	
public<< 
T<< 
GetFromCache<< 
<<< 
T<< 
><<  
(<<  !
string<<! '
key<<( +
,<<+ ,
TimeSpan<<- 5
cacheDuration<<6 C
,<<C D
Func<<E I
<<<I J
T<<J K
><<K L

dbCallback<<M W
)<<W X
{== 	
T>> 
t>> 
=>> 
default>> 
(>> 
T>> 
)>> 
;>> 
try@@ 
{AA 
ifBB 
(BB 
_useMemcachedBB !
)BB! "
{CC 
tDD 
=DD 
(DD 
TDD 
)DD 
mcDD 
.DD 
GetDD !
(DD! "
keyDD" %
)DD% &
;DD& '
ifEE 
(EE 
tEE 
==EE 
nullEE !
)EE! "
{FF 
ifGG 
(GG 
mcGG 
.GG 
StoreGG $
(GG$ %
	StoreModeGG% .
.GG. /
AddGG/ 2
,GG2 3
keyGG4 7
+GG8 9
$strGG: A
,GGA B
$strGGC I
,GGI J
DateTimeGGK S
.GGS T
NowGGT W
.GGW X

AddSecondsGGX b
(GGb c
$numGGc e
)GGe f
)GGf g
)GGg h
{HH 
tII 
=II 

dbCallbackII  *
(II* +
)II+ ,
;II, -
ifKK 
(KK  
tKK  !
!=KK" $
nullKK% )
)KK) *
{LL 
mcMM  "
.MM" #
StoreMM# (
(MM( )
	StoreModeMM) 2
.MM2 3
AddMM3 6
,MM6 7
keyMM8 ;
,MM; <
tMM= >
,MM> ?
DateTimeMM@ H
.MMH I
NowMMI L
.MML M
AddMMM P
(MMP Q
cacheDurationMMQ ^
)MM^ _
)MM_ `
;MM` a
}NN 
mcPP 
.PP 
RemovePP %
(PP% &
keyPP& )
+PP* +
$strPP, 3
)PP3 4
;PP4 5
}QQ 
elseRR 
{SS 
tTT 
=TT 

dbCallbackTT  *
(TT* +
)TT+ ,
;TT, -
}UU 
returnWW 
tWW  
;WW  !
}XX 
elseYY 
returnZZ 
tZZ  
;ZZ  !
}[[ 
else\\ 
{]] 
t^^ 
=^^ 

dbCallback^^ "
(^^" #
)^^# $
;^^$ %
}__ 
}`` 
catchaa 
(aa 
	Exceptionaa 
exaa 
)aa  
{bb 
}ee 
finallyff 
{gg 
ifhh 
(hh 
thh 
==hh 
nullhh 
)hh 
{ii 
tjj 
=jj 

dbCallbackjj "
(jj" #
)jj# $
;jj$ %
}kk 
}ll 
returnnn 
tnn 
;nn 
}oo 	
publicqq 
Tqq 
GetFromCacheqq 
<qq 
Tqq 
>qq  
(qq  !
stringqq! '
keyqq( +
,qq+ ,
TimeSpanqq- 5
cacheDurationqq6 C
,qqC D
FuncqqE I
<qqI J
TqqJ K
>qqK L

dbCallbackqqM W
,qqW X
outqqY \
boolqq] a
isDataFromCacheqqb q
)qqq r
{rr 	
Tss 
tss 
=ss 
defaultss 
(ss 
Tss 
)ss 
;ss 
isDataFromCachett 
=tt 
falsett #
;tt# $
tryuu 
{vv 
ifww 
(ww 
_useMemcachedww !
)ww! "
{xx 
tyy 
=yy 
(yy 
Tyy 
)yy 
mcyy 
.yy 
Getyy !
(yy! "
keyyy" %
)yy% &
;yy& '
ifzz 
(zz 
tzz 
==zz 
nullzz !
)zz! "
{{{ 
if|| 
(|| 
mc|| 
.|| 
Store|| $
(||$ %
	StoreMode||% .
.||. /
Add||/ 2
,||2 3
key||4 7
+||8 9
$str||: A
,||A B
$str||C I
,||I J
DateTime||K S
.||S T
Now||T W
.||W X

AddSeconds||X b
(||b c
$num||c e
)||e f
)||f g
)||g h
{}} 
t~~ 
=~~ 

dbCallback~~  *
(~~* +
)~~+ ,
;~~, -
if
ÄÄ 
(
ÄÄ  
t
ÄÄ  !
!=
ÄÄ" $
null
ÄÄ% )
)
ÄÄ) *
{
ÅÅ 
mc
ÇÇ  "
.
ÇÇ" #
Store
ÇÇ# (
(
ÇÇ( )
	StoreMode
ÇÇ) 2
.
ÇÇ2 3
Add
ÇÇ3 6
,
ÇÇ6 7
key
ÇÇ8 ;
,
ÇÇ; <
t
ÇÇ= >
,
ÇÇ> ?
DateTime
ÇÇ@ H
.
ÇÇH I
Now
ÇÇI L
.
ÇÇL M
Add
ÇÇM P
(
ÇÇP Q
cacheDuration
ÇÇQ ^
)
ÇÇ^ _
)
ÇÇ_ `
;
ÇÇ` a
}
ÉÉ 
mc
ÖÖ 
.
ÖÖ 
Remove
ÖÖ %
(
ÖÖ% &
key
ÖÖ& )
+
ÖÖ* +
$str
ÖÖ, 3
)
ÖÖ3 4
;
ÖÖ4 5
}
ÜÜ 
else
áá 
{
àà 
t
ââ 
=
ââ 

dbCallback
ââ  *
(
ââ* +
)
ââ+ ,
;
ââ, -
}
ää 
return
åå 
t
åå  
;
åå  !
}
çç 
else
éé 
{
èè 
isDataFromCache
êê '
=
êê( )
true
êê* .
;
êê. /
return
ëë 
t
ëë  
;
ëë  !
}
íí 
}
ìì 
else
îî 
{
ïï 
t
ññ 
=
ññ 

dbCallback
ññ "
(
ññ" #
)
ññ# $
;
ññ$ %
}
óó 
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
ex
ôô 
)
ôô  
{
öö 
}
ùù 
finally
ûû 
{
üü 
if
†† 
(
†† 
t
†† 
==
†† 
null
†† 
)
†† 
{
°° 
t
¢¢ 
=
¢¢ 

dbCallback
¢¢ "
(
¢¢" #
)
¢¢# $
;
¢¢$ %
}
££ 
}
§§ 
return
¶¶ 
t
¶¶ 
;
¶¶ 
}
ßß 	
public
©© 
void
©© 
RefreshCache
©©  
(
©©  !
string
©©! '
key
©©( +
)
©©+ ,
{
™™ 	
mc
´´ 
.
´´ 
Remove
´´ 
(
´´ 
key
´´ 
)
´´ 
;
´´ 
}
¨¨ 	
public
ÆÆ 
IEnumerable
ÆÆ 
<
ÆÆ 
T
ÆÆ 
>
ÆÆ 
GetListFromCache
ÆÆ .
<
ÆÆ. /
T
ÆÆ/ 0
>
ÆÆ0 1
(
ÆÆ1 2
IDictionary
ÆÆ2 =
<
ÆÆ= >
string
ÆÆ> D
,
ÆÆD E
string
ÆÆF L
>
ÆÆL M
keyValuePair
ÆÆN Z
,
ÆÆZ [
TimeSpan
ÆÆ\ d
cacheDuration
ÆÆe r
,
ÆÆr s
Func
ÆÆt x
<
ÆÆx y
string
ÆÆy 
,ÆÆ Ä
IEnumerableÆÆÅ å
<ÆÆå ç
TÆÆç é
>ÆÆé è
>ÆÆè ê

doCallbackÆÆë õ
)ÆÆõ ú
{
ØØ 	
List
∞∞ 
<
∞∞ 
T
∞∞ 
>
∞∞ 
t
∞∞ 
=
∞∞ 
default
∞∞ 
(
∞∞  
List
∞∞  $
<
∞∞$ %
T
∞∞% &
>
∞∞& '
)
∞∞' (
;
∞∞( )
IDictionary
±± 
<
±± 
string
±± 
,
±± 
string
±±  &
>
±±& '
kv
±±( *
=
±±+ ,
new
±±- 0

Dictionary
±±1 ;
<
±±; <
string
±±< B
,
±±B C
string
±±D J
>
±±J K
(
±±K L
)
±±L M
;
±±M N
try
≤≤ 
{
≥≥ 
t
¥¥ 
=
¥¥ 
new
¥¥ 
List
¥¥ 
<
¥¥ 
T
¥¥ 
>
¥¥ 
(
¥¥  
)
¥¥  !
;
¥¥! "
if
µµ 
(
µµ 
_useMemcached
µµ !
)
µµ! "
{
∂∂ 
foreach
∑∑ 
(
∑∑ 
var
∑∑  
item
∑∑! %
in
∑∑& (
keyValuePair
∑∑) 5
)
∑∑5 6
{
∏∏ 
var
ππ 
val
ππ 
=
ππ  !
(
ππ" #
T
ππ# $
)
ππ$ %
mc
ππ% '
.
ππ' (
Get
ππ( +
(
ππ+ ,
item
ππ, 0
.
ππ0 1
Value
ππ1 6
)
ππ6 7
;
ππ7 8
if
∫∫ 
(
∫∫ 
val
∫∫ 
==
∫∫  "
null
∫∫# '
)
∫∫' (
{
ªª 
kv
ºº 
.
ºº 
Add
ºº "
(
ºº" #
item
ºº# '
)
ºº' (
;
ºº( )
}
ΩΩ 
else
ææ 
{
øø 
t
¿¿ 
.
¿¿ 
Add
¿¿ !
(
¿¿! "
val
¿¿" %
)
¿¿% &
;
¿¿& '
}
¡¡ 
}
¬¬ 
if
√√ 
(
√√ 
kv
√√ 
!=
√√ 
null
√√ "
&&
√√# %
kv
√√& (
.
√√( )
Count
√√) .
>
√√/ 0
$num
√√1 2
)
√√2 3
{
ƒƒ 
IList
≈≈ 
<
≈≈ 
T
≈≈ 
>
≈≈  
list
≈≈! %
=
≈≈& '
	GetFromDb
≈≈( 1
(
≈≈1 2
kv
≈≈2 4
,
≈≈4 5
cacheDuration
≈≈6 C
,
≈≈C D

doCallback
≈≈E O
)
≈≈O P
;
≈≈P Q
if
∆∆ 
(
∆∆ 
list
∆∆  
!=
∆∆! #
null
∆∆$ (
&&
∆∆) +
list
∆∆, 0
.
∆∆0 1
Count
∆∆1 6
>
∆∆7 8
$num
∆∆9 :
)
∆∆: ;
{
«« 
t
»» 
.
»» 
AddRange
»» &
(
»»& '
list
»»' +
)
»»+ ,
;
»», -
}
…… 
}
   
}
ÀÀ 
else
ÃÃ 
{
ÕÕ 
IList
ŒŒ 
<
ŒŒ 
T
ŒŒ 
>
ŒŒ 
list
ŒŒ !
=
ŒŒ" #
	GetFromDb
ŒŒ$ -
(
ŒŒ- .
keyValuePair
ŒŒ. :
,
ŒŒ: ;
cacheDuration
ŒŒ< I
,
ŒŒI J

doCallback
ŒŒK U
)
ŒŒU V
;
ŒŒV W
t
œœ 
=
œœ 
list
œœ 
!=
œœ 
null
œœ  $
?
œœ% &
list
œœ' +
.
œœ+ ,
ToList
œœ, 2
(
œœ2 3
)
œœ3 4
:
œœ5 6
null
œœ7 ;
;
œœ; <
}
–– 
}
—— 
catch
““ 
(
““ 
	Exception
““ 
ex
““ 
)
““  
{
”” 

ErrorClass
‘‘ 
objErr
‘‘ !
=
‘‘" #
new
‘‘$ '

ErrorClass
‘‘( 2
(
‘‘2 3
ex
‘‘3 5
,
‘‘5 6
$str
‘‘7 U
)
‘‘U V
;
‘‘V W
}
’’ 
finally
÷÷ 
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
t
ÿÿ 
!=
ÿÿ 
null
ÿÿ 
&&
ÿÿ  
t
ÿÿ! "
.
ÿÿ" #
Count
ÿÿ# (
==
ÿÿ) +
$num
ÿÿ, -
)
ÿÿ- .
{
ŸŸ 
IList
⁄⁄ 
<
⁄⁄ 
T
⁄⁄ 
>
⁄⁄ 
list
⁄⁄ !
=
⁄⁄" #
	GetFromDb
⁄⁄$ -
(
⁄⁄- .
keyValuePair
⁄⁄. :
,
⁄⁄: ;
cacheDuration
⁄⁄< I
,
⁄⁄I J

doCallback
⁄⁄K U
)
⁄⁄U V
;
⁄⁄V W
t
€€ 
=
€€ 
list
€€ 
!=
€€ 
null
€€  $
?
€€% &
list
€€' +
.
€€+ ,
ToList
€€, 2
(
€€2 3
)
€€3 4
:
€€5 6
null
€€7 ;
;
€€; <
}
‹‹ 
}
›› 
return
ﬁﬁ 
t
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
}
‡‡ 
}·· Ì
BD:\work\bikewaleweb\Bikewale.Cache.Core\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str .
). /
]/ 0
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *