@model BikewaleOpr.Models.ManagePrices.PriceMonitoringVM
@using BikewaleOpr.Entity.BikePricing;
@using BikewaleOpr.Entities.BikeData;
@using Newtonsoft.Json;
@{
    IEnumerable<PriceLastUpdateEntity> priceLastUpdatedList = null;
    IEnumerable<BikewaleOpr.Entities.MfgCityEntity> cityList = null;
    IEnumerable<BikeVersionEntityBase> bikeVersionList = null;
    if (Model != null)
    {
        priceLastUpdatedList = Model.PriceLastUpdatedList;
        cityList = Model.CityList;
        bikeVersionList = Model.BikeVersionList;
    }
}

@if (Model != null)
{
    {
        ViewBag.Title = "Price Monitoring Report";
        ViewBag.PageTitle = Model.PageTitle;
    }

    <div class="row" style="margin-top:5px;">
        <div class="col s10 m10">
            @if (priceLastUpdatedList != null && priceLastUpdatedList.Count() != 0 && cityList != null && bikeVersionList != null)
            {
                <div id="priceMonitoringTable" class="fixed-table z-depth-3">
					<div class="sidebar-header">City</div>
                    <div class="fixed-table__header">
                        <table class="table centered highlight">
                            <thead>
                                <tr>
                                    @foreach (var bikeVersion in bikeVersionList)
                                    {
                                        <th>@bikeVersion.VersionName</th>
                                    }
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="fixed-table__sidebar">
                        <table class="table  highlight">
                            <tbody>
                                @foreach (var city in cityList)
                                {
                                    <tr>
                                        <td><b>@city.CityName</b> </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="fixed-table__body">
                        <table class="table centered highlight">
                            <tbody>
                                @{
                                    IEnumerator<PriceLastUpdateEntity> enumerator = priceLastUpdatedList.GetEnumerator();
                                    uint days = 0;
                                    string color = string.Empty;
                                    string textcolor = string.Empty;
                                    string daysString = string.Empty;
                                    foreach (var city in cityList)
                                    {
                                        <tr>
                                            @foreach (var bike in bikeVersionList)
                                            {
                                                if (enumerator.MoveNext())
                                                {
                                                    days = enumerator.Current.LastUpdated;
                                                    textcolor = string.Empty;
                                                    if (days <= 7)
                                                    {
                                                        color = "green darken-4";
                                                    }
                                                    else if (days > 7 && days <= 15)
                                                    {
                                                        color = "yellow accent-4";
                                                        textcolor = "black-text";
                                                    }
                                                    else if (days > 15 && days <= 30)
                                                    {
                                                        color = "orange";
                                                    }
                                                    else
                                                    {
                                                        color = "red accent-4";
                                                    }
                                                    daysString = Convert.ToString(days);
                                                    if (city.CityId != enumerator.Current.CityId && bike.VersionId != enumerator.Current.BikeVersionId)
                                                    {
                                                        color = "black";
                                                        daysString = "NA";
                                                    }
                                                    <td class="@color tooltipped" data-position="bottom" data-tooltip="Price For : @city.CityName, Version : @bike.VersionName">
                                                        <a class="@(textcolor != string.Empty ? "black-text" : "white-text")" target="_blank" href=@string.Format("/content/ShowroomPrices.aspx?state={0}&city={1}&make={2}", Model.StateId, city.CityId, Model.MakeId)>
                                                            @daysString
                                                        </a>
                                                    </td>
                                                }
                                            }
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                                    }
        </div>
        <div id="makeModelContainer" class="col s2 m2">
            <ul class="collapsible" data-collapsible="accordion">
                <li>
                    <div class="collapsible-header active"><b>Show Price</b></div>
                    <div class="collapsible-body">
                        @using (Html.BeginForm("Submit", "PriceMonitoring", FormMethod.Post))
                        {
                            <div class="container">
                                <div class="input-field row s12">
                                    <select id="ddlStates" name="stateId" data-stateid="@Model.StateId" data-bind="value : selectedState">
                                        <option value="0">Select State</option>
                                        @if (Model.States != null)
                                        {
                                            foreach (var state in Model.States)
                                            {
                                                <option value="@state.StateId" @(state.StateId == Model.StateId ? "selected" : "")>@state.StateName</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="input-field row s12">
                                    <select id="ddlMakes" name="makeId" data-bind="value : selectedMake, event:{change: selectMake}">
                                        <option value="0">Select Make</option>
                                        @if (Model.BikeMakes != null)
                                        {
                                            foreach (var make in Model.BikeMakes)
                                            {
                                                <option value="@make.MakeId" @(make.MakeId == Model.MakeId ? "selected" : "")>@make.MakeName</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="input-field row s12">
                                    <input id="hdnModelList" type="hidden" value="@(JsonConvert.SerializeObject(Model.BikeModelList))">
                                    <select id="ddlModels" name="modelId" data-modelid="@Model.ModelId" data-bind="value:selectedModel, options:modelList, optionsText:'modelName',optionsValue:'modelId', optionsCaption : 'Select Model'"></select>
                                </div>
                                <div class="input-field row s12">
                                    <button id="btnShow" class="btn waves-effect waves-light" type="submit" data-bind="enable : selectedState() > 0  && selectedMake() > 0  && selectedModel() >= 0">
                                        Show
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </li>
            </ul>
        </div>
        <div class="col s2 m2 @(priceLastUpdatedList != null && priceLastUpdatedList.Count() != 0? "" : "offset-m10 offset-s10")">
            <div class="card">
                <div class="card-content">
                    <span class="card-title"><b class="card-title-font14">Price Last Updated Codes</b></span>
                    <ul class="collection">
                        <li class="collection-item green darken-4 white-text">Less than or equal to 7 days</li>
                        <li class="collection-item yellow accent-4"><b>Between 7 Days and 15 Days</b></li>
                        <li class="collection-item orange white-text">Between 15 Days and 1 Month</li>
                        <li class="collection-item red accent-4 white-text">More Than 1 Month</li>
                        <li class="collection-item black white-text">NA</li>
                    </ul>
                </div>
            </div>
        </div>
        <script type="text/javascript" src="~/src/ManagePrice/pricemonitoring.js"></script>
    </div>
                                    }