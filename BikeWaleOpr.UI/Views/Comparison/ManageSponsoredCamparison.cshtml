@model BikewaleOpr.Models.Comparison.ManageSponsoredComparisonVM
@{
    ViewBag.Title = "Manage Sponsored Comparisons";
    ViewBag.PageTitle = "Manage Sponsored Comparisons";
}

<div id="sponsoredComparisons" class="row margin-top10">
    <div class="col m10">
        <div id="tblCampaigns" class="" data-BwOprHostUrl="@System.Configuration.ConfigurationManager.AppSettings["BwOprHostUrlForJs"]">
            <table class="bordered highlight z-depth-3 centered responsive-table" id="sponsoredComparisonsList">
                <tr>
                    <th>Id</th>
                    <th>Description</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>LinkText</th>
                    <th>LinkUrl</th>
                    <th>Name Impression</th>
                    <th>Image Impression</th>
                    <th>Comparison Status</th>
                    <th>Rules</th>
                    <th>Updated On</th>
                    <th>Updated By</th>
                    <th>Edit</th>
                </tr>
                <tbody>
                    @foreach (var comp in Model.Sponsoredcomparisons)
                    {
                        <tr>
                            <td data-cell="id">@comp.Id</td>
                            <td data-cell="description">@comp.Name</td>
                            <td data-cell="startdate">@(comp.StartDate != null && comp.StartDate != DateTime.MinValue ? comp.StartDate.ToString("dd MMM yyyy, hh:mm tt") : "")
                            <td data-cell="enddate">@(comp.EndDate != null && comp.EndDate != DateTime.MinValue ? comp.EndDate.ToString("dd MMM yyyy, hh:mm tt") : "")</td>
                            <td data-cell="linktext">@comp.LinkText</td>
                            <td data-cell="linkurl">@comp.LinkUrl</td>
                            <td data-cell="nameimpression">@comp.NameImpressionUrl</td>
                            <td data-cell="imgimpression">@comp.ImgImpressionUrl</td>
                            <td>
                                <span>@comp.Status</span>
                                <p>
                                    @if (comp.Status.Equals(Bikewale.Comparison.Entities.SponsoredComparisonStatus.Active))
                                    {

                                        <a href="javascript:void(0)" data-bind="click : function(d,e){ changeComparisonStatus(d,e); }" class="tooltipped" data-status="4" data-position="bottom" data-delay="50" data-tooltip="Pause Campaign"><i class="material-icons icon-blue">pause_circle_filled</i></a>

                                            <a  href="javascript:void(0)" data-bind="click : function(d,e){ changeComparisonStatus(d,e); }" data-status="6" class="tooltipped" data-position="bottom" data-delay="50" data-tooltip="Abort Campaign" title="Abort Campaign"><i class="material-icons icon-red">cancel</i></a>
                                    }
                                    else
                                    {
                                        <a  href="javascript:void(0)" data-bind="click : function(d,e){ changeComparisonStatus(d,e); }" data-status="2" class="tooltipped" data-position="bottom" data-delay="50" data-tooltip="Start Campaign"><i class="material-icons icon-green">play_circle_filled</i></a>

                                    }

                                </p>
                            </td>
                            <td>Yes</td>
                            <td>@(comp.LastUpdated != null && comp.LastUpdated != DateTime.MinValue ? comp.LastUpdated.ToString("dd MMM yyyy, hh:mm tt") : "")</td>
                            <td>@comp.UpdatedBy</td>
                            <td><a href="javascript:void(0)" data-bind="click : editSponsoredCamparison"><i class="material-icons icon-blue">mode_edit</i></a></td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>

    <div class="col m2">
        <ul class="collapsible" data-collapsible="accordion">
            <li>
                <div class="collapsible-header"><strong>Search Comparisons</strong></div>
                <div class="collapsible-body">
                    <div class="container">
                        @using (Html.BeginForm("ManageSponsoredCamparison", "Comparison", FormMethod.Get))
                        {
                            <ul class="input-field row m12" id="searchComparisons">
                                <li>
                                    <input type="checkbox" id="chkActiveStatus" data-value="2" class="with-gap" />
                                    <label for="chkActiveStatus">Active</label>
                                </li>
                                <li>
                                    <input type="checkbox" id="chkUnstartedStatus" data-value="1" class="with-gap" />
                                    <label for="chkUnstartedStatus">Unstarted</label>
                                </li>
                                <li class="margin-top5">
                                    <input type="checkbox" id="chkPausedStatus" data-value="3" class="with-gap" />
                                    <label for="chkPausedStatus">Paused</label>
                                </li>
                                <li class="margin-top5">
                                    <input type="checkbox" id="chkAbortedStatus" data-value="5" class="with-gap" />
                                    <label for="chkAbortedStatus">Aborted</label>
                                </li>
                                <li class="margin-top5">
                                    <input type="checkbox" id="chkExpiredStatus" data-value="4" class="with-gap" />
                                    <label for="chkExpiredStatus">Closed</label>
                                </li>
                                <li class="margin-top5">
                                    <input type="checkbox" id="chkAllStatus" data-value="0" class="with-gap" data-bind="click : checkAllStatus" />
                                    <label for="chkAllStatus">All</label>
                                </li>
                                <li class="margin-top5">
                                    <button type="submit" data-bind="click: searchSponsoredCamparisons" id="btnSearchCamparisons" class="margin-top20 btn waves-effect waves-light" name="comparisonType" value="">
                                        Search Campaign
                                    </button>
                                </li>

                            </ul>
                        }
                    </div>
                </div>
            </li>
            <li>
                <div class="collapsible-header"><strong>Add Campaign</strong></div>
                <div class="collapsible-body">
                    <div class="container">
                        @using (Html.BeginForm("AddorUpdateSponsoredComparison", "Comparison", FormMethod.Post))
                        {
                            <ul class="input-field row m12">
                                <li>
                                    <input id="txtComparisonDescription" type="text" class="validate" data-bind="value : description,css : { invalid : description() == '' }" name="Name" maxlength="100" length="100">
                                    <label for="txtComparisonDescription" data-error="Please enter description">Comparison Description *</label>
                                </li>
                                <li class="input-field">
                                    <i class="material-icons prefix margin-top15">date_range</i>
                                    <input type="date" id="dtStartDate" class="datepicker margin-left5" data-bind="css : {invalid : startDateTime()==''}, value:startDate" />
                                    <label for="dtStartDate" data-error="Please enter start date">Campaign Start Date *</label>
                                    <input type="time" id="dtStartTime" value="" data-bind="value : startTime" class="timepicker" />
                                    <input type="hidden" name="StartDate" data-bind="value : startDateTime " />
                                </li>
                                <li class="input-field">
                                    <i class="material-icons prefix margin-top15">date_range</i>
                                    <input type="date" id="dtEndDate" class="datepicker margin-left5" data-bind="css : {invalid : endDateTime()==''},value:endDate" />
                                    <label for="dtEndDate" data-error="Please enter end date">Campaign End Date *</label>
                                    <input type="time" id="dtEndTime" data-bind="value : endTime" class="timepicker" />
                                    <input type="hidden" name="EndDate" data-bind="value : endDateTime " />
                                </li>
                                <li class="input-field">
                                    <input id="txtLinkText" type="text" class="validate" name="LinkText" data-bind="value : linkText">
                                    <label for="txtLinkText">Link Text</label>
                                </li>
                                <li class="input-field">
                                    <input id="txtLinkUrl" type="text" class="validate" name="LinkUrl" data-bind="value : linkUrl">
                                    <label for="txtLinkUrl">Link Url</label>
                                </li>
                                <li class="input-field">
                                    <input id="txtBikeNameImpression" type="text" class="validate" name="NameImpressionUrl" data-bind="value : nameImpression">
                                    <label for="txtBikeNameImpression">Bike Name Impression/GA</label>
                                </li>
                                <li class="input-field">
                                    <input id="txtBikeImageImpression" type="text" class="validate" data-bind="value : imgImpression" name="ImgImpressionUrl">
                                    <label for="txtBikeImageImpression">Bike Image Impression/GA</label>
                                </li>
                                <li class="input-field">
                                    <button data-bind="click: addSponsoredComparison,value : currentId" class="btn waves-effect waves-light margin-bottom20" type="submit" name="Id">
                                        Add Campaign
                                    </button>
                                </li>
                            </ul>
                        }
                    </div>

                </div>

            </li>
        </ul>
    </div>

    <div id="msgBox" class="errorMessage margin-top10"></div>

</div>

<script type="text/javascript">
    var $dateInput = $('.datepicker').pickadate({
        selectMonths: true, // Creates a dropdown to control month
        closeOnSelect: true,
        onSet: function (ele) { if (ele.select) { this.close(); } }
    });


    var pgContainer = $("#sponsoredComparisons"), vmSponsoredComparison;
    var searchComparisons = $("#searchComparisons"), searchStatusChks = searchComparisons.find("input:checkbox");
    //$('.timepicker').pickatime({
    //    default: 'now', // Set default time: 'now', '1:30AM', '16:30'
    //    fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
    //    twelvehour: true, // Use AM/PM or 24-hour format
    //    donetext: 'OK', // text for done-button
    //    cleartext: 'Clear', // text for clear-button
    //    canceltext: 'Cancel', // Text for cancel-button
    //    autoclose: false, // automatic close timepicker
    //    ampmclickable: true, // make AM PM clickable
    //    aftershow: function () { } //Function for after opening timepicker
    //});


    var sponsoredComparisonManagement = function () {
        var self = this;
        self.description = ko.observable();
        self.startDateTime = ko.observable();
        self.endDateTime = ko.observable();
        self.linkText = ko.observable();
        self.linkUrl = ko.observable();
        self.nameImpression = ko.observable();
        self.imgImpression = ko.observable();
        self.startTime = ko.observable();
        self.endTime = ko.observable();
        self.startDate = ko.observable();
        self.endDate = ko.observable();
        self.currentId = ko.observable(0);

        self.init = function () {
            var compStatus = window.location.search;
            if (/comparisonType/ig.test(compStatus)) {
                statusLst = compStatus.split("=")[1];
                statusLst = statusLst != "" ? decodeURIComponent(statusLst).split(",") : null;
                if (statusLst && statusLst.length > 0) {
                    $.each(statusLst, function (i) {
                        searchComparisons.find("input:checkbox[data-value=" + statusLst[i] + "]").prop("checked", true);
                    });
                }
                else {
                    searchComparisons.find("input:checkbox[data-value=2]").prop("checked", true);
                }
            }
            else {
                searchComparisons.find("input:checkbox[data-value=2]").prop("checked", true);
            }
            $(".picker + label").each(function () {
                $(this).insertBefore($(this).prev());
            });

            var tab = pgContainer.find(".collapsible-header").first();
            if (!tab.hasClass("active")) {
                tab.click();
            }

        }();

        self.checkAllStatus = function (d, e) {
            var ele = $(e.currentTarget);
            if (ele.prop("checked")) {
                searchStatusChks.prop("checked", true);
            }
            else {
                searchStatusChks.prop("checked", false);
            }
            return true;
        };

        self.searchSponsoredCamparisons = function (d, e) {
            var ele = $(e.currentTarget);
            var statusLst = "";
            searchStatusChks.each(function () {
                if ($(this).prop("checked")) {
                    statusLst += ("," + $(this).data("value"));
                }

            });
            statusLst = statusLst.substr(1);
            ele.val(statusLst);
            return true;
        };

        self.startDate.subscribe(function () {
            self.startDateTime((self.startDate() || '') + " " + (self.startTime() || ''));
        });
        self.startTime.subscribe(function () {
            self.startDateTime((self.startDate() || '') + " " + (self.startTime() || ''));
        });

        self.endDate.subscribe(function () {
            self.endDateTime((self.endDate() || '') + " " + (self.endTime() || ''));
        });
        self.endTime.subscribe(function () {
            self.endDateTime((self.endDate() || '') + " " + (self.endTime() || ''));
        });

        self.addSponsoredComparison = function () {
            if (self.validateAddComparison()) {
                return true;
            }
            return false;
        }

        self.validateAddComparison = function () {
            var isValid = false;
            if (self.description() && self.description().trim() != "") {
                isValid = true;
            }
            else self.description("");

            if (self.startDateTime() && self.startDateTime().trim() != "") {
                isValid = true;
            }
            else {
                self.startDateTime("");
                isValid = false;
            }

            if (self.endDateTime() && self.endDateTime().trim() != "") {
                isValid = true;
            }
            else {
                self.endDateTime("");
                isValid = false;
            }
            return isValid;
        }

        self.editSponsoredCamparison = function (d, e) {
            var ele = $(e.currentTarget).closest("tr");
            self.currentId(ele.find("td[data-cell=id]").text());
            self.description(ele.find("td[data-cell=description]").text());
            self.startDateTime(ele.find("td[data-cell=startdate]").text());
            self.endDateTime(ele.find("td[data-cell=enddate]").text());
            self.linkUrl(ele.find("td[data-cell=linkurl]").text());
            self.linkText(ele.find("td[data-cell=linktext]").text());
            self.nameImpression(ele.find("td[data-cell=nameimpression]").text());
            self.imgImpression(ele.find("td[data-cell=imgimpression]").text());

            //setdate
            var tempDateTime = new Date(self.startDateTime());
            $("#dtStartDate").pickadate('picker').set('select', tempDateTime);
            self.startTime(tempDateTime.getHours() + ":" + tempDateTime.getMinutes());

            tempDateTime = new Date(self.endDateTime());
            $("#dtEndDate").pickadate('picker').set('select', tempDateTime);
            self.endTime(tempDateTime.getHours() + ":" + tempDateTime.getMinutes());

            Materialize.updateTextFields();
            var tab = pgContainer.find(".collapsible-header").last();
            if (!tab.hasClass("active")) {
                tab.click();
            }

        };

        self.changeComparisonStatus = function (d,e) {
            var ele = $(e.currentTarget), status = ele.data("status");

        };

    };

    $(function () {
        vmSponsoredComparison = new sponsoredComparisonManagement();
        ko.applyBindings(vmSponsoredComparison, pgContainer[0]);
    });
</script>