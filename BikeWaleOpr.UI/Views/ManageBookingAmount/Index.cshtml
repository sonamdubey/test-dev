@model BikewaleOpr.Models.DealerBookingAmount.DealerBookingAmountVM
@{
    ViewBag.Title = Model.PageTitle;
    ViewBag.PageTitle = Model.PageTitle;
}
@if (Model != null && Model.DealerBookingAmountData != null)
{
    <div id="manageBookingAmount" class="row" data-message="@Model.DealerBookingAmountData.UpdateMessage">
        <div class="col m9 margin-top10">
            @if (Model.DealerBookingAmountData.BookingAmountList != null && Model.DealerBookingAmountData.BookingAmountList.Count() > 0)
                {
            <table id="bookingAmountList" class="bordered highlight z-depth-3">
                <tr class="center-align">
                    <th>Id</th>
                    <th>Make</th>
                    <th>Model</th>
                    <th>Version</th>
                    <th>Updated By</th>
                    <th>Updated On</th>
                    <th>Amount</th>
                    <th>Active</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
                @foreach (var obj in Model.DealerBookingAmountData.BookingAmountList)
                    {
                        if (obj.BikeMake != null && obj.BikeModel != null && obj.BikeVersion != null && obj.BookingAmountBase != null)
                        {
                    <tr data-id="@obj.BookingAmountBase.Id" data-makeid="@obj.BikeMake.MakeId" data-modelid="@obj.BikeModel.ModelId"
                        data-versionid="@obj.BikeVersion.VersionId" data-amount="@obj.BookingAmountBase.Amount" data-isactive="@obj.BookingAmountBase.IsActive">
                        <td>@obj.BookingAmountBase.Id</td>
                        <td>@obj.BikeMake.MakeName</td>
                        <td>@obj.BikeModel.ModelName</td>
                        <td>@obj.BikeVersion.VersionName</td>
                        <td>@obj.LastUpdatedBy</td>
                        <td>@obj.UpdatedOn.ToString("dd/MM/yyyy")</td>
                        <td>@obj.BookingAmountBase.Amount</td>
                        <td><i class="isActive material-icons @(obj.BookingAmountBase.IsActive?"icon-green":"icon-red")">@(obj.BookingAmountBase.IsActive ? "done" : "close")</i></td>
                        <td><a class="tooltipped" href="javascript:void(0)" data-delay="100" data-tooltip="Edit Booking Amount" rel="nofollow" data-bind="event: {click: function(d, e) { editBooking(e) }}"><i class="material-icons icon-blue">mode_edit</i></a></td>
                        <td><a class="tooltipped" href="javascript:void(0)" data-delay="100" data-tooltip="Delete Booking Amount" rel="nofollow" data-bind="event: {click: function(d, e) { deleteBooking(e) }}"><i class="material-icons icon-red">delete</i></a></td>
                    </tr>
                        }
                    }
            </table>
            }
        </div>
        <div class="col m3">
            @using (Html.BeginForm("Add", "ManageBookingAmount", FormMethod.Post))
            {
                <input id="dealerId" name="DealerId" value="@Model.DealerId" type="hidden" />
                <input id="bookingId" name="BookingAmountBase.Id" type="hidden" />
                <input id="dealerName" name="DealerName" value="@Model.DealerName" type="hidden" />
                <input id="cityId" name="CityId" value="@Model.CityId" type="hidden">
                <input id="makeId" name="MakeId" value="@Model.MakeId" type="hidden">
                <input id="requestType" type="hidden" value="New" />
                <div>
                    <ul class="collapsible margin-top10" data-collapsible="accordion">
                        @Html.Partial("~/Views/DealerBikePrice/_SelectOperationCollapsable.cshtml", Model.DealerOperationParams)
                        <li>
                            <div class="collapsible-header booking-amount-collapsible">
                                <strong>
                                    Add New Booking Amount
                                </strong>
                            </div>
                            <div class="collapsible-body">
                                <div class="container">
                                    <div class="row">
                                        <div class="input-field col m12">
                                            <select id="selectMake" name="BikeMake.MakeId" data-bind="value: selectedMakeId, event: {change: getModels} ">
                                                <option value="" disabled selected>Select Make</option>
                                                @if (Model.DealerBookingAmountData.BikeMakeList != null && Model.DealerBookingAmountData.BikeMakeList.Count() > 0)
                                                {
                                                    foreach (var state in Model.DealerBookingAmountData.BikeMakeList)
                                                    {
                                                        <option value="@state.MakeId">@state.MakeName</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="input-field col m12">
                                            <select id="selectModel" class="disabled" name="BikeModel.ModelId" data-bind="value: selectedModelId, event: {change: getVersions}, options: models, optionsText: 'modelName', optionsValue: 'modelId', optionsCaption: 'Select Model'">
                                                <option value="" disabled selected>Select Model</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="input-field col m12">
                                            <select id="selectVersion" class="disabled" name="BikeVersion.VersionId" data-bind="options: versions, optionsText: 'versionName', optionsValue: 'versionId', value: selectedVersionId, optionsCaption: 'Select Version'">
                                                <option value="" disabled selected>Select Version</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="input-field col m12">
                                            <input id="bookingAmount" name="BookingAmountBase.Amount" type="number" class="validate" data-bind="textInput: bookingAmount, css:bookingMsg()!=''?'invalid':'' " />
                                            <label for="BookingAmountBase.Amount" data-error="" data-bind="attr:{'data-error': bookingMsg}, css:bookingMsg()!=''?'active':''">Enter Booking Amount</label>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="input-field col m6">
                                            <button id="btnSave" class="btn waves-effect waves-light" type="submit" name="save" data-bind="event : { click : function() { return validateBookingSubmit();}}">
                                                Save
                                            </button>
                                        </div>
                                        <div class="input-field col m6">
                                            <button id="cancelEdit" class="btn waves-effect waves-light red hide" name="cancel" type="button" data-bind="event : { click : cancelEdit}">
                                                Cancel
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col m4">
            <div class="card red lighten-5">
                <div class="card-content red-text">
                    <p>No data present!</p>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/src/DealerPricing/dealeroperationcollapsable.js"></script>
<script defer src="~/src/manageBookingAmount.js" type="text/javascript"></script>
