@model String
@{
    Layout = null;
}
<div class="row" id="updatablePrices">
    <div id="pricesdata"class="col m4 offset-m4">
        <div class="card">
            <div class="card-content ">
                @if(Model != null)
                {
                    <span class="card-title">@Model Prices can be Updated</span>
                }                
            </div>
            <div class="card-action">
                <button class="btn waves-effect waves-light" data-bind="click: updatePrices">
                    Start Uploading Prices
                </button>
            </div>
        </div>
    </div>
    <div class="center">
        <div id="preloader" class="preloader-wrapper big active center">
            <div class="spinner-layer spinner-green-only">
                <div class="circle-clipper left">
                    <div class="circle"></div>
                </div><div class="gap-patch">
                    <div class="circle"></div>
                </div><div class="circle-clipper right">
                    <div class="circle"></div>
                </div>
            </div>
        </div>
    </div>    
</div>
<script>
    var pricesViewModel = function () {
        var self = this;
        var makeId = $('#selectMake').val();
        self.updatePrices = function () {
            $('#preloader').fadeIn(1);
            $('#pricesdata').fadeOut(1);
            $.get("/prices/bulkupload/make/"+makeId+"/uploadprices/save/", function (data) {
                $('#preloader').fadeOut({
                    duration: 1,
                    complete: function () {
                        if (data == "True") {
                            window.onbeforeunload = function (e) { }
                            Materialize.toast("Prices are updated successfully", 5000);
                            location.href = window.location.hostname + "/prices/bulkupload/";
                            setTimeout(location.reload.bind(location), 5000);
                        }
                        else {
                            Materialize.toast("Updation Failed", 6000);
                            $('#pricesdata').fadeIn(1);
                        }
                    }
                });
            });
        }
    }
    $(function () {
        $('#step_2,#step_3,#step_4').addClass("active");
        ko.applyBindings(pricesViewModel, $('#updatablePrices')[0]);
        $('#preloader').fadeOut(1);
        window.onbeforeunload = function (e) {
            return '';
        };
        $(window).unload(function () {
            alert('Handler for .unload() called.');
        });
        
    });
    
</script>

