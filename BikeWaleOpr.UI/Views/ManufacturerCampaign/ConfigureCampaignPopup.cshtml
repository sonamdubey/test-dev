@model  Bikewale.ManufacturerCampaign.Entities.Models.ManufacturerCampaignPopupVM
@using Bikewale.ManufacturerCampaign.Entities;
@{
    ViewBag.Title = "Configure Campaign Popup";
    ViewBag.PageTitle = "Configure Popup for Manufacturer Campaign";
}

@Html.Partial("~/Views/ManufacturerCampaign/_NavigationBreadcrumbs.cshtml", Model.NavigationWidget)

@if (Model != null && Model.objPopup != null)
{
    <form action="/manufacturercampaign/save/popup/" method="post" id="configPopUp">
        <div class="row">
            <div class="input-field col s3 offset-s4">
                <input id="txtPopupHeading" type="text" class="validate" maxlength="100" name="PopupHeading" value="@Model.objPopup.PopupHeading" data-bind="disable : isDefaultHeading">
                <label for="txtPopupHeading">Popup Heading</label>
                </div> 
            <div class="input-field col m3 offset-s4">
                <input id="chkDefaultHeading" type="checkbox" class="filled-in" data-bind="checked : isDefaultHeading">
                <label for="chkDefaultHeading" class="black-text">Use Default</label>
            </div>
        </div>

        <div class="row">
            <div class="input-field col s3 offset-s4">
                <input id="txtPopupDescription" type="text" class="validate" maxlength="100" name="PopupDescription" value="@Model.objPopup.PopupDescription" data-bind="disable : isDefaultDesc">
                <label for="txtPopupDescription">Popup Description</label>
            </div>
            <div class="input-field col m3 offset-s4">
                <input id="chkDefaultDescription" type="checkbox" class="filled-in" data-bind="checked : isDefaultDesc">
                <label for="chkDefaultDescription" class="black-text">Use Default</label>
            </div>
        </div>

        <div class="row">
            <div class="input-field col s3 offset-s4">
                <input id="txtpopupMessage" type="text" class="validate" maxlength="4096" name="PopupSuccessMessage" value="@Model.objPopup.PopupSuccessMessage" data-bind="disable : isDefaultMsg">
                <label for="txtpopupMessage">Popup Success Message</label>
            </div>
            <div class="input-field col m3 offset-s4">
                <input id="chkDefaultMessage" type="checkbox" class="filled-in" data-bind="checked : isDefaultMsg">
                <label for="chkDefaultMessage" class="black-text">Use Default</label>
            </div>
        </div>

        <div class="row">
            <div class="col offset-s4">
                <label>Email Options</label>
                @Html.DropDownListFor(model => model.objPopup.EmailOption, EnumHelper.GetSelectList(typeof(EnumEmailOptions)), new {Name= "EmailOption"})
            </div>
            <div class="col s2 input-field">
                <input type="checkbox" class="filled-in" id="chkPincode" name="PinCodeRequired" @(Model.objPopup.PinCodeRequired ? "checked value=true" : "") />
                <label for="chkPincode">Pincode Required</label>              
            </div>
            <div class="col s2 input-field">
                <input type="checkbox" class="filled-in" id="chkDealer" name="DealerRequired" @(Model.objPopup.DealerRequired ? "checked value=true" : "") />
                <label for="chkDealer">Dealer Required</label>
            </div>
        </div>

        <div class="row">
            <div class="col offset-s4">
                <button  type="submit" name="submit" id="btnConfigurePopup" data-bind="click: validateProperties" class="btn waves-effect waves-light" >Configure popup</button>
            </div>
        </div>
        <input type="hidden" name="CampaignId" id="inputCampaignId" value="@Model.objPopup.CampaignId" />
        <input type="hidden" name="DealerId" id="inputCampaignId" value="@Model.NavigationWidget.DealerId" />

    </form>
}
<script type="text/javascript">
    var heading, desc, msg;


        var popUpViewModel = function () {
            var self = this;
            self.isDefaultHeading = ko.observable(false);
            self.isDefaultDesc = ko.observable(false);
            self.isDefaultMsg = ko.observable(false);


            self.validateProperties = function () {
                var validate = true;
                if (!$('#chkDefaultHeading').is(':checked')) {
                    if ($('#txtPopupHeading').val()=="") {
                        validate = false;
                        Materialize.toast('Please Enter PopupHeading', 5000);
                    }

                }
                if (!$('#chkDefaultDescription').is(':checked')) {
                    if ($('#txtPopupDescription').val() == "") {
                        validate = false;
                        Materialize.toast('Please Enter PopupDescription', 5000);
                    }
                }
                if (!$('#chkDefaultMessage').is(':checked')) {
                    if ($('#txtpopupMessage').val() == "") {
                        validate = false;
                        Materialize.toast('Please Enter PopupMessage', 5000);
                    }
                    $('#txtpopupMessage').val('<div class="html_ko">' + $('#txtpopupMessage').val() + '</div>');
                }
                return validate;
            };


        };

        popUpVM = new popUpViewModel();

        $(document).ready(function () {

        heading = $('#txtPopupHeading').val();
        desc = $('#txtPopupDescription').val();
        msg = $('#txtpopupMessage').val();

        if (heading == "" || heading== undefined)
            popUpVM.isDefaultHeading(true);

        if (desc == "" || desc==undefined)
            popUpVM.isDefaultDesc(true);

        if (msg == "" || msg == undefined)
            popUpVM.isDefaultMsg(true);
        
        ko.applyBindings(popUpVM, $('#configPopUp')[0]);
    });
</script>